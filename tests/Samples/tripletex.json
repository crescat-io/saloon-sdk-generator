{
    "swagger": "2.0",
    "info": {
        "description": "## Usage\n\n- **Download the spec** [swagger.json](/v2/swagger.json) file, it is a [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification).\n\n- **Generating a client** can easily be done using tools like [swagger-codegen](https://github.com/swagger-api/swagger-codegen) or other that accepts [OpenAPI Specification](https://github.com/OAI/OpenAPI-Specification) specs.\n    - For swagger codegen it is recommended to use the flag: **--removeOperationIdPrefix**. \n      Unique operation ids are about to be introduced to the spec, and this ensures forward compatibility - and results in less verbose generated code.\n\n\n## Overview\n\n- Partial resource updating is done using the `PUT` method with optional fields instead of the `PATCH` method.\n\n- **Actions** or **commands** are represented in our RESTful path with a prefixed `:`. Example: `/v2/hours/123/:approve`.\n\n- **Summaries** or **aggregated** results are represented in our RESTful path with a prefixed `>`. Example: `/v2/hours/>thisWeeksBillables`.\n\n- **Request ID** is a key found in all responses in the header with the name `x-tlx-request-id`. For validation and error responses it is also in the response body. If additional log information is absolutely necessary, our support division can locate the key value.\n\n- **version** This is a revision number found on all persisted resources. If included, it will prevent your PUT/POST from overriding any updates to the resource since your GET.\n\n- **Date** follows the **[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)** standard, meaning the format `YYYY-MM-DD`.\n\n- **DateTime** follows the **[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)** standard, meaning the format `YYYY-MM-DDThh:mm:ss`.\n\n- **Searching** is done by entering values in the optional fields for each API call. The values fall into the following categories: range, in, exact and like.\n\n- **Missing fields** or even **no response data** can occur because result objects and fields are filtered on authorization.\n\n- **See [GitHub](https://github.com/Tripletex/tripletex-api2) for more documentation, examples, changelog and more.**\n\n- **See [FAQ](https://tripletex.no/execute/docViewer?articleId=906&language=0) for additional information.**\n\n\n## Authentication\n\n- **Tokens:** The Tripletex API uses 3 different tokens\n\n  - **consumerToken** is a token provided to the consumer by Tripletex after the API 2.0 registration is completed.\n\n  - **employeeToken** is a token created by an administrator in your Tripletex account via the user settings and the tab \"API access\". Each employee token must be given a set of entitlements. [Read more here.](https://tripletex.no/execute/docViewer?articleId=1505&languageId=0)\n\n  - **sessionToken** is the token from `/token/session/:create` which requires a consumerToken and an employeeToken created with the same consumer token, but not an authentication header.\n\n- **Authentication** is done via [Basic access authentication](https://en.wikipedia.org/wiki/Basic_access_authentication)\n\n  - **username** is used to specify what company to access.\n\n    - `0` or blank means the company of the employee.\n\n    - Any other value means accountant clients. Use `/company/>withLoginAccess` to get a list of those.\n\n  - **password** is the **sessionToken**.\n\n  - If you need to create the header yourself use `Authorization: Basic <encoded token>` where `encoded token` is the string `<target company id or 0>:<your session token>` Base64 encoded.\n\n\n## Tags\n\n- `[BETA]` This is a beta endpoint and can be subject to change.\n- `[DEPRECATED]` Deprecated means that we intend to remove/change this feature or capability in a future \"major\" API release. We therefore discourage all use of this feature/capability.\n\n\n## Fields\n\nUse the `fields` parameter to specify which fields should be returned. This also supports fields from sub elements, done via `<field>(<subResourceFields>)`. `*` means all fields for that resource. Example values:\n- `project,activity,hours`  returns `{project:..., activity:...., hours:...}`.\n- just `project` returns `\"project\" : { \"id\": 12345, \"url\": \"tripletex.no/v2/projects/12345\"  }`.\n- `project(*)` returns `\"project\" : { \"id\": 12345 \"name\":\"ProjectName\" \"number.....startDate\": \"2013-01-07\" }`.\n- `project(name)` returns `\"project\" : { \"name\":\"ProjectName\" }`.\n- All resources and some subResources :  `*,activity(name),employee(*)`.\n\n\n## Sorting\n\nUse the `sorting` parameter to specify sorting. It takes a comma separated list, where a `-` prefix denotes descending. You can sort by sub object with the following format: `<field>.<subObjectField>`. Example values:\n- `date`\n- `project.name`\n- `project.name, -date`\n\n\n## Changes\n\nTo get the changes for a resource, `changes` have to be explicitly specified as part of the `fields` parameter, e.g. `*,changes`.\nThere are currently two types of change available: \n- `CREATE` for when the resource was created\n- `UPDATE` for when the resource was updated\n\n**NOTE**\n> For objects created prior to October 24th 2018 the list may be incomplete, but will always contain the CREATE and the last change (if the object has been changed after creation).\n\n\n## Rate limiting\n\nRate limiting is performed on the API calls for an employee for each API consumer. Status regarding the rate limit is returned as headers:\n- `X-Rate-Limit-Limit` - The number of allowed requests in the current period.\n- `X-Rate-Limit-Remaining` - The number of remaining requests.\n- `X-Rate-Limit-Reset` - The number of seconds left in the current period.\n\nOnce the rate limit is hit, all requests will return HTTP status code `429` for the remainder of the current period.\n\n\n## Response envelope\n\n#### Multiple values\n\n```json\n{\n  \"fullResultSize\": ###, // {number} [DEPRECATED]\n  \"from\": ###, // {number} Paging starting from\n  \"count\": ###, // {number} Paging count\n  \"versionDigest\": \"###\", // {string} Hash of full result, null if no result\n  \"values\": [...{...object...},{...object...},{...object...}...]\n}\n```\n\n#### Single value\n\n```json\n{\n  \"value\": {...single object...}\n}\n```\n\n\n## WebHook envelope\n\n```json\n{\n  \"subscriptionId\": ###, // Subscription id\n  \"event\": \"object.verb\", // As listed from /v2/event/\n  \"id\": ###, // Id of object this event is for\n  \"value\": {... single object, null if object.deleted ...}\n}\n```\n\n\n## Error/warning envelope\n\n```json\n{\n  \"status\": ###, // {number} HTTP status code\n  \"code\": #####, // {number} internal status code of event\n  \"message\": \"###\", // {string} Basic feedback message in your language\n  \"link\": \"###\", // {string} Link to doc\n  \"developerMessage\": \"###\", // {string} More technical message\n  \"validationMessages\": [ // {array} List of validation messages, can be null\n    {\n      \"field\": \"###\", // {string} Name of field\n      \"message\": \"###\" // {string} Validation message for field\n    }\n  ],\n  \"requestId\": \"###\" // {string} Same as x-tlx-request-id \n}\n```\n\n\n## Status codes / Error codes\n\n- **200 OK**\n- **201 Created** - From POSTs that create something new.\n- **204 No Content** - When there is no answer, ex: \"/:anAction\" or DELETE.\n- **400 Bad request** -\n  -  **4000** Bad Request Exception\n  - **11000** Illegal Filter Exception\n  - **12000** Path Param Exception\n  - **24000** Cryptography Exception\n- **401 Unauthorized** - When authentication is required and has failed or has not yet been provided\n  -  **3000** Authentication Exception\n- **403 Forbidden** - When AuthorisationManager says no.\n  -  **9000** Security Exception\n- **404 Not Found** - For resources that does not exist.\n  -  **6000** Not Found Exception\n- **409 Conflict** - Such as an edit conflict between multiple simultaneous updates\n  -  **7000** Object Exists Exception\n  -  **8000** Revision Exception\n  - **10000** Locked Exception\n  - **14000** Duplicate entry\n- **422 Bad Request** - For Required fields or things like malformed payload.\n  - **15000** Value Validation Exception\n  - **16000** Mapping Exception\n  - **17000** Sorting Exception\n  - **18000** Validation Exception\n  - **21000** Param Exception\n  - **22000** Invalid JSON Exception\n  - **23000** Result Set Too Large Exception\n- **429 Too Many Requests** - Request rate limit hit\n- **500 Internal Error** - Unexpected condition was encountered and no more specific message is suitable\n  - **1000** Exception\n",
        "version": "2.70.44",
        "title": "Tripletex API",
        "contact": {
            "name": "tripletex-api2 on GitHub",
            "url": "https://github.com/Tripletex/tripletex-api2"
        }
    },
    "host": "tripletex.no",
    "basePath": "/v2",
    "tags": [
        {
            "name": "activity"
        },
        {
            "name": "addon"
        },
        {
            "name": "deliveryAddress"
        },
        {
            "name": "address"
        },
        {
            "name": "internalautoPayIncomingFileSimulator"
        },
        {
            "name": "internalscheduling"
        },
        {
            "name": "internalsystemMessage"
        },
        {
            "name": "altinninstance"
        },
        {
            "name": "integrationfactoringaprila"
        },
        {
            "name": "asset"
        },
        {
            "name": "internalauth"
        },
        {
            "name": "auth/internal"
        },
        {
            "name": "balanceSheet"
        },
        {
            "name": "balanceSheet2"
        },
        {
            "name": "bank"
        },
        {
            "name": "bankadvice"
        },
        {
            "name": "bank/advice"
        },
        {
            "name": "bankagreements"
        },
        {
            "name": "bankonboarding"
        },
        {
            "name": "bankreconciliation"
        },
        {
            "name": "bank/reconciliation"
        },
        {
            "name": "bankreconciliationfileIdsForIncomingPayments"
        },
        {
            "name": "bankreconciliationmatch"
        },
        {
            "name": "bank/reconciliation/match"
        },
        {
            "name": "bankreconciliationmatchescounter"
        },
        {
            "name": "bankreconciliationpaymentType"
        },
        {
            "name": "bank/reconciliation/paymentType"
        },
        {
            "name": "bankreconciliationsettings"
        },
        {
            "name": "bank/reconciliation/settings"
        },
        {
            "name": "banksettings"
        },
        {
            "name": "bankstatement"
        },
        {
            "name": "bank/statement"
        },
        {
            "name": "bankstatementbalanceestimation"
        },
        {
            "name": "bankstatementtransaction"
        },
        {
            "name": "bank/statement/transaction"
        },
        {
            "name": "upsaleMetric"
        },
        {
            "name": "bringCredentials"
        },
        {
            "name": "checkout"
        },
        {
            "name": "accountantClientAccess"
        },
        {
            "name": "accountingOffice"
        },
        {
            "name": "accountantClientAccesstemplate"
        },
        {
            "name": "clientTasks"
        },
        {
            "name": "todoList"
        },
        {
            "name": "todoListComment"
        },
        {
            "name": "exceptiontest"
        },
        {
            "name": "apiConsumer"
        },
        {
            "name": "tokenconsumer"
        },
        {
            "name": "token/consumer"
        },
        {
            "name": "tokenemployee"
        },
        {
            "name": "token/employee"
        },
        {
            "name": "tokenlogin"
        },
        {
            "name": "loginconnect"
        },
        {
            "name": "tokensession"
        },
        {
            "name": "token/session"
        },
        {
            "name": "company"
        },
        {
            "name": "companysettingsaltinn"
        },
        {
            "name": "company/altinn"
        },
        {
            "name": "companybrreg"
        },
        {
            "name": "companymodules"
        },
        {
            "name": "companysalesmodules"
        },
        {
            "name": "company/salesmodules"
        },
        {
            "name": "companyRepresentative"
        },
        {
            "name": "contact"
        },
        {
            "name": "country"
        },
        {
            "name": "currency"
        },
        {
            "name": "customer"
        },
        {
            "name": "customercategory"
        },
        {
            "name": "customer/category"
        },
        {
            "name": "dashboard"
        },
        {
            "name": "department"
        },
        {
            "name": "distributionKey"
        },
        {
            "name": "division"
        },
        {
            "name": "document"
        },
        {
            "name": "documentArchive"
        },
        {
            "name": "employee"
        },
        {
            "name": "employeecategory"
        },
        {
            "name": "employee/category"
        },
        {
            "name": "employeeemployment"
        },
        {
            "name": "employee/employment"
        },
        {
            "name": "employeeemploymentdetails"
        },
        {
            "name": "employee/employment/details"
        },
        {
            "name": "employeeemploymentemploymentType"
        },
        {
            "name": "employee/employment/employmentType"
        },
        {
            "name": "employeeemploymentleaveOfAbsence"
        },
        {
            "name": "employee/employment/leaveOfAbsence"
        },
        {
            "name": "employeeemploymentleaveOfAbsenceType"
        },
        {
            "name": "employee/employment/leaveOfAbsenceType"
        },
        {
            "name": "employeeemploymentoccupationCode"
        },
        {
            "name": "employee/employment/occupationCode"
        },
        {
            "name": "employeeemploymentremunerationType"
        },
        {
            "name": "employee/employment/remunerationType"
        },
        {
            "name": "employeeemploymentworkingHoursScheme"
        },
        {
            "name": "employee/employment/workingHoursScheme"
        },
        {
            "name": "employeehourlyCostAndRate"
        },
        {
            "name": "employee/hourlyCostAndRate"
        },
        {
            "name": "employeelogininfo"
        },
        {
            "name": "employee/logininfo"
        },
        {
            "name": "employeenextOfKin"
        },
        {
            "name": "employee/nextOfKin"
        },
        {
            "name": "employeepreferences"
        },
        {
            "name": "employee/preferences"
        },
        {
            "name": "employeestandardTime"
        },
        {
            "name": "employee/standardTime"
        },
        {
            "name": "enhetsregisteret"
        },
        {
            "name": "employeeentitlement"
        },
        {
            "name": "employee/entitlement"
        },
        {
            "name": "event"
        },
        {
            "name": "eventexecute"
        },
        {
            "name": "eventtrigger"
        },
        {
            "name": "eventnotification"
        },
        {
            "name": "eventsubscription"
        },
        {
            "name": "event/subscription"
        },
        {
            "name": "feedback"
        },
        {
            "name": "fundingpartner"
        },
        {
            "name": "fundingpartnerqualify"
        },
        {
            "name": "idporten"
        },
        {
            "name": "idportenloginstatus"
        },
        {
            "name": "integrationautopaymessages"
        },
        {
            "name": "bankpayment"
        },
        {
            "name": "integrationlinkmobilityreport"
        },
        {
            "name": "integrationpg2callback"
        },
        {
            "name": "integrationsendgridparse"
        },
        {
            "name": "integrationsendgridevent"
        },
        {
            "name": "bankztlpaymentinternal"
        },
        {
            "name": "inventory"
        },
        {
            "name": "inventoryinventories"
        },
        {
            "name": "inventory/inventories"
        },
        {
            "name": "inventorylocation"
        },
        {
            "name": "inventory/location"
        },
        {
            "name": "inventorystocktaking"
        },
        {
            "name": "inventory/stocktaking"
        },
        {
            "name": "inventorystocktakingproductline"
        },
        {
            "name": "inventory/stocktaking/productline"
        },
        {
            "name": "invoice"
        },
        {
            "name": "invoiceRemark"
        },
        {
            "name": "integrationmaventastatus"
        },
        {
            "name": "invoicepaymentType"
        },
        {
            "name": "invoice/paymentType"
        },
        {
            "name": "invoicedetails"
        },
        {
            "name": "invoice/details"
        },
        {
            "name": "customerinvoiceSendType"
        },
        {
            "name": "invoicesettings"
        },
        {
            "name": "internalinvoiceOverview"
        },
        {
            "name": "killSwitch"
        },
        {
            "name": "ledger"
        },
        {
            "name": "ledgeraccount"
        },
        {
            "name": "ledger/account"
        },
        {
            "name": "ledgeraccountingPeriod"
        },
        {
            "name": "ledger/accountingPeriod"
        },
        {
            "name": "ledgerannualAccount"
        },
        {
            "name": "ledger/annualAccount"
        },
        {
            "name": "ledgercloseGroup"
        },
        {
            "name": "ledger/closeGroup"
        },
        {
            "name": "ledgerpaymentTypeOut"
        },
        {
            "name": "ledger/paymentTypeOut"
        },
        {
            "name": "ledgerposting"
        },
        {
            "name": "ledger/posting"
        },
        {
            "name": "ledgerpostinghistorical"
        },
        {
            "name": "ledgervatType"
        },
        {
            "name": "ledger/vatType"
        },
        {
            "name": "ledgervoucheropeningBalance"
        },
        {
            "name": "ledger/voucher/openingBalance"
        },
        {
            "name": "ledgervoucher"
        },
        {
            "name": "ledger/voucher"
        },
        {
            "name": "ledgervoucherhistorical"
        },
        {
            "name": "ledger/voucher/historical"
        },
        {
            "name": "ledgervoucherinternal"
        },
        {
            "name": "ledgervoucherType"
        },
        {
            "name": "ledger/voucherType"
        },
        {
            "name": "license"
        },
        {
            "name": "lookup"
        },
        {
            "name": "download-app"
        },
        {
            "name": "mobileapp"
        },
        {
            "name": "municipality"
        },
        {
            "name": "subscription"
        },
        {
            "name": "openid"
        },
        {
            "name": "order"
        },
        {
            "name": "orderoffer"
        },
        {
            "name": "orderorderGroup"
        },
        {
            "name": "order/orderGroup"
        },
        {
            "name": "orderorderline"
        },
        {
            "name": "order/orderline"
        },
        {
            "name": "stockoutgoing"
        },
        {
            "name": "paymentTypeAutomation"
        },
        {
            "name": "bankpaymentWidget"
        },
        {
            "name": "pilotFeature"
        },
        {
            "name": "productexternal"
        },
        {
            "name": "product/external"
        },
        {
            "name": "product"
        },
        {
            "name": "productsupplierProduct"
        },
        {
            "name": "product/supplierProduct"
        },
        {
            "name": "productdiscountGroup"
        },
        {
            "name": "product/discountGroup"
        },
        {
            "name": "productinventoryLocation"
        },
        {
            "name": "product/inventoryLocation"
        },
        {
            "name": "productlogisticsSettings"
        },
        {
            "name": "product/logisticsSettings"
        },
        {
            "name": "productgroup"
        },
        {
            "name": "product/group"
        },
        {
            "name": "productgroupRelation"
        },
        {
            "name": "product/groupRelation"
        },
        {
            "name": "productproductPrice"
        },
        {
            "name": "product/productPrice"
        },
        {
            "name": "productsettings"
        },
        {
            "name": "productImport"
        },
        {
            "name": "productImportFields"
        },
        {
            "name": "productImportimportHeaders"
        },
        {
            "name": "productImportFieldsRelation"
        },
        {
            "name": "productImportpotentialProduct"
        },
        {
            "name": "productunit"
        },
        {
            "name": "product/unit"
        },
        {
            "name": "productunitmaster"
        },
        {
            "name": "product/unit/master"
        },
        {
            "name": "project"
        },
        {
            "name": "project/import"
        },
        {
            "name": "projectaccess"
        },
        {
            "name": "projectcategory"
        },
        {
            "name": "project/category"
        },
        {
            "name": "projectonboarding"
        },
        {
            "name": "projectorderline"
        },
        {
            "name": "project/orderline"
        },
        {
            "name": "projectoverview"
        },
        {
            "name": "projectparticipant"
        },
        {
            "name": "project/participant"
        },
        {
            "name": "project{id}period"
        },
        {
            "name": "project/period"
        },
        {
            "name": "projectprojectActivity"
        },
        {
            "name": "project/projectActivity"
        },
        {
            "name": "projectcontrolForm"
        },
        {
            "name": "project/controlForm"
        },
        {
            "name": "projectcontrolFormType"
        },
        {
            "name": "project/controlFormType"
        },
        {
            "name": "projecthourlyRates"
        },
        {
            "name": "project/hourlyRates"
        },
        {
            "name": "projecthourlyRatesprojectSpecificRates"
        },
        {
            "name": "project/hourlyRates/projectSpecificRates"
        },
        {
            "name": "projectresourcePlanBudget"
        },
        {
            "name": "project/resourceplan"
        },
        {
            "name": "projectsettings"
        },
        {
            "name": "project/settings"
        },
        {
            "name": "projecttask"
        },
        {
            "name": "project/task"
        },
        {
            "name": "projecttemplate"
        },
        {
            "name": "project/template"
        },
        {
            "name": "crmprospect"
        },
        {
            "name": "crm/prospect"
        },
        {
            "name": "pickupPoint"
        },
        {
            "name": "purchaseOrder"
        },
        {
            "name": "purchaseOrderAddress"
        },
        {
            "name": "purchaseOrderinternal"
        },
        {
            "name": "transportType"
        },
        {
            "name": "purchaseOrderdeviation"
        },
        {
            "name": "purchaseOrder/deviation"
        },
        {
            "name": "purchaseOrdergoodsReceipt"
        },
        {
            "name": "purchaseOrder/goodsReceipt"
        },
        {
            "name": "purchaseOrdergoodsReceiptLine"
        },
        {
            "name": "purchaseOrder/goodsReceiptLine"
        },
        {
            "name": "purchaseOrderpurchaseOrderIncomingInvoiceRelation"
        },
        {
            "name": "purchaseOrder/purchaseOrderIncomingInvoiceRelation"
        },
        {
            "name": "purchaseOrderorderline"
        },
        {
            "name": "purchaseOrder/orderline"
        },
        {
            "name": "reminder"
        },
        {
            "name": "report"
        },
        {
            "name": "reportauthorization"
        },
        {
            "name": "reportreeldomain"
        },
        {
            "name": "reportreelfunction"
        },
        {
            "name": "reportresult"
        },
        {
            "name": "reportsystem"
        },
        {
            "name": "resourceMessages"
        },
        {
            "name": "internalresourcePlan2permissions"
        },
        {
            "name": "internalresourcePlan2employee"
        },
        {
            "name": "internalresourcePlan2employeejob"
        },
        {
            "name": "internalresourcePlan2modaljobs"
        },
        {
            "name": "internalresourcePlan2project"
        },
        {
            "name": "internalresourcePlan2projectjob"
        },
        {
            "name": "internalresourcePlan2totalTime"
        },
        {
            "name": "resultbudget"
        },
        {
            "name": "saft"
        },
        {
            "name": "salarytype"
        },
        {
            "name": "salary/type"
        },
        {
            "name": "salarytskinternalmeta"
        },
        {
            "name": "tsksalaryv2createSalaryEmployee"
        },
        {
            "name": "tsksalaryv2employee"
        },
        {
            "name": "tsksalaryv2payment"
        },
        {
            "name": "tsksalaryv2settings"
        },
        {
            "name": "tsksalaryv2specification"
        },
        {
            "name": "tsksalaryv2specificationsupplement"
        },
        {
            "name": "tsksalaryv2previousSalary"
        },
        {
            "name": "tsksalaryv2transaction"
        },
        {
            "name": "tsksalaryv2travelExpense"
        },
        {
            "name": "tsksalaryv2type"
        },
        {
            "name": "tsksalaryv2voucher"
        },
        {
            "name": "salarytskinternaltaxcard"
        },
        {
            "name": "salarytskinternalphonePrefixCountry"
        },
        {
            "name": "salarytskinternalreportingCompany"
        },
        {
            "name": "salarytskinternaltaxcardcontact"
        },
        {
            "name": "salarycompilation"
        },
        {
            "name": "salary/compilation"
        },
        {
            "name": "salarypayslip"
        },
        {
            "name": "salary/payslip"
        },
        {
            "name": "salarysettings"
        },
        {
            "name": "salary/settings"
        },
        {
            "name": "salarysettingsholiday"
        },
        {
            "name": "salary/settings/holiday"
        },
        {
            "name": "salarysettingspensionScheme"
        },
        {
            "name": "salary/settings/pensionScheme"
        },
        {
            "name": "salarysettingsstandardTime"
        },
        {
            "name": "salary/settings/standardTime"
        },
        {
            "name": "salaryspecification"
        },
        {
            "name": "salarytransaction"
        },
        {
            "name": "salary/transaction"
        },
        {
            "name": "signatureCombination"
        },
        {
            "name": "snowplow"
        },
        {
            "name": "sse"
        },
        {
            "name": "storebrandonboarding"
        },
        {
            "name": "storebrandonboardingqualify"
        },
        {
            "name": "supplier"
        },
        {
            "name": "supplierInvoice"
        },
        {
            "name": "voucherApprovalListElement"
        },
        {
            "name": "supplierInvoiceAutomation"
        },
        {
            "name": "supportAccessrequestread"
        },
        {
            "name": "testaccountdata"
        },
        {
            "name": "timesheetallocated"
        },
        {
            "name": "timesheet/allocated"
        },
        {
            "name": "timesheetcompanyHoliday"
        },
        {
            "name": "timesheet/companyHoliday"
        },
        {
            "name": "timesheetentry"
        },
        {
            "name": "timesheet/entry"
        },
        {
            "name": "timesheetmonth"
        },
        {
            "name": "timesheet/month"
        },
        {
            "name": "timesheetsalaryProjectTypeSpecification"
        },
        {
            "name": "timesheet/salaryProjectTypeSpecification"
        },
        {
            "name": "timesheetsalaryTypeSpecification"
        },
        {
            "name": "timesheet/salaryTypeSpecification"
        },
        {
            "name": "timesheetsettings"
        },
        {
            "name": "timesheet/settings"
        },
        {
            "name": "timesheettimeClock"
        },
        {
            "name": "timesheet/timeClock"
        },
        {
            "name": "timesheetweek"
        },
        {
            "name": "timesheet/week"
        },
        {
            "name": "travelExpenseaccommodationAllowance"
        },
        {
            "name": "travelExpense/accommodationAllowance"
        },
        {
            "name": "travelExpensecost"
        },
        {
            "name": "travelExpense/cost"
        },
        {
            "name": "travelExpensecostParticipant"
        },
        {
            "name": "travelExpense/costParticipant"
        },
        {
            "name": "travelExpensedrivingStop"
        },
        {
            "name": "travelExpense/drivingStop"
        },
        {
            "name": "travelExpensemileageAllowance"
        },
        {
            "name": "travelExpense/mileageAllowance"
        },
        {
            "name": "travelExpensepassenger"
        },
        {
            "name": "travelExpense/passenger"
        },
        {
            "name": "travelExpenseperDiemCompensation"
        },
        {
            "name": "travelExpense/perDiemCompensation"
        },
        {
            "name": "travelExpense"
        },
        {
            "name": "travelExpenserate"
        },
        {
            "name": "travelExpense/rate"
        },
        {
            "name": "travelExpenserateCategory"
        },
        {
            "name": "travelExpense/rateCategory"
        },
        {
            "name": "travelExpenserateCategoryGroup"
        },
        {
            "name": "travelExpense/rateCategoryGroup"
        },
        {
            "name": "travelExpensecostCategory"
        },
        {
            "name": "travelExpense/costCategory"
        },
        {
            "name": "travelExpensepaymentType"
        },
        {
            "name": "travelExpense/paymentType"
        },
        {
            "name": "travelExpensesettings"
        },
        {
            "name": "travelExpense/settings"
        },
        {
            "name": "travelExpensezone"
        },
        {
            "name": "tripletexAccount"
        },
        {
            "name": "tripletexAccountPrices"
        },
        {
            "name": "tripletexAccountsalesForceAccountInfo"
        },
        {
            "name": "tripletexAccountsalesForceAccountantConnection"
        },
        {
            "name": "tripletexAccountsalesForceEmployeeRole"
        },
        {
            "name": "tripletexAccountsalesForceTripletexSalesModulePurchase"
        },
        {
            "name": "tripletexAccountsalesForceUser"
        },
        {
            "name": "tripletexAccountsalesForceUserOverview"
        },
        {
            "name": "tripletexDashboard"
        },
        {
            "name": "tripletexDashboardbankingSummary"
        },
        {
            "name": "tripletexDashboardgetStartedSummary"
        },
        {
            "name": "tripletexDashboardincomeAndCostSummary"
        },
        {
            "name": "tripletexDashboardinvoiceSummary"
        },
        {
            "name": "tripletexDashboardreminder"
        },
        {
            "name": "tripletexDashboardsalarySummary"
        },
        {
            "name": "tripletexDashboardtask"
        },
        {
            "name": "tripletexDashboardtrial"
        },
        {
            "name": "tripletexDashboardvoucherSummary"
        },
        {
            "name": "vatReturns"
        },
        {
            "name": "vatReturnsvalidateCreate"
        },
        {
            "name": "vatReturnscomment"
        },
        {
            "name": "vismaconnectonboard"
        },
        {
            "name": "vismaconnectwebhook"
        },
        {
            "name": "comment"
        },
        {
            "name": "voucherInboxsendToArchive"
        },
        {
            "name": "voucherInbox"
        },
        {
            "name": "wootric"
        },
        {
            "name": "voucherMessage"
        },
        {
            "name": "voucherStatus"
        },
        {
            "name": "banner"
        },
        {
            "name": "webcallout"
        },
        {
            "name": "webclient"
        },
        {
            "name": "internalfavorites"
        },
        {
            "name": "favorites/internal"
        },
        {
            "name": "internalpilotFeatureuser"
        },
        {
            "name": "internalmenu"
        },
        {
            "name": "internalnews"
        },
        {
            "name": "optionspage"
        },
        {
            "name": "internalcompany-chooser"
        },
        {
            "name": "internalprofile"
        },
        {
            "name": "internalhelpcenter"
        },
        {
            "name": "internalsearch"
        },
        {
            "name": "internalsegmentation"
        },
        {
            "name": "segmentation/internal"
        },
        {
            "name": "internalsupport"
        },
        {
            "name": "internalzendesk-chat"
        },
        {
            "name": "yearEndannualAccounts"
        },
        {
            "name": "yearEndtaxCalculation"
        },
        {
            "name": "yearEndbrreg"
        },
        {
            "name": "yearEnd"
        },
        {
            "name": "yearEndaccountSpecification"
        },
        {
            "name": "yearEndbasicData"
        },
        {
            "name": "yearEndchecklist"
        },
        {
            "name": "yearEnddepreciationRate"
        },
        {
            "name": "yearEnddisposition"
        },
        {
            "name": "yearEnddividend"
        },
        {
            "name": "yearEndenumType"
        },
        {
            "name": "yearEndgenericData"
        },
        {
            "name": "yearEndsharesAndSecurities"
        },
        {
            "name": "yearEndgenericDataRate"
        },
        {
            "name": "yearEndincomeStatement"
        },
        {
            "name": "yearEndmapping"
        },
        {
            "name": "yearEndnote"
        },
        {
            "name": "yearEnd/note"
        },
        {
            "name": "yearEndnoteData"
        },
        {
            "name": "yearEndpersonalIncome"
        },
        {
            "name": "yearEndpropertytaxAdmin"
        },
        {
            "name": "yearEndriskFreeInterestRate"
        },
        {
            "name": "ztlaccount"
        },
        {
            "name": "ztlconsent"
        },
        {
            "name": "ztlonboardingpage"
        },
        {
            "name": "ztlonboarding"
        },
        {
            "name": "ztlsettings"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/activity/{id}": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Find activity by ID.",
                "description": "",
                "operationId": "Activity_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperActivity"
                        }
                    }
                }
            }
        },
        "/activity": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Find activities corresponding with sent data.",
                "description": "",
                "operationId": "Activity_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isProjectActivity",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isGeneral",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isChargeable",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isTask",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseActivity"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "activity"
                ],
                "summary": "Add activity.",
                "description": "",
                "operationId": "Activity_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Activity"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperActivity"
                        }
                    }
                }
            }
        },
        "/activity/list": {
            "post": {
                "tags": [
                    "activity"
                ],
                "summary": "Add multiple activities.",
                "description": "",
                "operationId": "ActivityList_postList",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Activity"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseActivity"
                        }
                    }
                }
            }
        },
        "/activity/>forTimeSheet": {
            "get": {
                "tags": [
                    "activity"
                ],
                "summary": "Find applicable time sheet activities for an employee on a specific day.",
                "description": "",
                "operationId": "ActivityForTimeSheet_getForTimeSheet",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Project ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseActivity"
                        }
                    }
                }
            }
        },
        "/deliveryAddress/{id}": {
            "get": {
                "tags": [
                    "deliveryAddress"
                ],
                "summary": "Get address by ID.",
                "description": "",
                "operationId": "DeliveryAddress_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDeliveryAddress"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "deliveryAddress"
                ],
                "summary": "Update address.",
                "description": "",
                "operationId": "DeliveryAddress_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DeliveryAddress"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDeliveryAddress"
                        }
                    }
                }
            }
        },
        "/deliveryAddress": {
            "get": {
                "tags": [
                    "deliveryAddress"
                ],
                "summary": "Find addresses corresponding with sent data.",
                "description": "",
                "operationId": "DeliveryAddress_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "addressLine1",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "addressLine2",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "postalCode",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDeliveryAddress"
                        }
                    }
                }
            }
        },
        "/asset/{id}": {
            "get": {
                "tags": [
                    "asset"
                ],
                "summary": "Get asset by ID.",
                "description": "",
                "operationId": "Asset_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAsset"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "asset"
                ],
                "summary": "Update asset.",
                "description": "",
                "operationId": "Asset_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAsset"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "asset"
                ],
                "summary": "Delete asset.",
                "description": "",
                "operationId": "Asset_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/asset": {
            "get": {
                "tags": [
                    "asset"
                ],
                "summary": "Find assets corresponding with sent data.",
                "description": "",
                "operationId": "Asset_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAsset"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "asset"
                ],
                "summary": "Create one asset.",
                "description": "",
                "operationId": "Asset_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Asset"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAsset"
                        }
                    }
                }
            }
        },
        "/asset/list": {
            "post": {
                "tags": [
                    "asset"
                ],
                "summary": "Create several assets.",
                "description": "",
                "operationId": "AssetList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Asset"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAsset"
                        }
                    }
                }
            }
        },
        "/asset/deleteImport": {
            "delete": {
                "tags": [
                    "asset"
                ],
                "summary": "[BETA] Delete most recent assets import.",
                "description": "",
                "operationId": "AssetDeleteImport_deleteImport",
                "parameters": [],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/asset/assetsExist": {
            "get": {
                "tags": [
                    "asset"
                ],
                "summary": "Get if AssetOverview details is empty.",
                "description": "",
                "operationId": "AssetAssetsExist_getAssetsExist",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBoolean"
                        }
                    }
                }
            }
        },
        "/asset/balanceAccountsSum": {
            "get": {
                "tags": [
                    "asset"
                ],
                "summary": "Get balanceAccountsSum.",
                "description": "",
                "operationId": "AssetBalanceAccountsSum_balanceAccountsSum",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTlxNumber"
                        }
                    }
                }
            }
        },
        "/asset/duplicate/{id}": {
            "post": {
                "tags": [
                    "asset"
                ],
                "summary": "Create copy of one asset",
                "description": "",
                "operationId": "AssetDuplicate_postDuplicate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/asset/canDelete/{id}": {
            "get": {
                "tags": [
                    "asset"
                ],
                "summary": "Validate delete asset",
                "description": "",
                "operationId": "AssetCanDelete_canDelete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBoolean"
                        }
                    }
                }
            }
        },
        "/asset/upload": {
            "post": {
                "tags": [
                    "asset"
                ],
                "summary": "[BETA] Upload Excel file with Assets in the standard Tripletex defined format.",
                "description": "",
                "operationId": "AssetUpload_upload",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The Excel file with assets",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "isPreview",
                        "in": "query",
                        "description": "Is the import a preview, or a real import.",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for asset registry. Should always be on the first day of the year.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAssetAccountRow"
                        }
                    }
                }
            }
        },
        "/internal/auth/config": {
            "get": {
                "tags": [
                    "auth/internal"
                ],
                "summary": "Get auth config",
                "description": "",
                "operationId": "InternalAuthConfig_getConfig",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAuthConfigDTO"
                        }
                    }
                }
            }
        },
        "/balanceSheet": {
            "get": {
                "tags": [
                    "balanceSheet"
                ],
                "summary": "Get balance sheet (saldobalanse).",
                "description": "",
                "operationId": "BalanceSheet_search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountNumberFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "accountNumberTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "includeSubProjects",
                        "in": "query",
                        "description": "Should sub projects of the given project be included",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "includeActiveAccountsWithoutMovements",
                        "in": "query",
                        "description": "Should active accounts with no movements be included",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBalanceSheetAccount"
                        }
                    }
                }
            }
        },
        "/bank/{id}": {
            "get": {
                "tags": [
                    "bank"
                ],
                "summary": "Get bank.",
                "description": "",
                "operationId": "Bank_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBank"
                        }
                    }
                }
            }
        },
        "/bank": {
            "get": {
                "tags": [
                    "bank"
                ],
                "summary": "Find bank corresponding with sent data.",
                "description": "",
                "operationId": "Bank_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "registerNumbers",
                        "in": "query",
                        "description": "Bank register number (four digits)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isBankReconciliationSupport",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isAutoPaySupported",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isZtlSupported",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBank"
                        }
                    }
                }
            }
        },
        "/bank/advice/{id}": {
            "put": {
                "tags": [
                    "bank/advice"
                ],
                "summary": "Update advice.",
                "description": "",
                "operationId": "BankAdvice_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankDashboardAdvice"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankDashboardAdvice"
                        }
                    }
                }
            }
        },
        "/bank/advice": {
            "get": {
                "tags": [
                    "bank/advice"
                ],
                "summary": "Find advices for the company context",
                "description": "",
                "operationId": "BankAdvice_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankDashboardAdvice"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/{id}": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Get bank reconciliation.",
                "description": "",
                "operationId": "BankReconciliation_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Update a bank reconciliation.",
                "description": "",
                "operationId": "BankReconciliation_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Delete bank reconciliation by ID.",
                "description": "",
                "operationId": "BankReconciliation_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank/reconciliation/>last": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Get the last created reconciliation by account ID.",
                "description": "",
                "operationId": "BankReconciliationLast_last",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Account ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Find bank reconciliation corresponding with sent data.",
                "description": "",
                "operationId": "BankReconciliation_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountingPeriodId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliation"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Post a bank reconciliation.",
                "description": "",
                "operationId": "BankReconciliation_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/{id}/:adjustment": {
            "put": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Add an adjustment to reconciliation by ID.",
                "description": "",
                "operationId": "BankReconciliationAdjustment_adjustment",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Adjustments",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BankReconciliationAdjustment"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationAdjustment"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/>lastClosed": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Get last closed reconciliation by account ID.",
                "description": "",
                "operationId": "BankReconciliationLastClosed_lastClosed",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Account ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/closedWithUnmatchedTransactions": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Get the last closed reconciliation with unmached transactions by account ID.",
                "description": "",
                "operationId": "BankReconciliationClosedWithUnmatchedTransactions_closedWithUnmatchedTransactions",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Account ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliation"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/previousBankingDay": {
            "get": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Get the last banking day",
                "description": "",
                "operationId": "BankReconciliationPreviousBankingDay_getPreviousBankingDay",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDate"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/transactions/unmatched:csv": {
            "put": {
                "tags": [
                    "bank/reconciliation"
                ],
                "summary": "Get all unmatched transactions in csv format",
                "description": "",
                "operationId": "BankReconciliationTransactionsUnmatchedcsv_csvTransactions",
                "produces": [
                    "text/csv; charset=utf-8",
                    "text/csv; charset=iso-8859-1"
                ],
                "parameters": [
                    {
                        "name": "reconciliationId",
                        "in": "query",
                        "description": "ID for reconciliation",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank/reconciliation/match/{id}": {
            "get": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "Get bank reconciliation match by ID.",
                "description": "",
                "operationId": "BankReconciliationMatch_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationMatch"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "Update a bank reconciliation match by ID.",
                "description": "",
                "operationId": "BankReconciliationMatch_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliationMatch"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationMatch"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "Delete a bank reconciliation match by ID.",
                "description": "",
                "operationId": "BankReconciliationMatch_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank/reconciliation/match/count": {
            "get": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "Get the total number of matches",
                "description": "",
                "operationId": "BankReconciliationMatchCount_count",
                "parameters": [
                    {
                        "name": "bankReconciliationId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInteger"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/match/query": {
            "get": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[INTERNAL] Wildcard search.",
                "description": "",
                "operationId": "BankReconciliationMatchQuery_query",
                "parameters": [
                    {
                        "name": "bankReconciliationId",
                        "in": "query",
                        "description": "The bank reconciliation id",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "approved",
                        "in": "query",
                        "description": "Approved or unapproved matches",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationMatch"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/match": {
            "get": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "Find bank reconciliation match corresponding with sent data.",
                "description": "",
                "operationId": "BankReconciliationMatch_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bankReconciliationId",
                        "in": "query",
                        "description": "List of bank reconciliation IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 5000,
                        "format": "int32"
                    },
                    {
                        "name": "approved",
                        "in": "query",
                        "description": "Approved or unapproved matches",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationMatch"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "Create a bank reconciliation match.",
                "description": "",
                "operationId": "BankReconciliationMatch_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliationMatch"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationMatch"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/match/:suggest": {
            "put": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "Suggest matches for a bank reconciliation by ID.",
                "description": "",
                "operationId": "BankReconciliationMatchSuggest_suggest",
                "parameters": [
                    {
                        "name": "bankReconciliationId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationMatch"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/matches/counter": {
            "get": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[BETA] Get number of matches since last page access.",
                "description": "",
                "operationId": "BankReconciliationMatchesCounter_get",
                "parameters": [
                    {
                        "name": "bankReconciliationId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationMatchesCounter"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bank/reconciliation/match"
                ],
                "summary": "[BETA] Reset the number of matches after the page has been accessed.",
                "description": "",
                "operationId": "BankReconciliationMatchesCounter_post",
                "parameters": [
                    {
                        "name": "bankReconciliationId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank/reconciliation/paymentType/{id}": {
            "get": {
                "tags": [
                    "bank/reconciliation/paymentType"
                ],
                "summary": "Get payment type by ID.",
                "description": "",
                "operationId": "BankReconciliationPaymentType_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationPaymentType"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/paymentType": {
            "get": {
                "tags": [
                    "bank/reconciliation/paymentType"
                ],
                "summary": "Find payment type corresponding with sent data.",
                "description": "",
                "operationId": "BankReconciliationPaymentType_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankReconciliationPaymentType"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/settings": {
            "get": {
                "tags": [
                    "bank/reconciliation/settings"
                ],
                "summary": "Get bank reconciliation settings.",
                "description": "",
                "operationId": "BankReconciliationSettings_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationSettings"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bank/reconciliation/settings"
                ],
                "summary": "Post bank reconciliation settings.",
                "description": "",
                "operationId": "BankReconciliationSettings_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliationSettings"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationSettings"
                        }
                    }
                }
            }
        },
        "/bank/reconciliation/settings/{id}": {
            "put": {
                "tags": [
                    "bank/reconciliation/settings"
                ],
                "summary": "Update bank reconciliation settings.",
                "description": "",
                "operationId": "BankReconciliationSettings_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BankReconciliationSettings"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankReconciliationSettings"
                        }
                    }
                }
            }
        },
        "/bank/statement/{id}": {
            "get": {
                "tags": [
                    "bank/statement"
                ],
                "summary": "Get bank statement.",
                "description": "",
                "operationId": "BankStatement_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankStatement"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bank/statement"
                ],
                "summary": "Delete bank statement by ID.",
                "description": "",
                "operationId": "BankStatement_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/bank/statement": {
            "get": {
                "tags": [
                    "bank/statement"
                ],
                "summary": "Find bank statement corresponding with sent data.",
                "description": "",
                "operationId": "BankStatement_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File format",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "DNB_CSV",
                            "EIKA_TELEPAY",
                            "SPAREBANK1_TELEPAY",
                            "VISMA_ACCOUNT_STATEMENT",
                            "HANDELSBANKEN_TELEPAY",
                            "SPAREBANKEN_VEST_TELEPAY",
                            "NORDEA_CSV",
                            "TRANSFERWISE",
                            "SPAREBANKEN_SOR_TELEPAY",
                            "SPAREBANKEN_OST_TELEPAY",
                            "DANSKE_BANK_CSV",
                            "CULTURA_BANK_TELEPAY",
                            "SBANKEN_PRIVAT_CSV",
                            "HAUGESUND_SPAREBANK_CSV",
                            "VISMA_ACCOUNT_STATEMENT_PSD2",
                            "SBANKEN_BEDRIFT_CSV",
                            "LANDKREDITT_TELEPAY",
                            "ZTL"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankStatement"
                        }
                    }
                }
            }
        },
        "/bank/statement/import": {
            "post": {
                "tags": [
                    "bank/statement"
                ],
                "summary": "Upload bank statement file.",
                "description": "",
                "operationId": "BankStatementImport_importBankStatement",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "bankId",
                        "in": "query",
                        "description": "Bank ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Account ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "description": "External ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File format",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "DNB_CSV",
                            "EIKA_TELEPAY",
                            "SPAREBANK1_TELEPAY",
                            "VISMA_ACCOUNT_STATEMENT",
                            "HANDELSBANKEN_TELEPAY",
                            "SPAREBANKEN_VEST_TELEPAY",
                            "NORDEA_CSV",
                            "TRANSFERWISE",
                            "SPAREBANKEN_SOR_TELEPAY",
                            "SPAREBANKEN_OST_TELEPAY",
                            "DANSKE_BANK_CSV",
                            "CULTURA_BANK_TELEPAY",
                            "SBANKEN_PRIVAT_CSV",
                            "HAUGESUND_SPAREBANK_CSV",
                            "VISMA_ACCOUNT_STATEMENT_PSD2",
                            "SBANKEN_BEDRIFT_CSV",
                            "LANDKREDITT_TELEPAY",
                            "ZTL"
                        ]
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The bank statement file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankStatement"
                        }
                    }
                }
            }
        },
        "/bank/statement/transaction/{id}": {
            "get": {
                "tags": [
                    "bank/statement/transaction"
                ],
                "summary": "Get bank transaction by ID.",
                "description": "",
                "operationId": "BankStatementTransaction_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBankTransaction"
                        }
                    }
                }
            }
        },
        "/bank/statement/transaction": {
            "get": {
                "tags": [
                    "bank/statement/transaction"
                ],
                "summary": "Find bank transaction corresponding with sent data.",
                "description": "",
                "operationId": "BankStatementTransaction_search",
                "parameters": [
                    {
                        "name": "bankStatementId",
                        "in": "query",
                        "description": "Bank statement ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseBankTransaction"
                        }
                    }
                }
            }
        },
        "/bank/statement/transaction/{id}/details": {
            "get": {
                "tags": [
                    "bank/statement/transaction"
                ],
                "summary": "Get additional details about transaction by ID.",
                "description": "",
                "operationId": "BankStatementTransactionDetails_getDetails",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperObject"
                        }
                    }
                }
            }
        },
        "/accountantClientAccess/requiresLevel4Authorization": {
            "get": {
                "tags": [
                    "accountantClientAccess"
                ],
                "summary": "Check if any of the employee ids requires level 4 authorizations to make changes",
                "description": "",
                "operationId": "AccountantClientAccessRequiresLevel4Authorization_getRequiresLevel4Authorization",
                "parameters": [
                    {
                        "name": "customerIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBoolean"
                        }
                    }
                }
            }
        },
        "/token/consumer/byToken": {
            "get": {
                "tags": [
                    "token/consumer"
                ],
                "summary": "Get consumer token by token string.",
                "description": "",
                "operationId": "TokenConsumerByToken_getByToken",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperConsumerToken"
                        }
                    }
                }
            }
        },
        "/token/employee/:create": {
            "put": {
                "tags": [
                    "token/employee"
                ],
                "summary": "Create an employee token. Only selected consumers are allowed",
                "description": "",
                "operationId": "TokenEmployeeCreate_create",
                "parameters": [
                    {
                        "name": "tokenName",
                        "in": "query",
                        "description": "A user defined name for the new token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "consumerName",
                        "in": "query",
                        "description": "The name of the consumer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "The id of the employee",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "companyOwned",
                        "in": "query",
                        "description": "Is the key company owned",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "expirationDate",
                        "in": "query",
                        "description": "Expiration date for the employeeToken",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeeToken"
                        }
                    }
                }
            }
        },
        "/token/session/{token}": {
            "delete": {
                "tags": [
                    "token/session"
                ],
                "summary": "Delete session token.",
                "description": "",
                "operationId": "TokenSession_delete",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The login token string to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/token/session/:create": {
            "put": {
                "tags": [
                    "token/session"
                ],
                "summary": "Create session token.",
                "description": "",
                "operationId": "TokenSessionCreate_create",
                "parameters": [
                    {
                        "name": "consumerToken",
                        "in": "query",
                        "description": "Token of the API consumer",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "employeeToken",
                        "in": "query",
                        "description": "The employee's token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "expirationDate",
                        "in": "query",
                        "description": "Expiration date for the combined token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSessionToken"
                        }
                    }
                }
            }
        },
        "/token/session/>whoAmI": {
            "get": {
                "tags": [
                    "token/session"
                ],
                "summary": "Find information about the current user.",
                "description": "",
                "operationId": "TokenSessionWhoAmI_whoAmI",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLoggedInUserInfoDTO"
                        }
                    }
                }
            }
        },
        "/company/>withLoginAccess": {
            "get": {
                "tags": [
                    "company"
                ],
                "summary": "Returns client customers (with accountant/auditor relation) where the current user has login access (proxy login).",
                "description": "",
                "operationId": "CompanyWithLoginAccess_getWithLoginAccess",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseClient"
                        }
                    }
                }
            }
        },
        "/company/{id}": {
            "get": {
                "tags": [
                    "company"
                ],
                "summary": "Find company by ID.",
                "description": "",
                "operationId": "Company_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompany"
                        }
                    }
                }
            }
        },
        "/company": {
            "put": {
                "tags": [
                    "company"
                ],
                "summary": "Update company information.",
                "description": "",
                "operationId": "Company_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Company"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompany"
                        }
                    }
                }
            }
        },
        "/company/divisions": {
            "get": {
                "tags": [
                    "company"
                ],
                "summary": "[DEPRECATED] Find divisions.",
                "description": "",
                "operationId": "CompanyDivisions_getDivisions",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompany"
                        }
                    }
                }
            }
        },
        "/company/settings/altinn": {
            "get": {
                "tags": [
                    "company/altinn"
                ],
                "summary": "Find Altinn id for login in company.",
                "description": "",
                "operationId": "CompanySettingsAltinn_search",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAltinnCompanyModule"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "company/altinn"
                ],
                "summary": "Update AltInn id and password.",
                "description": "",
                "operationId": "CompanySettingsAltinn_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AltinnCompanyModule"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAltinnCompanyModule"
                        }
                    }
                }
            }
        },
        "/company/salesmodules": {
            "get": {
                "tags": [
                    "company/salesmodules"
                ],
                "summary": "[BETA] Get active sales modules.",
                "description": "",
                "operationId": "CompanySalesmodules_get",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSalesModuleDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "company/salesmodules"
                ],
                "summary": "[BETA] Add (activate) a new sales module.",
                "description": "",
                "operationId": "CompanySalesmodules_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SalesModuleDTO"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalesModuleDTO"
                        }
                    }
                }
            }
        },
        "/contact/{id}": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Get contact by ID.",
                "description": "",
                "operationId": "Contact_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperContact"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "contact"
                ],
                "summary": "Update contact.",
                "description": "",
                "operationId": "Contact_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperContact"
                        }
                    }
                }
            }
        },
        "/contact": {
            "get": {
                "tags": [
                    "contact"
                ],
                "summary": "Find contacts corresponding with sent data.",
                "description": "",
                "operationId": "Contact_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseContact"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "contact"
                ],
                "summary": "Create contact.",
                "description": "",
                "operationId": "Contact_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperContact"
                        }
                    }
                }
            }
        },
        "/contact/list": {
            "delete": {
                "tags": [
                    "contact"
                ],
                "summary": "[BETA] Delete multiple contacts.",
                "description": "",
                "operationId": "ContactList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/country/{id}": {
            "get": {
                "tags": [
                    "country"
                ],
                "summary": "Get country by ID.",
                "description": "",
                "operationId": "Country_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCountry"
                        }
                    }
                }
            }
        },
        "/country": {
            "get": {
                "tags": [
                    "country"
                ],
                "summary": "Find countries corresponding with sent data.",
                "description": "",
                "operationId": "Country_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isDisabled",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCountry"
                        }
                    }
                }
            }
        },
        "/currency/{id}": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Get currency by ID.",
                "description": "",
                "operationId": "Currency_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCurrency"
                        }
                    }
                }
            }
        },
        "/currency": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Find currencies corresponding with sent data.",
                "description": "",
                "operationId": "Currency_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Currency codes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCurrency"
                        }
                    }
                }
            }
        },
        "/currency/{id}/rate": {
            "get": {
                "tags": [
                    "currency"
                ],
                "summary": "Find currency exchange rate corresponding with sent data.",
                "description": "",
                "operationId": "CurrencyRate_getRate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCurrencyExchangeRate"
                        }
                    }
                }
            }
        },
        "/customer/{id}": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Get customer by ID.",
                "description": "",
                "operationId": "Customer_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomer"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "customer"
                ],
                "summary": "Update customer. ",
                "description": "",
                "operationId": "Customer_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomer"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "customer"
                ],
                "summary": "[BETA] Delete customer by ID",
                "description": "",
                "operationId": "Customer_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/customer": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Find customers corresponding with sent data.",
                "description": "",
                "operationId": "Customer_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerAccountNumber",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organizationNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceEmail",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "accountManagerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "changedSince",
                        "in": "query",
                        "description": "Only return elements that have changed since this date and time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCustomer"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Create customer. Related customer addresses may also be created.",
                "description": "",
                "operationId": "Customer_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomer"
                        }
                    }
                }
            }
        },
        "/customer/list": {
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "[BETA] Create multiple customers. Related supplier addresses may also be created.",
                "description": "",
                "operationId": "CustomerList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Customer"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCustomer"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "customer"
                ],
                "summary": "[BETA] Update multiple customers. Addresses can also be updated.",
                "description": "",
                "operationId": "CustomerList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Customer"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCustomer"
                        }
                    }
                }
            }
        },
        "/customer/category/{id}": {
            "get": {
                "tags": [
                    "customer/category"
                ],
                "summary": "Find customer/supplier category by ID.",
                "description": "",
                "operationId": "CustomerCategory_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomerCategory"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "customer/category"
                ],
                "summary": "Update customer/supplier category.",
                "description": "",
                "operationId": "CustomerCategory_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerCategory"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomerCategory"
                        }
                    }
                }
            }
        },
        "/customer/category": {
            "get": {
                "tags": [
                    "customer/category"
                ],
                "summary": "Find customer/supplier categories corresponding with sent data.",
                "description": "",
                "operationId": "CustomerCategory_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCustomerCategory"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "customer/category"
                ],
                "summary": "Add new customer/supplier category.",
                "description": "",
                "operationId": "CustomerCategory_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CustomerCategory"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCustomerCategory"
                        }
                    }
                }
            }
        },
        "/department/{id}": {
            "get": {
                "tags": [
                    "department"
                ],
                "summary": "Get department by ID.",
                "description": "",
                "operationId": "Department_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDepartment"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "department"
                ],
                "summary": "Update department.",
                "description": "",
                "operationId": "Department_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDepartment"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "department"
                ],
                "summary": "Delete department by ID",
                "description": "",
                "operationId": "Department_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/department/query": {
            "get": {
                "tags": [
                    "department"
                ],
                "summary": "Wildcard search.",
                "description": "",
                "operationId": "DepartmentQuery_query",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 25,
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "id, name"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "true - return only inactive departments; false - return only active departments; unspecified - return both types",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDepartment"
                        }
                    }
                }
            }
        },
        "/department": {
            "get": {
                "tags": [
                    "department"
                ],
                "summary": "Find department corresponding with sent data.",
                "description": "",
                "operationId": "Department_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentNumber",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentManagerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "true - return only inactive departments; false - return only active departments; unspecified - return both types",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDepartment"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "department"
                ],
                "summary": "Add new department.",
                "description": "",
                "operationId": "Department_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Department"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDepartment"
                        }
                    }
                }
            }
        },
        "/department/list": {
            "post": {
                "tags": [
                    "department"
                ],
                "summary": "Register new departments.",
                "description": "",
                "operationId": "DepartmentList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Department"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDepartment"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "department"
                ],
                "summary": "Update multiple departments.",
                "description": "",
                "operationId": "DepartmentList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Department"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDepartment"
                        }
                    }
                }
            }
        },
        "/division/{id}": {
            "put": {
                "tags": [
                    "division"
                ],
                "summary": "Update division information.",
                "description": "",
                "operationId": "Division_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDivision"
                        }
                    }
                }
            }
        },
        "/division": {
            "get": {
                "tags": [
                    "division"
                ],
                "summary": "Get divisions.",
                "description": "",
                "operationId": "Division_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDivision"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "division"
                ],
                "summary": "Create division.",
                "description": "",
                "operationId": "Division_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Division"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDivision"
                        }
                    }
                }
            }
        },
        "/division/list": {
            "post": {
                "tags": [
                    "division"
                ],
                "summary": "Create divisions.",
                "description": "",
                "operationId": "DivisionList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Division"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDivision"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "division"
                ],
                "summary": "Update multiple divisions.",
                "description": "",
                "operationId": "DivisionList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Division"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDivision"
                        }
                    }
                }
            }
        },
        "/document/{id}": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "[BETA] Get document by ID.",
                "description": "",
                "operationId": "Document_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocument"
                        }
                    }
                }
            }
        },
        "/document/{id}/content": {
            "get": {
                "tags": [
                    "document"
                ],
                "summary": "[BETA] Get content of document given by ID.",
                "description": "",
                "operationId": "DocumentContent_downloadContent",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of document to download content from.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            }
        },
        "/documentArchive/{id}": {
            "put": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Update document archive.",
                "description": "",
                "operationId": "DocumentArchive_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DocumentArchive"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Delete document archive.",
                "description": "",
                "operationId": "DocumentArchive_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/documentArchive/account/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with account object type.",
                "description": "",
                "operationId": "DocumentArchiveAccount_getAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Account Document Archive.",
                "description": "",
                "operationId": "DocumentArchiveAccount_accountPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/documentArchive/prospect/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with prospect object type.",
                "description": "",
                "operationId": "DocumentArchiveProspect_getProspect",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Prospect Document Archive.",
                "description": "",
                "operationId": "DocumentArchiveProspect_prospectPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/documentArchive/customer/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with customer object type.",
                "description": "",
                "operationId": "DocumentArchiveCustomer_getCustomer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Customer Document Archive.",
                "description": "",
                "operationId": "DocumentArchiveCustomer_customerPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/documentArchive/supplier/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with supplier object type.",
                "description": "",
                "operationId": "DocumentArchiveSupplier_getSupplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Supplier Document Archive.",
                "description": "",
                "operationId": "DocumentArchiveSupplier_supplierPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/documentArchive/employee/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with employee object type.",
                "description": "",
                "operationId": "DocumentArchiveEmployee_getEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Employee Document Archive.",
                "description": "",
                "operationId": "DocumentArchiveEmployee_employeePost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/documentArchive/product/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with product object type.",
                "description": "",
                "operationId": "DocumentArchiveProduct_getProduct",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Product Document Archive.",
                "description": "",
                "operationId": "DocumentArchiveProduct_productPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/documentArchive/project/{id}": {
            "get": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Find documents archived associated with project object type.",
                "description": "",
                "operationId": "DocumentArchiveProject_getProject",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDocumentArchive"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload file to Project Document Archive.",
                "description": "",
                "operationId": "DocumentArchiveProject_projectPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/documentArchive/reception": {
            "post": {
                "tags": [
                    "documentArchive"
                ],
                "summary": "[BETA] Upload a file to the document archive reception. Send as multipart form.",
                "description": "",
                "operationId": "DocumentArchiveReception_receptionPost",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "tags": [
                    "employee"
                ],
                "summary": "Get employee by ID.",
                "description": "",
                "operationId": "Employee_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployee"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee"
                ],
                "summary": "Update employee.",
                "description": "",
                "operationId": "Employee_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployee"
                        }
                    }
                }
            }
        },
        "/employee": {
            "get": {
                "tags": [
                    "employee"
                ],
                "summary": "Find employees corresponding with sent data.",
                "description": "",
                "operationId": "Employee_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "allowInformationRegistration",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeContacts",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "onlyProjectManagers",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "onlyContacts",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "assignableProjectManagers",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "periodStart",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodEnd",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hasSystemAccess",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployee"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employee"
                ],
                "summary": "Create one employee.",
                "description": "",
                "operationId": "Employee_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployee"
                        }
                    }
                }
            }
        },
        "/employee/list": {
            "post": {
                "tags": [
                    "employee"
                ],
                "summary": "Create several employees.",
                "description": "",
                "operationId": "EmployeeList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Employee"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployee"
                        }
                    }
                }
            }
        },
        "/employee/searchForEmployeesAndContacts": {
            "get": {
                "tags": [
                    "employee"
                ],
                "summary": "Get employees and contacts by parameters. Include contacts by default.",
                "description": "",
                "operationId": "EmployeeSearchForEmployeesAndContacts_searchForEmployeesAndContacts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "firstName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lastName",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeContacts",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "hasSystemAccess",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "excludeReadOnly",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "id, employeeNumber, firstName, lastName, email, pictureId"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployee"
                        }
                    }
                }
            }
        },
        "/employee/category/{id}": {
            "get": {
                "tags": [
                    "employee/category"
                ],
                "summary": "Get employee category by ID.",
                "description": "",
                "operationId": "EmployeeCategory_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeeCategory"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee/category"
                ],
                "summary": "Update employee category information.",
                "description": "",
                "operationId": "EmployeeCategory_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmployeeCategory"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeeCategory"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "employee/category"
                ],
                "summary": "Delete employee category by ID",
                "description": "",
                "operationId": "EmployeeCategory_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/employee/category": {
            "get": {
                "tags": [
                    "employee/category"
                ],
                "summary": "Find employee category corresponding with sent data.",
                "description": "",
                "operationId": "EmployeeCategory_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployeeCategory"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employee/category"
                ],
                "summary": "Create a new employee category.",
                "description": "",
                "operationId": "EmployeeCategory_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmployeeCategory"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeeCategory"
                        }
                    }
                }
            }
        },
        "/employee/category/list": {
            "post": {
                "tags": [
                    "employee/category"
                ],
                "summary": "Create new employee categories.",
                "description": "",
                "operationId": "EmployeeCategoryList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmployeeCategory"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployeeCategory"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee/category"
                ],
                "summary": "Update multiple employee categories.",
                "description": "",
                "operationId": "EmployeeCategoryList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmployeeCategory"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployeeCategory"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "employee/category"
                ],
                "summary": "Delete multiple employee categories",
                "description": "",
                "operationId": "EmployeeCategoryList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/employee/employment/{id}": {
            "get": {
                "tags": [
                    "employee/employment"
                ],
                "summary": "Find employment by ID.",
                "description": "",
                "operationId": "EmployeeEmployment_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployment"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee/employment"
                ],
                "summary": "Update employemnt. ",
                "description": "",
                "operationId": "EmployeeEmployment_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employment"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployment"
                        }
                    }
                }
            }
        },
        "/employee/employment": {
            "get": {
                "tags": [
                    "employee/employment"
                ],
                "summary": "Find all employments for employee.",
                "description": "",
                "operationId": "EmployeeEmployment_search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployment"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employee/employment"
                ],
                "summary": "Create employment.",
                "description": "",
                "operationId": "EmployeeEmployment_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employment"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployment"
                        }
                    }
                }
            }
        },
        "/employee/employment/details/{id}": {
            "get": {
                "tags": [
                    "employee/employment/details"
                ],
                "summary": "Find employment details by ID.",
                "description": "",
                "operationId": "EmployeeEmploymentDetails_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmploymentDetails"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee/employment/details"
                ],
                "summary": "Update employment details. ",
                "description": "",
                "operationId": "EmployeeEmploymentDetails_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmploymentDetails"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmploymentDetails"
                        }
                    }
                }
            }
        },
        "/employee/employment/details": {
            "get": {
                "tags": [
                    "employee/employment/details"
                ],
                "summary": "Find all employmentdetails for employment.",
                "description": "",
                "operationId": "EmployeeEmploymentDetails_search",
                "parameters": [
                    {
                        "name": "employmentId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentDetails"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employee/employment/details"
                ],
                "summary": "Create employment details.",
                "description": "",
                "operationId": "EmployeeEmploymentDetails_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmploymentDetails"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmploymentDetails"
                        }
                    }
                }
            }
        },
        "/employee/employment/employmentType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "Find all employment type IDs.",
                "description": "",
                "operationId": "EmployeeEmploymentEmploymentType_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                }
            }
        },
        "/employee/employment/employmentType/maritimeEmploymentType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "Find all maritime employment type IDs.",
                "description": "",
                "operationId": "EmployeeEmploymentEmploymentTypeMaritimeEmploymentType_getMaritimeEmploymentType",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "maritimeEmploymentType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SHIP_REGISTER",
                            "SHIP_TYPE",
                            "TRADE_AREA"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                }
            }
        },
        "/employee/employment/employmentType/salaryType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "Find all salary type IDs.",
                "description": "",
                "operationId": "EmployeeEmploymentEmploymentTypeSalaryType_getSalaryType",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                }
            }
        },
        "/employee/employment/employmentType/scheduleType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "Find all schedule type IDs.",
                "description": "",
                "operationId": "EmployeeEmploymentEmploymentTypeScheduleType_getScheduleType",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                }
            }
        },
        "/employee/employment/employmentType/employmentFormType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "Find all employment form type IDs.",
                "description": "",
                "operationId": "EmployeeEmploymentEmploymentTypeEmploymentFormType_getEmploymentFormType",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                }
            }
        },
        "/employee/employment/employmentType/employmentEndReasonType": {
            "get": {
                "tags": [
                    "employee/employment/employmentType"
                ],
                "summary": "Find all employment end reason type IDs.",
                "description": "",
                "operationId": "EmployeeEmploymentEmploymentTypeEmploymentEndReasonType_getEmploymentEndReasonType",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmploymentType"
                        }
                    }
                }
            }
        },
        "/employee/employment/leaveOfAbsence/{id}": {
            "get": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "Find leave of absence by ID.",
                "description": "",
                "operationId": "EmployeeEmploymentLeaveOfAbsence_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLeaveOfAbsence"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "Update leave of absence.",
                "description": "",
                "operationId": "EmployeeEmploymentLeaveOfAbsence_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LeaveOfAbsence"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLeaveOfAbsence"
                        }
                    }
                }
            }
        },
        "/employee/employment/leaveOfAbsence": {
            "get": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "Find all leave of absence corresponding with the sent data.",
                "description": "",
                "operationId": "EmployeeEmploymentLeaveOfAbsence_search",
                "parameters": [
                    {
                        "name": "employmentIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "minPercentage",
                        "in": "query",
                        "description": "Must be between 0-100.",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "maxPercentage",
                        "in": "query",
                        "description": "Must be between 0-100.",
                        "required": false,
                        "type": "integer",
                        "default": 100,
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLeaveOfAbsence"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "Create leave of absence.",
                "description": "",
                "operationId": "EmployeeEmploymentLeaveOfAbsence_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LeaveOfAbsence"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLeaveOfAbsence"
                        }
                    }
                }
            }
        },
        "/employee/employment/leaveOfAbsence/list": {
            "post": {
                "tags": [
                    "employee/employment/leaveOfAbsence"
                ],
                "summary": "Create multiple leave of absences.",
                "description": "",
                "operationId": "EmployeeEmploymentLeaveOfAbsenceList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LeaveOfAbsence"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLeaveOfAbsence"
                        }
                    }
                }
            }
        },
        "/employee/employment/leaveOfAbsenceType": {
            "get": {
                "tags": [
                    "employee/employment/leaveOfAbsenceType"
                ],
                "summary": "Find all leave of absence type IDs.",
                "description": "",
                "operationId": "EmployeeEmploymentLeaveOfAbsenceType_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLeaveOfAbsenceType"
                        }
                    }
                }
            }
        },
        "/employee/employment/occupationCode/{id}": {
            "get": {
                "tags": [
                    "employee/employment/occupationCode"
                ],
                "summary": "Get occupation by ID.",
                "description": "",
                "operationId": "EmployeeEmploymentOccupationCode_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOccupationCode"
                        }
                    }
                }
            }
        },
        "/employee/employment/occupationCode": {
            "get": {
                "tags": [
                    "employee/employment/occupationCode"
                ],
                "summary": "Find all profession codes.",
                "description": "",
                "operationId": "EmployeeEmploymentOccupationCode_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nameNO",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseOccupationCode"
                        }
                    }
                }
            }
        },
        "/employee/employment/remunerationType": {
            "get": {
                "tags": [
                    "employee/employment/remunerationType"
                ],
                "summary": "Find all remuneration type IDs.",
                "description": "",
                "operationId": "EmployeeEmploymentRemunerationType_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseRemunerationType"
                        }
                    }
                }
            }
        },
        "/employee/employment/workingHoursScheme": {
            "get": {
                "tags": [
                    "employee/employment/workingHoursScheme"
                ],
                "summary": "Find working hours scheme ID.",
                "description": "",
                "operationId": "EmployeeEmploymentWorkingHoursScheme_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseWorkingHoursScheme"
                        }
                    }
                }
            }
        },
        "/employee/hourlyCostAndRate/{id}": {
            "get": {
                "tags": [
                    "employee/hourlyCostAndRate"
                ],
                "summary": "Find hourly cost and rate by ID.",
                "description": "",
                "operationId": "EmployeeHourlyCostAndRate_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperHourlyCostAndRate"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee/hourlyCostAndRate"
                ],
                "summary": "Update hourly cost and rate. ",
                "description": "",
                "operationId": "EmployeeHourlyCostAndRate_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HourlyCostAndRate"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperHourlyCostAndRate"
                        }
                    }
                }
            }
        },
        "/employee/hourlyCostAndRate": {
            "get": {
                "tags": [
                    "employee/hourlyCostAndRate"
                ],
                "summary": "Find all hourly cost and rates for employee.",
                "description": "",
                "operationId": "EmployeeHourlyCostAndRate_search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseHourlyCostAndRate"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employee/hourlyCostAndRate"
                ],
                "summary": "Create hourly cost and rate.",
                "description": "",
                "operationId": "EmployeeHourlyCostAndRate_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HourlyCostAndRate"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperHourlyCostAndRate"
                        }
                    }
                }
            }
        },
        "/employee/logininfo/{id}": {
            "get": {
                "tags": [
                    "employee/logininfo"
                ],
                "summary": "[BETA] Get employee login info.",
                "description": "",
                "operationId": "EmployeeLogininfo_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeeLoginInfo"
                        }
                    }
                }
            }
        },
        "/employee/nextOfKin/{id}": {
            "get": {
                "tags": [
                    "employee/nextOfKin"
                ],
                "summary": "Find next of kin by ID.",
                "description": "",
                "operationId": "EmployeeNextOfKin_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperNextOfKin"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee/nextOfKin"
                ],
                "summary": "Update next of kin. ",
                "description": "",
                "operationId": "EmployeeNextOfKin_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NextOfKin"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperNextOfKin"
                        }
                    }
                }
            }
        },
        "/employee/nextOfKin": {
            "get": {
                "tags": [
                    "employee/nextOfKin"
                ],
                "summary": "Find all next of kin for employee.",
                "description": "",
                "operationId": "EmployeeNextOfKin_search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseNextOfKin"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employee/nextOfKin"
                ],
                "summary": "Create next of kin.",
                "description": "",
                "operationId": "EmployeeNextOfKin_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/NextOfKin"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperNextOfKin"
                        }
                    }
                }
            }
        },
        "/employee/preferences/{id}": {
            "put": {
                "tags": [
                    "employee/preferences"
                ],
                "summary": "Update employee preferences information.",
                "description": "",
                "operationId": "EmployeePreferences_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/EmployeePreferences"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeePreferences"
                        }
                    }
                }
            }
        },
        "/employee/preferences": {
            "get": {
                "tags": [
                    "employee/preferences"
                ],
                "summary": "Find employee preferences corresponding with sent data.",
                "description": "",
                "operationId": "EmployeePreferences_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeePreferences"
                        }
                    }
                }
            }
        },
        "/employee/preferences/list": {
            "put": {
                "tags": [
                    "employee/preferences"
                ],
                "summary": "Update multiple employee preferences.",
                "description": "",
                "operationId": "EmployeePreferencesList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmployeePreferences"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEmployeePreferences"
                        }
                    }
                }
            }
        },
        "/employee/preferences/>loggedInEmployeePreferences": {
            "get": {
                "tags": [
                    "employee/preferences"
                ],
                "summary": "Get employee preferences for current user",
                "description": "",
                "operationId": "EmployeePreferencesLoggedInEmployeePreferences_loggedInEmployeePreferences",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployeePreferences"
                        }
                    }
                }
            }
        },
        "/employee/standardTime/{id}": {
            "get": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "Find standard time by ID.",
                "description": "",
                "operationId": "EmployeeStandardTime_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStandardTime"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "Update standard time. ",
                "description": "",
                "operationId": "EmployeeStandardTime_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StandardTime"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStandardTime"
                        }
                    }
                }
            }
        },
        "/employee/standardTime": {
            "get": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "Find all standard times for employee.",
                "description": "",
                "operationId": "EmployeeStandardTime_search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseStandardTime"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "Create standard time.",
                "description": "",
                "operationId": "EmployeeStandardTime_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/StandardTime"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStandardTime"
                        }
                    }
                }
            }
        },
        "/employee/standardTime/byDate": {
            "get": {
                "tags": [
                    "employee/standardTime"
                ],
                "summary": "Find standard time for employee by date.",
                "description": "",
                "operationId": "EmployeeStandardTimeByDate_getByDate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStandardTime"
                        }
                    }
                }
            }
        },
        "/employee/entitlement/{id}": {
            "get": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "Get entitlement by ID.",
                "description": "",
                "operationId": "EmployeeEntitlement_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEntitlement"
                        }
                    }
                }
            }
        },
        "/employee/entitlement": {
            "get": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "Find all entitlements for user.",
                "description": "",
                "operationId": "EmployeeEntitlement_search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEntitlement"
                        }
                    }
                }
            }
        },
        "/employee/entitlement/:grantClientEntitlementsByTemplate": {
            "put": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "[BETA] Update employee entitlements in client account.",
                "description": "",
                "operationId": "EmployeeEntitlementGrantClientEntitlementsByTemplate_grantClientEntitlementsByTemplate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Client ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "template",
                        "in": "query",
                        "description": "Template",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NONE_PRIVILEGES",
                            "STANDARD_PRIVILEGES_ACCOUNTANT",
                            "STANDARD_PRIVILEGES_AUDITOR",
                            "ALL_PRIVILEGES",
                            "AGRO_READ_ONLY",
                            "AGRO_READ_APPROVE",
                            "AGRO_READ_WRITE",
                            "AGRO_READ_WRITE_APPROVE",
                            "MAMUT_PAYROLL_ADMIN",
                            "MAMUT_PAYROLL_CLERK",
                            "AGRO_PAYROLL_ADMIN",
                            "AGRO_PAYROLL_CLERK",
                            "AGRO_INVOICE_ADMIN",
                            "AGRO_INVOICE_CLERK"
                        ]
                    },
                    {
                        "name": "addToExisting",
                        "in": "query",
                        "description": "Add template to existing entitlements",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/employee/entitlement/:grantEntitlementsByTemplate": {
            "put": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "[BETA] Update employee entitlements.",
                "description": "The user will only receive the entitlements which are possible with the registered user type",
                "operationId": "EmployeeEntitlementGrantEntitlementsByTemplate_grantEntitlementsByTemplate",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "template",
                        "in": "query",
                        "description": "Template",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NONE_PRIVILEGES",
                            "ALL_PRIVILEGES",
                            "INVOICING_MANAGER",
                            "PERSONELL_MANAGER",
                            "ACCOUNTANT",
                            "AUDITOR",
                            "DEPARTMENT_LEADER",
                            "MAMUT_USER_ADMIN",
                            "MAMUT_USER"
                        ]
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/employee/entitlement/client": {
            "get": {
                "tags": [
                    "employee/entitlement"
                ],
                "summary": "[BETA] Find all entitlements at client for user.",
                "description": "",
                "operationId": "EmployeeEntitlementClient_client",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Client ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseEntitlement"
                        }
                    }
                }
            }
        },
        "/event": {
            "get": {
                "tags": [
                    "event"
                ],
                "summary": "[BETA] Get all (WebHook) event keys.",
                "description": "",
                "operationId": "Event_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMapStringEventInfoDescription"
                        }
                    }
                }
            }
        },
        "/event/{eventType}": {
            "get": {
                "tags": [
                    "event"
                ],
                "summary": "[BETA] Get example webhook payload",
                "description": "",
                "operationId": "Event_example",
                "parameters": [
                    {
                        "name": "eventType",
                        "in": "path",
                        "description": "Event type, from /event endpoint",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEventInfoDTO"
                        }
                    }
                }
            }
        },
        "/event/subscription/{id}": {
            "get": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Get subscription by ID.",
                "description": "",
                "operationId": "EventSubscription_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSubscription"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Change a current subscription, based on id.",
                "description": "",
                "operationId": "EventSubscription_put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSubscription"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Delete the given subscription.",
                "description": "",
                "operationId": "EventSubscription_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/event/subscription": {
            "get": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Find all ongoing subscriptions.",
                "description": "",
                "operationId": "EventSubscription_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSubscription"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Create a new subscription for current EmployeeToken.",
                "description": "",
                "operationId": "EventSubscription_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Subscription"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSubscription"
                        }
                    }
                }
            }
        },
        "/event/subscription/list": {
            "post": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Create multiple subscriptions for current EmployeeToken.",
                "description": "",
                "operationId": "EventSubscriptionList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Subscription"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSubscription"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Update multiple subscription.",
                "description": "",
                "operationId": "EventSubscriptionList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Subscription"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSubscription"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "event/subscription"
                ],
                "summary": "[BETA] Delete multiple subscriptions.",
                "description": "",
                "operationId": "EventSubscriptionList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/{id}": {
            "get": {
                "tags": [
                    "inventory"
                ],
                "summary": "Get inventory by ID.",
                "description": "",
                "operationId": "Inventory_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventory"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inventory"
                ],
                "summary": "Update inventory.",
                "description": "",
                "operationId": "Inventory_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Inventory"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventory"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "inventory"
                ],
                "summary": "[BETA] Delete inventory.",
                "description": "",
                "operationId": "Inventory_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory": {
            "get": {
                "tags": [
                    "inventory"
                ],
                "summary": "Find inventory corresponding with sent data.",
                "description": "",
                "operationId": "Inventory_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isMainInventory",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInventory"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventory"
                ],
                "summary": "Create new inventory.",
                "description": "",
                "operationId": "Inventory_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Inventory"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventory"
                        }
                    }
                }
            }
        },
        "/inventory/inventories": {
            "get": {
                "tags": [
                    "inventory/inventories"
                ],
                "summary": "[BETA] Find inventories corresponding with sent data.",
                "description": "",
                "operationId": "InventoryInventories_search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "inventoryId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "onlyProductWithChangedStatus",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInventories"
                        }
                    }
                }
            }
        },
        "/inventory/location/{id}": {
            "get": {
                "tags": [
                    "inventory/location"
                ],
                "summary": "Get inventory location by ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "InventoryLocation_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventoryLocation"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inventory/location"
                ],
                "summary": "[BETA] Update inventory location. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "InventoryLocation_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InventoryLocation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventoryLocation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "inventory/location"
                ],
                "summary": "[BETA] Delete inventory location. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "InventoryLocation_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/location": {
            "get": {
                "tags": [
                    "inventory/location"
                ],
                "summary": "[BETA] Find inventory locations by inventory ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "InventoryLocation_search",
                "parameters": [
                    {
                        "name": "warehouseId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInventoryLocation"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventory/location"
                ],
                "summary": "[BETA] Create new inventory location. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "InventoryLocation_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/InventoryLocation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInventoryLocation"
                        }
                    }
                }
            }
        },
        "/inventory/location/list": {
            "post": {
                "tags": [
                    "inventory/location"
                ],
                "summary": "[BETA] Add multiple inventory locations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "InventoryLocationList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryLocation"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInventoryLocation"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inventory/location"
                ],
                "summary": "[BETA] Update multiple inventory locations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "InventoryLocationList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InventoryLocation"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInventoryLocation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "inventory/location"
                ],
                "summary": "[BETA] Delete inventory location. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "InventoryLocationList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/stocktaking/{id}": {
            "get": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Get stocktaking by ID.",
                "description": "",
                "operationId": "InventoryStocktaking_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStocktaking"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Update stocktaking.",
                "description": "",
                "operationId": "InventoryStocktaking_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Stocktaking"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStocktaking"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Delete stocktaking.",
                "description": "",
                "operationId": "InventoryStocktaking_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/stocktaking": {
            "get": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Find stocktaking corresponding with sent data.",
                "description": "",
                "operationId": "InventoryStocktaking_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isCompleted",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "inventoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseStocktaking"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventory/stocktaking"
                ],
                "summary": "[BETA] Create new stocktaking.",
                "description": "",
                "operationId": "InventoryStocktaking_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "typeOfStocktaking",
                        "in": "query",
                        "description": "[DEPRECATED]",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "ALL_PRODUCTS_WITH_INVENTORIES",
                            "INCLUDE_PRODUCTS",
                            "NO_PRODUCTS"
                        ]
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Stocktaking"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperStocktaking"
                        }
                    }
                }
            }
        },
        "/inventory/stocktaking/productline/{id}": {
            "get": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Get product line by ID.",
                "description": "",
                "operationId": "InventoryStocktakingProductline_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductLine"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Update product line.",
                "description": "",
                "operationId": "InventoryStocktakingProductline_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductLine"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductLine"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Delete product line.",
                "description": "",
                "operationId": "InventoryStocktakingProductline_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/inventory/stocktaking/productline": {
            "get": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Find all product lines by stocktaking ID.",
                "description": "",
                "operationId": "InventoryStocktakingProductline_search",
                "parameters": [
                    {
                        "name": "stocktakingId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productGroupIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "locationIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productLineStatus",
                        "in": "query",
                        "description": "Productline status",
                        "required": false,
                        "type": "string",
                        "default": "ALL_PRODUCTS",
                        "enum": [
                            "ALL_PRODUCTS",
                            "COUNTED_PRODUCTS",
                            "NOT_COUNTED_PRODUCTS"
                        ]
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 10000,
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductLine"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "inventory/stocktaking/productline"
                ],
                "summary": "[BETA] Create product line. When creating several product lines, use /list for better performance.",
                "description": "",
                "operationId": "InventoryStocktakingProductline_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductLine"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductLine"
                        }
                    }
                }
            }
        },
        "/invoice/{id}": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice by ID.",
                "description": "",
                "operationId": "Invoice_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                }
            }
        },
        "/invoice": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "Find invoices corresponding with sent data. Includes charged outgoing invoices only.",
                "description": "",
                "operationId": "Invoice_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "kid",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voucherId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInvoice"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "invoice"
                ],
                "summary": "Create invoice. Related Order and OrderLines can be created first, or included as new objects inside the Invoice.",
                "description": "",
                "operationId": "Invoice_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Invoice"
                        }
                    },
                    {
                        "name": "sendToCustomer",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "paymentTypeId",
                        "in": "query",
                        "description": "Payment type to register prepayment of the invoice. paymentTypeId and paidAmount are optional, but both must be provided if the invoice has already been paid.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paidAmount",
                        "in": "query",
                        "description": "Paid amount to register prepayment of the invoice, in invoice currency. paymentTypeId and paidAmount are optional, but both must be provided if the invoice has already been paid.",
                        "required": false,
                        "type": "number"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                }
            }
        },
        "/invoice/list": {
            "post": {
                "tags": [
                    "invoice"
                ],
                "summary": "[BETA] Create multiple invoices. Max 100 at a time.",
                "description": "",
                "operationId": "InvoiceList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invoice"
                            }
                        }
                    },
                    {
                        "name": "sendToCustomer",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseInvoice"
                        }
                    }
                }
            }
        },
        "/invoice/{id}/:send": {
            "put": {
                "tags": [
                    "invoice"
                ],
                "summary": "Send invoice by ID and sendType. Optionally override email recipient.",
                "description": "",
                "operationId": "InvoiceSend_send",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sendType",
                        "in": "query",
                        "description": "SendType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "EHF",
                            "AVTALEGIRO",
                            "EFAKTURA",
                            "VIPPS",
                            "PAPER",
                            "MANUAL"
                        ]
                    },
                    {
                        "name": "overrideEmailAddress",
                        "in": "query",
                        "description": "Will override email address if sendType = EMAIL",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoice/{invoiceId}/pdf": {
            "get": {
                "tags": [
                    "invoice"
                ],
                "summary": "Get invoice document by invoice ID.",
                "description": "",
                "operationId": "InvoicePdf_downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice ID from which PDF is downloaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "download",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            }
        },
        "/invoice/{id}/:payment": {
            "put": {
                "tags": [
                    "invoice"
                ],
                "summary": "Update invoice. The invoice is updated with payment information. The amount is in the invoice’s currency.",
                "description": "",
                "operationId": "InvoicePayment_payment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paymentDate",
                        "in": "query",
                        "description": "Payment date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "paymentTypeId",
                        "in": "query",
                        "description": "PaymentType id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paidAmount",
                        "in": "query",
                        "description": "Amount paid by customer in the company currency, typically NOK.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "paidAmountCurrency",
                        "in": "query",
                        "description": "Amount paid by customer in the invoice currency. Optional, but required for invoices in alternate currencies.",
                        "required": false,
                        "type": "number"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                }
            }
        },
        "/invoice/{id}/:createCreditNote": {
            "put": {
                "tags": [
                    "invoice"
                ],
                "summary": "Creates a new Invoice representing a credit memo that nullifies the given invoice. Updates this invoice and any pre-existing inverse invoice.",
                "description": "",
                "operationId": "InvoiceCreateCreditNote_createCreditNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Credit note date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Comment",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "creditNoteEmail",
                        "in": "query",
                        "description": "The credit note will not be sent if the customer send type is email and this field is empty",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sendToCustomer",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                }
            }
        },
        "/invoice/{id}/:createReminder": {
            "put": {
                "tags": [
                    "invoice"
                ],
                "summary": "Create invoice reminder and sends it by the given dispatch type. Supports the reminder types SOFT_REMINDER, REMINDER and NOTICE_OF_DEBT_COLLECTION. DispatchType NETS_PRINT must have type NOTICE_OF_DEBT_COLLECTION. SMS and NETS_PRINT must be activated prior to usage in the API.",
                "description": "",
                "operationId": "InvoiceCreateReminder_createReminder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "SOFT_REMINDER",
                            "REMINDER",
                            "NOTICE_OF_DEBT_COLLECTION",
                            "DEBT_COLLECTION"
                        ]
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeCharge",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "includeInterest",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "dispatchType",
                        "in": "query",
                        "description": "dispatchType",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "NETS_PRINT",
                            "EMAIL",
                            "SMS"
                        ]
                    },
                    {
                        "name": "smsNumber",
                        "in": "query",
                        "description": "SMS number (must be a valid Norwegian telephone number)",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/invoiceRemark/{id}": {
            "get": {
                "tags": [
                    "invoiceRemark"
                ],
                "summary": "Get invoice remark by ID.",
                "description": "",
                "operationId": "InvoiceRemark_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoiceRemark"
                        }
                    }
                }
            }
        },
        "/invoice/paymentType/{id}": {
            "get": {
                "tags": [
                    "invoice/paymentType"
                ],
                "summary": "Get payment type by ID.",
                "description": "",
                "operationId": "InvoicePaymentType_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPaymentType"
                        }
                    }
                }
            }
        },
        "/invoice/paymentType": {
            "get": {
                "tags": [
                    "invoice/paymentType"
                ],
                "summary": "Find payment type corresponding with sent data.",
                "description": "",
                "operationId": "InvoicePaymentType_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePaymentType"
                        }
                    }
                }
            }
        },
        "/invoice/details/{id}": {
            "get": {
                "tags": [
                    "invoice/details"
                ],
                "summary": "Get ProjectInvoiceDetails by ID.",
                "description": "",
                "operationId": "InvoiceDetails_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectInvoiceDetails"
                        }
                    }
                }
            }
        },
        "/invoice/details": {
            "get": {
                "tags": [
                    "invoice/details"
                ],
                "summary": "Find ProjectInvoiceDetails corresponding with sent data.",
                "description": "",
                "operationId": "InvoiceDetails_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectInvoiceDetails"
                        }
                    }
                }
            }
        },
        "/ledger": {
            "get": {
                "tags": [
                    "ledger"
                ],
                "summary": "Get ledger (hovedbok).",
                "description": "",
                "operationId": "Ledger_search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "openPostings",
                        "in": "query",
                        "description": "Deprecated",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLedgerAccount"
                        }
                    }
                }
            }
        },
        "/ledger/openPost": {
            "get": {
                "tags": [
                    "ledger"
                ],
                "summary": "Find open posts corresponding with sent data.",
                "description": "",
                "operationId": "LedgerOpenPost_openPost",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Invoice date. Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseLedgerAccount"
                        }
                    }
                }
            }
        },
        "/ledger/account/{id}": {
            "get": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Get account by ID.",
                "description": "",
                "operationId": "LedgerAccount_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccount"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Update account.",
                "description": "",
                "operationId": "LedgerAccount_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccount"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Delete account.",
                "description": "",
                "operationId": "LedgerAccount_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/account": {
            "get": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Find accounts corresponding with sent data.",
                "description": "",
                "operationId": "LedgerAccount_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isBankAccount",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isApplicableForSupplierInvoice",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "ledgerType",
                        "in": "query",
                        "description": "Ledger type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "GENERAL",
                            "CUSTOMER",
                            "VENDOR",
                            "EMPLOYEE",
                            "ASSET"
                        ]
                    },
                    {
                        "name": "isBalanceAccount",
                        "in": "query",
                        "description": "Balance account",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "saftCode",
                        "in": "query",
                        "description": "SAF-T code",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccount"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Create a new account.",
                "description": "",
                "operationId": "LedgerAccount_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Account"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccount"
                        }
                    }
                }
            }
        },
        "/ledger/account/list": {
            "post": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Create several accounts.",
                "description": "",
                "operationId": "LedgerAccountList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccount"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Update multiple accounts.",
                "description": "",
                "operationId": "LedgerAccountList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Account"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccount"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ledger/account"
                ],
                "summary": "Delete multiple accounts.",
                "description": "",
                "operationId": "LedgerAccountList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/accountingPeriod/{id}": {
            "get": {
                "tags": [
                    "ledger/accountingPeriod"
                ],
                "summary": "Get accounting period by ID.",
                "description": "",
                "operationId": "LedgerAccountingPeriod_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccountingPeriod"
                        }
                    }
                }
            }
        },
        "/ledger/accountingPeriod": {
            "get": {
                "tags": [
                    "ledger/accountingPeriod"
                ],
                "summary": "Find accounting periods corresponding with sent data.",
                "description": "",
                "operationId": "LedgerAccountingPeriod_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "numberTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "startFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1400,
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccountingPeriod"
                        }
                    }
                }
            }
        },
        "/ledger/annualAccount/{id}": {
            "get": {
                "tags": [
                    "ledger/annualAccount"
                ],
                "summary": "Get annual account by ID.",
                "description": "",
                "operationId": "LedgerAnnualAccount_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAnnualAccount"
                        }
                    }
                }
            }
        },
        "/ledger/annualAccount": {
            "get": {
                "tags": [
                    "ledger/annualAccount"
                ],
                "summary": "Find annual accounts corresponding with sent data.",
                "description": "",
                "operationId": "LedgerAnnualAccount_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "yearFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "yearTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAnnualAccount"
                        }
                    }
                }
            }
        },
        "/ledger/closeGroup/{id}": {
            "get": {
                "tags": [
                    "ledger/closeGroup"
                ],
                "summary": "Get close group by ID.",
                "description": "",
                "operationId": "LedgerCloseGroup_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCloseGroup"
                        }
                    }
                }
            }
        },
        "/ledger/closeGroup": {
            "get": {
                "tags": [
                    "ledger/closeGroup"
                ],
                "summary": "Find close groups corresponding with sent data.",
                "description": "",
                "operationId": "LedgerCloseGroup_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCloseGroup"
                        }
                    }
                }
            }
        },
        "/ledger/paymentTypeOut/{id}": {
            "get": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Get payment type for outgoing payments by ID.",
                "description": "",
                "operationId": "LedgerPaymentTypeOut_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPaymentTypeOut"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Update existing payment type for outgoing payments",
                "description": "",
                "operationId": "LedgerPaymentTypeOut_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentTypeOut"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPaymentTypeOut"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Delete payment type for outgoing payments by ID.",
                "description": "",
                "operationId": "LedgerPaymentTypeOut_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/paymentTypeOut": {
            "get": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Gets payment types for outgoing payments",
                "description": "This is an API endpoint for getting payment types for outgoing payments. This is equivalent to the section 'Outgoing Payments' under Accounts Settings in Tripletex. These are the payment types listed in supplier invoices, vat returns, salary payments and Tax/ENI",
                "operationId": "LedgerPaymentTypeOut_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePaymentTypeOut"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Create new payment type for outgoing payments",
                "description": "",
                "operationId": "LedgerPaymentTypeOut_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PaymentTypeOut"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPaymentTypeOut"
                        }
                    }
                }
            }
        },
        "/ledger/paymentTypeOut/list": {
            "post": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Create multiple payment types for outgoing payments at once",
                "description": "",
                "operationId": "LedgerPaymentTypeOutList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentTypeOut"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePaymentTypeOut"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ledger/paymentTypeOut"
                ],
                "summary": "[BETA] Update multiple payment types for outgoing payments at once",
                "description": "",
                "operationId": "LedgerPaymentTypeOutList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentTypeOut"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePaymentTypeOut"
                        }
                    }
                }
            }
        },
        "/ledger/posting/{id}": {
            "get": {
                "tags": [
                    "ledger/posting"
                ],
                "summary": "Find postings by ID.",
                "description": "",
                "operationId": "LedgerPosting_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPosting"
                        }
                    }
                }
            }
        },
        "/ledger/posting": {
            "get": {
                "tags": [
                    "ledger/posting"
                ],
                "summary": "Find postings corresponding with sent data.",
                "description": "",
                "operationId": "LedgerPosting_search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "openPostings",
                        "in": "query",
                        "description": "Deprecated",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "accountNumberFrom",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "accountNumberTo",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "INCOMING_PAYMENT",
                            "INCOMING_PAYMENT_OPPOSITE",
                            "INVOICE_EXPENSE",
                            "OUTGOING_INVOICE_CUSTOMER_POSTING",
                            "WAGE"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePosting"
                        }
                    }
                }
            }
        },
        "/ledger/posting/openPost": {
            "get": {
                "tags": [
                    "ledger/posting"
                ],
                "summary": "Find open posts corresponding with sent data.",
                "description": "",
                "operationId": "LedgerPostingOpenPost_openPost",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Invoice date. Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "accountNumberFrom",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "accountNumberTo",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePosting"
                        }
                    }
                }
            }
        },
        "/ledger/vatType/{id}": {
            "get": {
                "tags": [
                    "ledger/vatType"
                ],
                "summary": "Get vat type by ID.",
                "description": "",
                "operationId": "LedgerVatType_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVatType"
                        }
                    }
                }
            }
        },
        "/ledger/vatType": {
            "get": {
                "tags": [
                    "ledger/vatType"
                ],
                "summary": "Find vat types corresponding with sent data.",
                "description": "",
                "operationId": "LedgerVatType_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "typeOfVat",
                        "in": "query",
                        "description": "Type of VAT",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "OUTGOING",
                            "INCOMING",
                            "INCOMING_INVOICE",
                            "PROJECT"
                        ]
                    },
                    {
                        "name": "vatDate",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today. Note that this is only used in combination with typeOfVat-parameter. Only valid vatTypes on the given date are returned.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "shouldIncludeSpecificationTypes",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVatType"
                        }
                    }
                }
            }
        },
        "/ledger/vatType/createRelativeVatType": {
            "put": {
                "tags": [
                    "ledger/vatType"
                ],
                "summary": "Create a new relative VAT Type. These are used if the company has 'forholdsmessig fradrag for inngående MVA'.",
                "description": "",
                "operationId": "LedgerVatTypeCreateRelativeVatType_createRelativeVatType",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "VAT type name, max 8 characters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "vatTypeId",
                        "in": "query",
                        "description": "VAT type ID. The relative VAT type will behave like this VAT type, except for the basis for calculating the VAT deduction, which is decided by the basis percentage.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "percentage",
                        "in": "query",
                        "description": "Basis percentage. This percentage will be multiplied with the transaction amount to find the amount that will be the basis for calculating the deduction amount.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVatType"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/openingBalance": {
            "get": {
                "tags": [
                    "ledger/voucher/openingBalance"
                ],
                "summary": "[BETA] Get the voucher for the opening balance.",
                "description": "",
                "operationId": "LedgerVoucherOpeningBalance_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ledger/voucher/openingBalance"
                ],
                "summary": "[BETA] Add an opening balance on the given date.  All movements before this date will be 'zeroed out' in a separate correction voucher. The opening balance must have the first day of a month as the date, and it's also recommended to have the first day of the year as the date. If the postings provided don't balance the voucher, the difference will automatically be posted to a help account",
                "description": "",
                "operationId": "LedgerVoucherOpeningBalance_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "dto",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OpeningBalance"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ledger/voucher/openingBalance"
                ],
                "summary": "[BETA] Delete the opening balance. The correction voucher will also be deleted",
                "description": "",
                "operationId": "LedgerVoucherOpeningBalance_delete",
                "parameters": [],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/voucher/openingBalance/>correctionVoucher": {
            "get": {
                "tags": [
                    "ledger/voucher/openingBalance"
                ],
                "summary": "[BETA] Get the correction voucher for the opening balance.",
                "description": "",
                "operationId": "LedgerVoucherOpeningBalanceCorrectionVoucher_correctionVoucher",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/{id}": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Get voucher by ID.",
                "description": "",
                "operationId": "LedgerVoucher_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Update voucher. Postings with guiRow==0 will be deleted and regenerated.",
                "description": "",
                "operationId": "LedgerVoucher_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "sendToLedger",
                        "in": "query",
                        "description": "Should the voucher be sent to ledger? Requires the \"Advanced Voucher\" permission.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Voucher"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Delete voucher by ID.",
                "description": "",
                "operationId": "LedgerVoucher_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/voucher/{id}/:reverse": {
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Reverses the voucher, and returns the reversed voucher. Supports reversing most voucher types, except salary transactions.",
                "description": "",
                "operationId": "LedgerVoucherReverse_reverse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of voucher that should be reversed.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Reverse voucher date",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Find vouchers corresponding with sent data.",
                "description": "",
                "operationId": "LedgerVoucher_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "numberFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "numberTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "typeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/VoucherSearchResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Add new voucher. IMPORTANT: Also creates postings. Only the gross amounts will be used",
                "description": "",
                "operationId": "LedgerVoucher_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "sendToLedger",
                        "in": "query",
                        "description": "Should the voucher be sent to ledger? Requires the \"Advanced Voucher\" permission.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Voucher"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/{id}/options": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Returns a data structure containing meta information about operations that are available for this voucher. Currently only implemented for DELETE: It is possible to check if the voucher is deletable.",
                "description": "",
                "operationId": "LedgerVoucherOptions_options",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucherOptions"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/list": {
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Update multiple vouchers. Postings with guiRow==0 will be deleted and regenerated.",
                "description": "",
                "operationId": "LedgerVoucherList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "sendToLedger",
                        "in": "query",
                        "description": "Should the voucher be sent to ledger? Requires the \"Advanced Voucher\" permission.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Voucher"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/{voucherId}/attachment": {
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Upload attachment to voucher. If the voucher already has an attachment the content will be appended to the existing attachment as new PDF page(s). Valid document formats are PDF, PNG, JPEG and TIFF. Non PDF formats will be converted to PDF. Send as multipart form.",
                "description": "",
                "operationId": "LedgerVoucherAttachment_uploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "description": "Voucher ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Delete attachment.",
                "description": "",
                "operationId": "LedgerVoucherAttachment_deleteAttachment",
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "description": "ID of voucher containing the attachment to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of voucher containing the attachment to delete.",
                        "required": false,
                        "type": "integer",
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "sendToInbox",
                        "in": "query",
                        "description": "Should the attachment be sent to inbox rather than deleted?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "split",
                        "in": "query",
                        "description": "If sendToInbox is true, should the attachment be split into one voucher per page?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/voucher/{id}/:sendToInbox": {
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Send voucher to inbox.",
                "description": "",
                "operationId": "LedgerVoucherSendToInbox_sendToInbox",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of voucher that should be sent to inbox.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of voucher that should be sent to inbox.",
                        "required": false,
                        "type": "integer",
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Description of why the voucher was rejected. This parameter is only used if the approval feature is enabled.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/{voucherId}/pdf": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Get PDF representation of voucher by ID.",
                "description": "",
                "operationId": "LedgerVoucherPdf_downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "description": "Voucher ID from which PDF is downloaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/{id}/:sendToLedger": {
            "put": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Send voucher to ledger.",
                "description": "",
                "operationId": "LedgerVoucherSendToLedger_sendToLedger",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of voucher that should be sent to ledger.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of voucher that should be sent to ledger.",
                        "required": false,
                        "type": "integer",
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Voucher number to use. If omitted or 0 the system will assign the number.",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "minimum": 0,
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/importDocument": {
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Upload a document to create one or more vouchers. Valid document formats are PDF, PNG, JPEG and TIFF. Send as multipart form.",
                "description": "",
                "operationId": "LedgerVoucherImportDocument_importDocument",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Optional description to use for the voucher(s). If omitted the file name will be used.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "split",
                        "in": "query",
                        "description": "If the document consists of several pages, should the document be split into one voucher per page?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/>nonPosted": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Find non-posted vouchers.",
                "description": "",
                "operationId": "LedgerVoucherNonPosted_nonPosted",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeNonApproved",
                        "in": "query",
                        "description": "Include non-approved vouchers in the result.",
                        "required": true,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "changedSince",
                        "in": "query",
                        "description": "Only return elements that have changed since this date and time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/>voucherReception": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Find vouchers in voucher reception.",
                "description": "",
                "operationId": "LedgerVoucherVoucherReception_voucherReception",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/>externalVoucherNumber": {
            "get": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Find vouchers based on the external voucher number.",
                "description": "",
                "operationId": "LedgerVoucherExternalVoucherNumber_externalVoucherNumber",
                "parameters": [
                    {
                        "name": "externalVoucherNumber",
                        "in": "query",
                        "description": "The external voucher number, when voucher is created from import.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/{voucherId}/pdf/{fileName}": {
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "[DEPRECATED] Use POST ledger/voucher/{voucherId}/attachment instead.",
                "description": "",
                "operationId": "LedgerVoucherPdf_uploadPdf",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "description": "Voucher ID to upload PDF to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fileName",
                        "in": "path",
                        "description": "File name to store the pdf under. Will not be the same as the filename on the file returned.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/voucher/importGbat10": {
            "post": {
                "tags": [
                    "ledger/voucher"
                ],
                "summary": "Import GBAT10. Send as multipart form.",
                "description": "",
                "operationId": "LedgerVoucherImportGbat10_importGbat10",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "generateVatPostings",
                        "in": "formData",
                        "description": "If the import should generate VAT postings",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "encoding",
                        "in": "formData",
                        "description": "The file encoding",
                        "required": false,
                        "type": "string",
                        "default": "utf-8"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/voucher/historical/{voucherId}/attachment": {
            "post": {
                "tags": [
                    "ledger/voucher/historical"
                ],
                "summary": "Upload attachment to voucher. If the voucher already has an attachment the content will be appended to the existing attachment as new PDF page(s). Valid document formats are PDF, PNG, JPEG and TIFF. Non PDF formats will be converted to PDF. Send as multipart form.",
                "description": "",
                "operationId": "LedgerVoucherHistoricalAttachment_uploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "voucherId",
                        "in": "path",
                        "description": "Voucher ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/voucher/historical/historical": {
            "post": {
                "tags": [
                    "ledger/voucher/historical"
                ],
                "summary": "API endpoint for creating historical vouchers. These are vouchers created outside Tripletex, and should be from closed accounting years. The intended usage is to get access to historical transcations in Tripletex. Also creates postings. All amount fields in postings will be used. VAT postings must be included, these are not generated automatically like they are for normal vouchers in Tripletex. Requires the \\\"All vouchers\\\" and \\\"Advanced Voucher\\\" permissions.",
                "description": "",
                "operationId": "LedgerVoucherHistoricalHistorical_postHistorical",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of vouchers and related postings to import. Max 500.  ",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HistoricalVoucher"
                            }
                        }
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Import comment, include the name and version of the source system.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "useCustomNumberSeries",
                        "in": "query",
                        "description": "Use custom number series (true), or use default number series for historical vouchers (false).",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseHistoricalVoucher"
                        }
                    }
                }
            }
        },
        "/ledger/voucher/historical/:reverseHistoricalVouchers": {
            "put": {
                "tags": [
                    "ledger/voucher/historical"
                ],
                "summary": "[BETA] Deletes all historical vouchers. Requires the \"All vouchers\" and \"Advanced Voucher\" permissions.",
                "description": "",
                "operationId": "LedgerVoucherHistoricalReverseHistoricalVouchers_reverseHistoricalVouchers",
                "parameters": [],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/voucher/historical/:closePostings": {
            "put": {
                "tags": [
                    "ledger/voucher/historical"
                ],
                "summary": "[BETA] Close postings.",
                "description": "",
                "operationId": "LedgerVoucherHistoricalClosePostings_closePostings",
                "parameters": [
                    {
                        "name": "postingIds",
                        "in": "query",
                        "description": "[Deprecated] List of Posting IDs to close separated by comma. The postings should have the same customer, supplier or employee. The sum of amount for all postings MUST be 0.0, otherwise an exception will be thrown.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of Posting IDs to close separated by comma. The postings should have the same customer, supplier or employee. The sum of amount for all postings MUST be 0.0, otherwise an exception will be thrown.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ledger/voucher/historical/employee": {
            "post": {
                "tags": [
                    "ledger/voucher/historical"
                ],
                "summary": "[BETA] Create one employee, based on import from external system. Validation is less strict, ie. employee department isn't required.",
                "description": "",
                "operationId": "LedgerVoucherHistoricalEmployee_postEmployee",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Employee"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperEmployee"
                        }
                    }
                }
            }
        },
        "/ledger/voucherType/{id}": {
            "get": {
                "tags": [
                    "ledger/voucherType"
                ],
                "summary": "Get voucher type by ID.",
                "description": "",
                "operationId": "LedgerVoucherType_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucherType"
                        }
                    }
                }
            }
        },
        "/ledger/voucherType": {
            "get": {
                "tags": [
                    "ledger/voucherType"
                ],
                "summary": "Find voucher types corresponding with sent data.",
                "description": "",
                "operationId": "LedgerVoucherType_search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucherType"
                        }
                    }
                }
            }
        },
        "/municipality/query": {
            "get": {
                "tags": [
                    "municipality"
                ],
                "summary": "[BETA] Wildcard search.",
                "description": "",
                "operationId": "MunicipalityQuery_query",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "id, name, number"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMunicipality"
                        }
                    }
                }
            }
        },
        "/municipality": {
            "get": {
                "tags": [
                    "municipality"
                ],
                "summary": "Get municipalities.",
                "description": "",
                "operationId": "Municipality_search",
                "parameters": [
                    {
                        "name": "includePayrollTaxZones",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMunicipality"
                        }
                    }
                }
            }
        },
        "/subscription/packages": {
            "get": {
                "tags": [
                    "subscription"
                ],
                "summary": "Returns the packages that can exist for an account.",
                "description": "",
                "operationId": "SubscriptionPackages_getPackages",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMySubscriptionModuleDTO[]"
                        }
                    }
                }
            }
        },
        "/subscription/services": {
            "get": {
                "tags": [
                    "subscription"
                ],
                "summary": "Returns the services that are available for an account.",
                "description": "",
                "operationId": "SubscriptionServices_getServices",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMySubscriptionModuleDTO[]"
                        }
                    }
                }
            }
        },
        "/order/{id}": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Get order by ID.",
                "description": "",
                "operationId": "Order_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrder"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Update order.",
                "description": "",
                "operationId": "Order_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "updateLinesAndGroups",
                        "in": "query",
                        "description": "Should order lines and order groups be saved and not included lines/groups be removed? Only applies if non null list of order lines or order groups is set.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrder"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "order"
                ],
                "summary": "Delete order.",
                "description": "",
                "operationId": "Order_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order": {
            "get": {
                "tags": [
                    "order"
                ],
                "summary": "Find orders corresponding with sent data.",
                "description": "",
                "operationId": "Order_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "orderDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "isClosed",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isSubscription",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseOrder"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "Create order.",
                "description": "",
                "operationId": "Order_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrder"
                        }
                    }
                }
            }
        },
        "/order/{id}/:attach": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Attach document to specified order ID.",
                "description": "",
                "operationId": "OrderAttach_attach",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDocumentArchive"
                        }
                    }
                }
            }
        },
        "/order/list": {
            "post": {
                "tags": [
                    "order"
                ],
                "summary": "[BETA] Create multiple Orders with OrderLines. Max 100 at a time.",
                "description": "",
                "operationId": "OrderList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseOrder"
                        }
                    }
                }
            }
        },
        "/order/{id}/:invoice": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Create new invoice from order.",
                "description": "",
                "operationId": "OrderInvoice_invoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order to invoice.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceDate",
                        "in": "query",
                        "description": "The invoice date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sendToCustomer",
                        "in": "query",
                        "description": "Send invoice to customer",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "sendType",
                        "in": "query",
                        "description": "Send type used for sending the invoice",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "EHF",
                            "AVTALEGIRO",
                            "EFAKTURA",
                            "VIPPS",
                            "PAPER",
                            "MANUAL"
                        ]
                    },
                    {
                        "name": "paymentTypeId",
                        "in": "query",
                        "description": "Payment type to register prepayment of the invoice. paymentTypeId and paidAmount are optional, but both must be provided if the invoice has already been paid. The payment type must be related to an account with the same currency as the invoice.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paidAmount",
                        "in": "query",
                        "description": "Paid amount to register prepayment of the invoice, in invoice currency. paymentTypeId and paidAmount are optional, but both must be provided if the invoice has already been paid. This amount is in the invoice currency.",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "paidAmountAccountCurrency",
                        "in": "query",
                        "description": "Amount paid in payment type currency",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "paymentTypeIdRestAmount",
                        "in": "query",
                        "description": "Payment type of rest amount. It is possible to have two prepaid payments when invoicing. If paymentTypeIdRestAmount > 0, this second payment will be calculated as invoice amount - paidAmount",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paidAmountAccountCurrencyRest",
                        "in": "query",
                        "description": "Amount rest in payment type currency",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "createOnAccount",
                        "in": "query",
                        "description": "Create on account(a konto)",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NONE",
                            "WITH_VAT",
                            "WITHOUT_VAT"
                        ]
                    },
                    {
                        "name": "amountOnAccount",
                        "in": "query",
                        "description": "Amount on account",
                        "required": false,
                        "type": "number",
                        "default": 0.0
                    },
                    {
                        "name": "onAccountComment",
                        "in": "query",
                        "description": "On account comment",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createBackorder",
                        "in": "query",
                        "description": "Create a backorder for this order, available only for pilot users",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "invoiceIdIfIsCreditNote",
                        "in": "query",
                        "description": "Id of the invoice a credit note refers to",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "overrideEmailAddress",
                        "in": "query",
                        "description": "Will override email address if sendType = EMAIL",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                }
            }
        },
        "/order/:invoiceMultipleOrders": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "[BETA] Charges a single customer invoice from multiple orders. The orders must be to the same customer, currency, due date, receiver email, attn. and smsNotificationNumber",
                "description": "",
                "operationId": "OrderInvoiceMultipleOrders_invoiceMultipleOrders",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of Order IDs - to the same customer, separated by comma.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDate",
                        "in": "query",
                        "description": "The invoice date",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "sendToCustomer",
                        "in": "query",
                        "description": "Send invoice to customer",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "createBackorders",
                        "in": "query",
                        "description": "Create a backorder for all any orders that delivers less than ordered amount",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                }
            }
        },
        "/order/{id}/:approveSubscriptionInvoice": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "To create a subscription invoice, first create a order with the subscription enabled, then approve it with this method. This approves the order for subscription invoicing.",
                "description": "",
                "operationId": "OrderApproveSubscriptionInvoice_approveSubscriptionInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order to approve for subscription invoicing.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceDate",
                        "in": "query",
                        "description": "The approval date for the subscription.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInvoice"
                        }
                    }
                }
            }
        },
        "/order/{id}/:unApproveSubscriptionInvoice": {
            "put": {
                "tags": [
                    "order"
                ],
                "summary": "Unapproves the order for subscription invoicing.",
                "description": "",
                "operationId": "OrderUnApproveSubscriptionInvoice_unApproveSubscriptionInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of order to unapprove for subscription invoicing.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order/orderGroup/{id}": {
            "get": {
                "tags": [
                    "order/orderGroup"
                ],
                "summary": "Get orderGroup by ID. A orderGroup is a way to group orderLines, and add comments and subtotals",
                "description": "",
                "operationId": "OrderOrderGroup_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrderGroup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "order/orderGroup"
                ],
                "summary": "Delete orderGroup by ID.",
                "description": "",
                "operationId": "OrderOrderGroup_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order/orderGroup": {
            "get": {
                "tags": [
                    "order/orderGroup"
                ],
                "summary": "Find orderGroups corresponding with sent data.",
                "description": "",
                "operationId": "OrderOrderGroup_search",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseOrderGroup"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "order/orderGroup"
                ],
                "summary": "[Beta] Post orderGroup.",
                "description": "",
                "operationId": "OrderOrderGroup_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderGroup"
                        }
                    },
                    {
                        "name": "orderLineIds",
                        "in": "query",
                        "description": "Deprecated. Put order lines in the dto instead.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrderGroup"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "order/orderGroup"
                ],
                "summary": "[Beta] Put orderGroup.",
                "description": "",
                "operationId": "OrderOrderGroup_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderGroup"
                        }
                    },
                    {
                        "name": "OrderLineIds",
                        "in": "query",
                        "description": "Deprecated. Put order lines in the dto instead.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "removeExistingOrderLines",
                        "in": "query",
                        "description": "Deprecated. Should existing orderLines be removed from this orderGroup. This will always happen if orderLineIds is not empty.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrderGroup"
                        }
                    }
                }
            }
        },
        "/order/orderline/{id}": {
            "get": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "Get order line by ID.",
                "description": "",
                "operationId": "OrderOrderline_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrderLine"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "[BETA] Put order line",
                "description": "",
                "operationId": "OrderOrderline_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLine"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrderLine"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "[BETA] Delete order line by ID.",
                "description": "",
                "operationId": "OrderOrderline_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/order/orderline": {
            "post": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "Create order line. When creating several order lines, use /list for better performance.",
                "description": "",
                "operationId": "OrderOrderline_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/OrderLine"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperOrderLine"
                        }
                    }
                }
            }
        },
        "/order/orderline/list": {
            "post": {
                "tags": [
                    "order/orderline"
                ],
                "summary": "Create multiple order lines.",
                "description": "",
                "operationId": "OrderOrderlineList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderLine"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseOrderLine"
                        }
                    }
                }
            }
        },
        "/product/external/{id}": {
            "get": {
                "tags": [
                    "product/external"
                ],
                "summary": "[BETA] Get external product by ID.",
                "description": "",
                "operationId": "ProductExternal_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperExternalProduct"
                        }
                    }
                }
            }
        },
        "/product/external": {
            "get": {
                "tags": [
                    "product/external"
                ],
                "summary": "[BETA] Find external products corresponding with sent data. The sorting-field is not in use on this endpoint.",
                "description": "",
                "operationId": "ProductExternal_search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "wholesaler",
                        "in": "query",
                        "description": "Wholesaler",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "AHLSELL",
                            "BROEDRENE_DAHL",
                            "ELEKTROSKANDIA",
                            "HEIDENREICH",
                            "ONNINEN",
                            "SONEPAR",
                            "SOLAR",
                            "BERGAARD_AMUNDSEN",
                            "BERGAARD_AMUNDSEN_STAVANGER",
                            "SORLANDET_ELEKTRO",
                            "ETMAN_DISTRIBUSJON",
                            "ETM_OST",
                            "CENIKA",
                            "EP_ENGROS",
                            "BETEK",
                            "DGROUP",
                            "FAGERHULT",
                            "GLAMOX",
                            "SCHNEIDER",
                            "STOKKAN",
                            "WURTH",
                            "ELEKTROIMPORTOEREN",
                            "THERMOFLOOR",
                            "LYSKOMPONENTER",
                            "NORDESIGN"
                        ]
                    },
                    {
                        "name": "organizationNumber",
                        "in": "query",
                        "description": "Wholesaler organization number. Mandatory if Wholesaler is not selected. If Wholesaler is selected, this field is ignored.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "elNumber",
                        "in": "query",
                        "description": "List of valid el numbers",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nrfNumber",
                        "in": "query",
                        "description": "List of valid nrf numbers",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseExternalProduct"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Get product by ID.",
                "description": "",
                "operationId": "Product_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProduct"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product"
                ],
                "summary": "Update product.",
                "description": "",
                "operationId": "Product_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProduct"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product"
                ],
                "summary": "[BETA] Delete product.",
                "description": "",
                "operationId": "Product_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Find products corresponding with sent data.",
                "description": "",
                "operationId": "Product_search",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "DEPRECATED. List of product numbers (Integer only)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productNumber",
                        "in": "query",
                        "description": "List of valid product numbers",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ean",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isStockItem",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isSupplierProduct",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currencyId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "vatTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productUnitId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "costExcludingVatCurrencyFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "costExcludingVatCurrencyTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "priceExcludingVatCurrencyFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "priceExcludingVatCurrencyTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "priceIncludingVatCurrencyFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "priceIncludingVatCurrencyTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProduct"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "Create new product.",
                "description": "",
                "operationId": "Product_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Product"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProduct"
                        }
                    }
                }
            }
        },
        "/product/list": {
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "[BETA] Add multiple products.",
                "description": "",
                "operationId": "ProductList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProduct"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product"
                ],
                "summary": "[BETA] Update a list of products.",
                "description": "",
                "operationId": "ProductList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Product"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProduct"
                        }
                    }
                }
            }
        },
        "/product/{id}/image": {
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "[BETA] Upload image to Product. Existing image on product will be replaced if exists",
                "description": "",
                "operationId": "ProductImage_uploadImage",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID to upload image to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProduct"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product"
                ],
                "summary": "[BETA] Delete image.",
                "description": "",
                "operationId": "ProductImage_deleteImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of Product containing the image to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product/supplierProduct/{id}": {
            "get": {
                "tags": [
                    "product/supplierProduct"
                ],
                "summary": "Get supplierProduct by ID.",
                "description": "",
                "operationId": "ProductSupplierProduct_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierProduct"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/supplierProduct"
                ],
                "summary": "Update supplierProduct.",
                "description": "",
                "operationId": "ProductSupplierProduct_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SupplierProduct"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierProduct"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product/supplierProduct"
                ],
                "summary": "[BETA] Delete supplierProduct.",
                "description": "",
                "operationId": "ProductSupplierProduct_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product/supplierProduct": {
            "get": {
                "tags": [
                    "product/supplierProduct"
                ],
                "summary": "Find products corresponding with sent data.",
                "description": "",
                "operationId": "ProductSupplierProduct_search",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Id of product to find supplier products for.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "vendorId",
                        "in": "query",
                        "description": "Id of vendor to find supplier products for.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "productGroupId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "id, name, number"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplierProduct"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product/supplierProduct"
                ],
                "summary": "Create new supplierProduct.",
                "description": "",
                "operationId": "ProductSupplierProduct_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SupplierProduct"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierProduct"
                        }
                    }
                }
            }
        },
        "/product/supplierProduct/list": {
            "post": {
                "tags": [
                    "product/supplierProduct"
                ],
                "summary": "Create list of new supplierProduct.",
                "description": "",
                "operationId": "ProductSupplierProductList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupplierProduct"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplierProduct"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/supplierProduct"
                ],
                "summary": "[BETA] Update a list of supplierProduct.",
                "description": "",
                "operationId": "ProductSupplierProductList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SupplierProduct"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplierProduct"
                        }
                    }
                }
            }
        },
        "/product/discountGroup/{id}": {
            "get": {
                "tags": [
                    "product/discountGroup"
                ],
                "summary": "Get discount group by ID.",
                "description": "",
                "operationId": "ProductDiscountGroup_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDiscountGroup"
                        }
                    }
                }
            }
        },
        "/product/discountGroup": {
            "get": {
                "tags": [
                    "product/discountGroup"
                ],
                "summary": "Find discount groups corresponding with sent data.",
                "description": "",
                "operationId": "ProductDiscountGroup_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDiscountGroup"
                        }
                    }
                }
            }
        },
        "/product/inventoryLocation/{id}": {
            "get": {
                "tags": [
                    "product/inventoryLocation"
                ],
                "summary": "Get inventory location by ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "ProductInventoryLocation_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductInventoryLocation"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/inventoryLocation"
                ],
                "summary": "[BETA] Update product inventory location. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "ProductInventoryLocation_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductInventoryLocation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductInventoryLocation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product/inventoryLocation"
                ],
                "summary": "[BETA] Delete product inventory location. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "ProductInventoryLocation_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product/inventoryLocation": {
            "get": {
                "tags": [
                    "product/inventoryLocation"
                ],
                "summary": "[BETA] Find inventory locations by product ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "ProductInventoryLocation_search",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inventoryId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isMainLocation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductInventoryLocation"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product/inventoryLocation"
                ],
                "summary": "[BETA] Create new product inventory location. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "ProductInventoryLocation_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductInventoryLocation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductInventoryLocation"
                        }
                    }
                }
            }
        },
        "/product/inventoryLocation/list": {
            "post": {
                "tags": [
                    "product/inventoryLocation"
                ],
                "summary": "[BETA] Add multiple product inventory locations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "ProductInventoryLocationList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductInventoryLocation"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductInventoryLocation"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/inventoryLocation"
                ],
                "summary": "[BETA] Update multiple product inventory locations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "ProductInventoryLocationList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductInventoryLocation"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductInventoryLocation"
                        }
                    }
                }
            }
        },
        "/product/logisticsSettings": {
            "get": {
                "tags": [
                    "product/logisticsSettings"
                ],
                "summary": "[BETA] Get logistics settings of logged in company.",
                "description": "",
                "operationId": "ProductLogisticsSettings_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLogisticsSettings"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/logisticsSettings"
                ],
                "summary": "[BETA] Update logistics settings of logged in company.",
                "description": "",
                "operationId": "ProductLogisticsSettings_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/LogisticsSettings"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperLogisticsSettings"
                        }
                    }
                }
            }
        },
        "/product/group/{id}": {
            "get": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Find product group by ID.",
                "description": "",
                "operationId": "ProductGroup_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroup"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Update product group.",
                "description": "",
                "operationId": "ProductGroup_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductGroup"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Delete product group.",
                "description": "",
                "operationId": "ProductGroup_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product/group/query": {
            "get": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Wildcard search.",
                "description": "",
                "operationId": "ProductGroupQuery_query",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "id, name"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroup"
                        }
                    }
                }
            }
        },
        "/product/group": {
            "get": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Find product group with sent data",
                "description": "",
                "operationId": "ProductGroup_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroup"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Create new product group.",
                "description": "",
                "operationId": "ProductGroup_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductGroup"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroup"
                        }
                    }
                }
            }
        },
        "/product/group/list": {
            "post": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Add multiple products groups.",
                "description": "",
                "operationId": "ProductGroupList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductGroup"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroup"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Update a list of product groups.",
                "description": "",
                "operationId": "ProductGroupList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductGroup"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroup"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product/group"
                ],
                "summary": "[BETA] Delete multiple product groups.",
                "description": "",
                "operationId": "ProductGroupList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product/groupRelation/{id}": {
            "get": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Find product group relation by ID.",
                "description": "",
                "operationId": "ProductGroupRelation_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroupRelation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Delete product group relation.",
                "description": "",
                "operationId": "ProductGroupRelation_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product/groupRelation": {
            "get": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Find product group relation with sent data.",
                "description": "",
                "operationId": "ProductGroupRelation_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productGroupId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroupRelation"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Create new product group relation.",
                "description": "",
                "operationId": "ProductGroupRelation_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductGroupRelation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductGroupRelation"
                        }
                    }
                }
            }
        },
        "/product/groupRelation/list": {
            "post": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Add multiple products group relations.",
                "description": "",
                "operationId": "ProductGroupRelationList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductGroupRelation"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductGroupRelation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product/groupRelation"
                ],
                "summary": "[BETA] Delete multiple product group relations.",
                "description": "",
                "operationId": "ProductGroupRelationList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product/productPrice": {
            "get": {
                "tags": [
                    "product/productPrice"
                ],
                "summary": "[BETA] Find prices for a product. Only available for users that have activated the Logistics/Logistics Plus Beta-program in 'Our customer account'.",
                "description": "",
                "operationId": "ProductProductPrice_search",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "showOnlyLastPrice",
                        "in": "query",
                        "description": "If showOnlyLastPrice is true, fromDate and toDate are ignored and only last price of the product is send back.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductPrice"
                        }
                    }
                }
            }
        },
        "/product/unit/{id}": {
            "get": {
                "tags": [
                    "product/unit"
                ],
                "summary": "Get product unit by ID.",
                "description": "",
                "operationId": "ProductUnit_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductUnit"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/unit"
                ],
                "summary": "[BETA] Update product unit.",
                "description": "",
                "operationId": "ProductUnit_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductUnit"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductUnit"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "product/unit"
                ],
                "summary": "[BETA] Delete product unit by ID.",
                "description": "",
                "operationId": "ProductUnit_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/product/unit/query": {
            "get": {
                "tags": [
                    "product/unit"
                ],
                "summary": "[BETA] Wildcard search.",
                "description": "",
                "operationId": "ProductUnitQuery_query",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 25,
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "id, name"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductUnit"
                        }
                    }
                }
            }
        },
        "/product/unit": {
            "get": {
                "tags": [
                    "product/unit"
                ],
                "summary": "Find product units corresponding with sent data.",
                "description": "",
                "operationId": "ProductUnit_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Names",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nameShort",
                        "in": "query",
                        "description": "Short names",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commonCode",
                        "in": "query",
                        "description": "Common codes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductUnit"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product/unit"
                ],
                "summary": "[BETA] Create new product unit.",
                "description": "",
                "operationId": "ProductUnit_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProductUnit"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductUnit"
                        }
                    }
                }
            }
        },
        "/product/unit/list": {
            "post": {
                "tags": [
                    "product/unit"
                ],
                "summary": "[BETA] Create multiple product units.",
                "description": "",
                "operationId": "ProductUnitList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductUnit"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductUnit"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "product/unit"
                ],
                "summary": "[BETA] Update list of product units.",
                "description": "",
                "operationId": "ProductUnitList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProductUnit"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductUnit"
                        }
                    }
                }
            }
        },
        "/product/unit/master/{id}": {
            "get": {
                "tags": [
                    "product/unit/master"
                ],
                "summary": "[BETA] Get product unit master by ID.",
                "description": "",
                "operationId": "ProductUnitMaster_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProductUnitMaster"
                        }
                    }
                }
            }
        },
        "/product/unit/master": {
            "get": {
                "tags": [
                    "product/unit/master"
                ],
                "summary": "[BETA] Find product units master corresponding with sent data.",
                "description": "",
                "operationId": "ProductUnitMaster_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Names",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "nameShort",
                        "in": "query",
                        "description": "Short names",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commonCode",
                        "in": "query",
                        "description": "Common codes",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "peppolName",
                        "in": "query",
                        "description": "Peppol names",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "peppolSymbol",
                        "in": "query",
                        "description": "Peppol symbols",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Inactive units",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 2400,
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProductUnitMaster"
                        }
                    }
                }
            }
        },
        "/project/{id}": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Find project by ID.",
                "description": "",
                "operationId": "Project_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProject"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Update project.",
                "description": "",
                "operationId": "Project_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProject"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Delete project.",
                "description": "",
                "operationId": "Project_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Find projects corresponding with sent data.",
                "description": "",
                "operationId": "Project_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isOffer",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "projectManagerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeInProjectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isClosed",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isFixedPrice",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "externalAccountsNumber",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "includeRecentlyClosed",
                        "in": "query",
                        "description": "If isClosed is false, include projects that have been closed within the last 3 months. Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "Add new project.",
                "description": "",
                "operationId": "Project_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProject"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Delete multiple projects.",
                "description": "",
                "operationId": "Project_deleteList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing objects to delete. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/list": {
            "post": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Register new projects. Multiple projects for different users can be sent in the same request.",
                "description": "",
                "operationId": "ProjectList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Update multiple projects.",
                "description": "",
                "operationId": "ProjectList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project"
                ],
                "summary": "[BETA] Delete projects.",
                "description": "",
                "operationId": "ProjectList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/>forTimeSheet": {
            "get": {
                "tags": [
                    "project"
                ],
                "summary": "Find projects applicable for time sheet registration on a specific day.",
                "description": "",
                "operationId": "ProjectForTimeSheet_getForTimeSheet",
                "parameters": [
                    {
                        "name": "includeProjectOffers",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                }
            }
        },
        "/project/import": {
            "post": {
                "tags": [
                    "project/import"
                ],
                "summary": "Upload project import file.",
                "description": "",
                "operationId": "ProjectImport_importProjectStatement",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "fileFormat",
                        "in": "query",
                        "description": "File format",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "XLS",
                            "CSV"
                        ]
                    },
                    {
                        "name": "encoding",
                        "in": "query",
                        "description": "Encoding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "delimiter",
                        "in": "query",
                        "description": "Delimiter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ignoreFirstRow",
                        "in": "query",
                        "description": "Ignore first row",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The project import file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                }
            }
        },
        "/project/category/{id}": {
            "get": {
                "tags": [
                    "project/category"
                ],
                "summary": "Find project category by ID.",
                "description": "",
                "operationId": "ProjectCategory_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectCategory"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project/category"
                ],
                "summary": "Update project category.",
                "description": "",
                "operationId": "ProjectCategory_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectCategory"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectCategory"
                        }
                    }
                }
            }
        },
        "/project/category": {
            "get": {
                "tags": [
                    "project/category"
                ],
                "summary": "Find project categories corresponding with sent data.",
                "description": "",
                "operationId": "ProjectCategory_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectCategory"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "project/category"
                ],
                "summary": "Add new project category.",
                "description": "",
                "operationId": "ProjectCategory_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectCategory"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectCategory"
                        }
                    }
                }
            }
        },
        "/project/orderline/{id}": {
            "get": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Get order line by ID.",
                "description": "",
                "operationId": "ProjectOrderline_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectOrderLine"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Update project orderline.",
                "description": "",
                "operationId": "ProjectOrderline_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectOrderLine"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectOrderLine"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "Delete order line by ID.",
                "description": "",
                "operationId": "ProjectOrderline_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/orderline": {
            "get": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Find all order lines for project.",
                "description": "",
                "operationId": "ProjectOrderline_search",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectOrderLine"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Create order line. When creating several order lines, use /list for better performance.",
                "description": "",
                "operationId": "ProjectOrderline_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectOrderLine"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectOrderLine"
                        }
                    }
                }
            }
        },
        "/project/orderline/list": {
            "post": {
                "tags": [
                    "project/orderline"
                ],
                "summary": "[BETA] Create multiple order lines.",
                "description": "",
                "operationId": "ProjectOrderlineList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectOrderLine"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectOrderLine"
                        }
                    }
                }
            }
        },
        "/project/participant/{id}": {
            "get": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Find project participant by ID.",
                "description": "",
                "operationId": "ProjectParticipant_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectParticipant"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Update project participant.",
                "description": "",
                "operationId": "ProjectParticipant_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectParticipant"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectParticipant"
                        }
                    }
                }
            }
        },
        "/project/participant": {
            "post": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Add new project participant.",
                "description": "",
                "operationId": "ProjectParticipant_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectParticipant"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectParticipant"
                        }
                    }
                }
            }
        },
        "/project/participant/list": {
            "post": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Add new project participant. Multiple project participants can be sent in the same request.",
                "description": "",
                "operationId": "ProjectParticipantList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectParticipant"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectParticipant"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project/participant"
                ],
                "summary": "[BETA] Delete project participants.",
                "description": "",
                "operationId": "ProjectParticipantList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/{id}/period/invoicingReserve": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find invoicing reserve by project period.",
                "description": "",
                "operationId": "ProjectPeriodInvoicingReserve_invoicingReserve",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectPeriodInvoicingReserve"
                        }
                    }
                }
            }
        },
        "/project/{id}/period/invoiced": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find invoiced info by project period.",
                "description": "",
                "operationId": "ProjectPeriodInvoiced_invoiced",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectPeriodInvoiced"
                        }
                    }
                }
            }
        },
        "/project/{id}/period/overallStatus": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find overall status by project period.",
                "description": "",
                "operationId": "ProjectPeriodOverallStatus_overallStatus",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectPeriodOverallStatus"
                        }
                    }
                }
            }
        },
        "/project/{id}/period/monthlyStatus": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find overall status by project period.",
                "description": "",
                "operationId": "ProjectPeriodMonthlyStatus_monthlyStatus",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectPeriodMonthlyStatus"
                        }
                    }
                }
            }
        },
        "/project/{id}/period/hourlistReport": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Find hourlist report by project period.",
                "description": "",
                "operationId": "ProjectPeriodHourlistReport_hourlistReport",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.).",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectPeriodHourlyReport"
                        }
                    }
                }
            }
        },
        "/project/{id}/period/budgetStatus": {
            "get": {
                "tags": [
                    "project/period"
                ],
                "summary": "Get the budget status for the project period",
                "description": "",
                "operationId": "ProjectPeriodBudgetStatus_getBudgetStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectBudgetStatus"
                        }
                    }
                }
            }
        },
        "/project/projectActivity/{id}": {
            "get": {
                "tags": [
                    "project/projectActivity"
                ],
                "summary": "Find project activity by id",
                "description": "",
                "operationId": "ProjectProjectActivity_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectActivity"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project/projectActivity"
                ],
                "summary": "Delete project activity",
                "description": "",
                "operationId": "ProjectProjectActivity_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/projectActivity": {
            "post": {
                "tags": [
                    "project/projectActivity"
                ],
                "summary": "Add project activity.",
                "description": "",
                "operationId": "ProjectProjectActivity_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectActivity"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectActivity"
                        }
                    }
                }
            }
        },
        "/project/projectActivity/list": {
            "delete": {
                "tags": [
                    "project/projectActivity"
                ],
                "summary": "Delete project activities",
                "description": "",
                "operationId": "ProjectProjectActivityList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/controlForm/{id}": {
            "get": {
                "tags": [
                    "project/controlForm"
                ],
                "summary": "[BETA] Get project control form by ID.",
                "description": "",
                "operationId": "ProjectControlForm_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectControlForm"
                        }
                    }
                }
            }
        },
        "/project/controlForm": {
            "get": {
                "tags": [
                    "project/controlForm"
                ],
                "summary": "[BETA] Get project control forms by project ID.",
                "description": "",
                "operationId": "ProjectControlForm_search",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Project ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectControlForm"
                        }
                    }
                }
            }
        },
        "/project/controlFormType/{id}": {
            "get": {
                "tags": [
                    "project/controlFormType"
                ],
                "summary": "[BETA] Get project control form type by ID.",
                "description": "",
                "operationId": "ProjectControlFormType_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectControlFormType"
                        }
                    }
                }
            }
        },
        "/project/controlFormType": {
            "get": {
                "tags": [
                    "project/controlFormType"
                ],
                "summary": "[BETA] Get project control form types",
                "description": "",
                "operationId": "ProjectControlFormType_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectControlFormType"
                        }
                    }
                }
            }
        },
        "/project/hourlyRates/{id}": {
            "get": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Find project hourly rate by ID.",
                "description": "",
                "operationId": "ProjectHourlyRates_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectHourlyRate"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Update a project hourly rate.",
                "description": "",
                "operationId": "ProjectHourlyRates_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectHourlyRate"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectHourlyRate"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Delete Project Hourly Rate ",
                "description": "",
                "operationId": "ProjectHourlyRates_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/hourlyRates": {
            "get": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Find project hourly rates corresponding with sent data.",
                "description": "",
                "operationId": "ProjectHourlyRates_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "TYPE_PREDEFINED_HOURLY_RATES",
                            "TYPE_PROJECT_SPECIFIC_HOURLY_RATES",
                            "TYPE_FIXED_HOURLY_RATE"
                        ]
                    },
                    {
                        "name": "startDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "showInProjectOrder",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectHourlyRate"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Create a project hourly rate. ",
                "description": "",
                "operationId": "ProjectHourlyRates_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectHourlyRate"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectHourlyRate"
                        }
                    }
                }
            }
        },
        "/project/hourlyRates/list": {
            "post": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Create multiple project hourly rates.",
                "description": "",
                "operationId": "ProjectHourlyRatesList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectHourlyRate"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectHourlyRate"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Update multiple project hourly rates.",
                "description": "",
                "operationId": "ProjectHourlyRatesList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectHourlyRate"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectHourlyRate"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Delete project hourly rates.",
                "description": "",
                "operationId": "ProjectHourlyRatesList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/hourlyRates/updateOrAddHourRates": {
            "put": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Update or add the same project hourly rate from project overview.",
                "description": "",
                "operationId": "ProjectHourlyRatesUpdateOrAddHourRates_updateOrAddHourRates",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/HourlyRate"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectHourlyRate"
                        }
                    }
                }
            }
        },
        "/project/hourlyRates/deleteByProjectIds": {
            "delete": {
                "tags": [
                    "project/hourlyRates"
                ],
                "summary": "Delete project hourly rates by project id.",
                "description": "",
                "operationId": "ProjectHourlyRatesDeleteByProjectIds_deleteByProjectIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                }
            }
        },
        "/project/hourlyRates/projectSpecificRates/{id}": {
            "get": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Find project specific rate by ID.",
                "description": "",
                "operationId": "ProjectHourlyRatesProjectSpecificRates_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectSpecificRate"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Update a project specific rate.",
                "description": "",
                "operationId": "ProjectHourlyRatesProjectSpecificRates_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecificRate"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectSpecificRate"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Delete project specific rate ",
                "description": "",
                "operationId": "ProjectHourlyRatesProjectSpecificRates_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/hourlyRates/projectSpecificRates": {
            "get": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Find project specific rates corresponding with sent data.",
                "description": "",
                "operationId": "ProjectHourlyRatesProjectSpecificRates_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectHourlyRateId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectSpecificRate"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Create new project specific rate. ",
                "description": "",
                "operationId": "ProjectHourlyRatesProjectSpecificRates_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectSpecificRate"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectSpecificRate"
                        }
                    }
                }
            }
        },
        "/project/hourlyRates/projectSpecificRates/list": {
            "post": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Create multiple new project specific rates.",
                "description": "",
                "operationId": "ProjectHourlyRatesProjectSpecificRatesList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectSpecificRate"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectSpecificRate"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Update multiple project specific rates.",
                "description": "",
                "operationId": "ProjectHourlyRatesProjectSpecificRatesList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProjectSpecificRate"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProjectSpecificRate"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "project/hourlyRates/projectSpecificRates"
                ],
                "summary": "Delete project specific rates.",
                "description": "",
                "operationId": "ProjectHourlyRatesProjectSpecificRatesList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/project/resourcePlanBudget": {
            "get": {
                "tags": [
                    "project/resourceplan"
                ],
                "summary": "Get resource plan entries in the specified period.",
                "description": "",
                "operationId": "ProjectResourcePlanBudget_get",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "periodStart",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodEnd",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "periodType",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "HOUR",
                            "DAY",
                            "WEEK",
                            "MONTH"
                        ]
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperResourcePlanBudget"
                        }
                    }
                }
            }
        },
        "/project/settings": {
            "get": {
                "tags": [
                    "project/settings"
                ],
                "summary": "Get project settings of logged in company.",
                "description": "",
                "operationId": "ProjectSettings_get",
                "parameters": [
                    {
                        "name": "useNkode",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectSettings"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "project/settings"
                ],
                "summary": "Update project settings for company",
                "description": "",
                "operationId": "ProjectSettings_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/ProjectSettings"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectSettings"
                        }
                    }
                }
            }
        },
        "/project/task": {
            "get": {
                "tags": [
                    "project/task"
                ],
                "summary": "Find all tasks for project.",
                "description": "",
                "operationId": "ProjectTask_search",
                "parameters": [
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTask"
                        }
                    }
                }
            }
        },
        "/project/template/{id}": {
            "get": {
                "tags": [
                    "project/template"
                ],
                "summary": "Get project template by ID.",
                "description": "",
                "operationId": "ProjectTemplate_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProjectTemplate"
                        }
                    }
                }
            }
        },
        "/crm/prospect/{id}": {
            "get": {
                "tags": [
                    "crm/prospect"
                ],
                "summary": "Get prospect by ID.",
                "description": "",
                "operationId": "CrmProspect_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperProspect"
                        }
                    }
                }
            }
        },
        "/crm/prospect": {
            "get": {
                "tags": [
                    "crm/prospect"
                ],
                "summary": "Find prospects corresponding with sent data.",
                "description": "",
                "operationId": "CrmProspect_search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "createdDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "salesEmployeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isClosed",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "closedReason",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "closedDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "closedDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "competitor",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "prospectType",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectOfferId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProspect"
                        }
                    }
                }
            }
        },
        "/pickupPoint/{id}": {
            "get": {
                "tags": [
                    "pickupPoint"
                ],
                "summary": "[BETA] Find pickup point by ID.",
                "description": "",
                "operationId": "PickupPoint_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPickupPoint"
                        }
                    }
                }
            }
        },
        "/pickupPoint": {
            "get": {
                "tags": [
                    "pickupPoint"
                ],
                "summary": "[BETA] Search pickup points.",
                "description": "",
                "operationId": "PickupPoint_search",
                "parameters": [
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Valid ids.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "transportTypeId",
                        "in": "query",
                        "description": "Valid TransportType ids.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePickupPoint"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": " [BETA] Find purchase order by ID.",
                "description": "",
                "operationId": "PurchaseOrder_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": " [BETA] Update purchase order.",
                "description": "",
                "operationId": "PurchaseOrder_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": " [BETA] Delete purchase order.",
                "description": "",
                "operationId": "PurchaseOrder_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder": {
            "get": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Find purchase orders with send data",
                "description": "",
                "operationId": "PurchaseOrder_search",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deliveryDateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "deliveryDateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "creationDateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "creationDateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isClosed",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "withDeviationOnly",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePurchaseOrder"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Creates a new purchase order",
                "description": "",
                "operationId": "PurchaseOrder_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrder"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/{id}/:send": {
            "put": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Send purchase order by id and sendType.",
                "description": "",
                "operationId": "PurchaseOrderSend_send",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sendType",
                        "in": "query",
                        "description": "Send type.DEFAULT will determine the send parameter based on the supplier type.If supplier is not wholesaler, receiverEmail from the PO will be used if it's specified.If receiverEmail empty it will take the vendor email.",
                        "required": false,
                        "type": "string",
                        "default": "DEFAULT",
                        "enum": [
                            "DEFAULT",
                            "EMAIL",
                            "FTP"
                        ]
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/{id}/attachment": {
            "post": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Upload attachment to Purchase Order.",
                "description": "",
                "operationId": "PurchaseOrderAttachment_uploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Delete attachment.",
                "description": "",
                "operationId": "PurchaseOrderAttachment_deleteAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of purchase order containing the attachment to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/{id}/attachment/list": {
            "post": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "Upload multiple attachments to Purchase Order.",
                "description": "",
                "operationId": "PurchaseOrderAttachmentList_uploadAttachments",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Multipart files",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FormDataMultiPart"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/{id}/:sendByEmail": {
            "put": {
                "tags": [
                    "purchaseOrder"
                ],
                "summary": "[BETA] Send purchase order by customisable email.",
                "description": "",
                "operationId": "PurchaseOrderSendByEmail_sendByEmail",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderEmail"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/transportType/{id}": {
            "get": {
                "tags": [
                    "transportType"
                ],
                "summary": " [BETA] Find transport type by ID.",
                "description": "",
                "operationId": "TransportType_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTransportType"
                        }
                    }
                }
            }
        },
        "/transportType": {
            "get": {
                "tags": [
                    "transportType"
                ],
                "summary": " [BETA] Search transport type.",
                "description": "",
                "operationId": "TransportType_search",
                "parameters": [
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "List of valid suppliers ids.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTransportType"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/deviation/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": " [BETA] Get deviation by order line ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviation_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDeviation"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "Update deviation. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviation_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Deviation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDeviation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "[BETA] Delete goods receipt by purchase order ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviation_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/deviation": {
            "get": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "[BETA] Find handled deviations for purchase order. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviation_search",
                "parameters": [
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDeviation"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "[BETA] Register deviation on goods receipt. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviation_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Deviation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDeviation"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/deviation/list": {
            "post": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "[BETA] Register multiple deviations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviationList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deviation"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDeviation"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "[BETA] Update multiple deviations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviationList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Deviation"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseDeviation"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/deviation/{id}/:approve": {
            "put": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "[BETA] Approve deviations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviationApprove_approve",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/deviation/{id}/:deliver": {
            "put": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "[BETA] Send deviations to approval. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviationDeliver_deliver",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/deviation/{id}/:undeliver": {
            "put": {
                "tags": [
                    "purchaseOrder/deviation"
                ],
                "summary": "[BETA] Undeliver the deviations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderDeviationUndeliver_undeliver",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceipt/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Get goods receipt by purchase order ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceipt_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceipt"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Update goods receipt. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceipt_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Goods Receipt ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsReceipt"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceipt"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Delete goods receipt by ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceipt_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceipt": {
            "get": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Get goods receipt. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceipt_search",
                "parameters": [
                    {
                        "name": "receivedDateFrom",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "receivedDateTo",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and incl.).",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "STATUS_OPEN",
                            "STATUS_CONFIRMED"
                        ]
                    },
                    {
                        "name": "withoutPurchase",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceipt"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Register goods receipt without an existing purchase order. When registration of several goods receipt, use /list for better performance. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceipt_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsReceipt"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceipt"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceipt/list": {
            "post": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Register multiple goods receipt without an existing purchase order. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsReceipt"
                            }
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceipt"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Delete multiple goods receipt by ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceipt/{id}/:registerGoodsReceipt": {
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Register goods receipt. Quantity received on the products is set to the same as quantity ordered. To update the quantity received, use PUT /purchaseOrder/goodsReceiptLine/{id}. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptRegisterGoodsReceipt_registerGoodsReceipt",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "registrationDate",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "inventoryId",
                        "in": "query",
                        "description": "ID of inventory. Main inventory is set as default",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceipt"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceipt/{id}/:confirm": {
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA] Confirm goods receipt. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptConfirm_confirm",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "createRestOrder",
                        "in": "query",
                        "description": "Create restorder if quantity received is less than ordered",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceipt/{id}/:receiveAndConfirm": {
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceipt"
                ],
                "summary": "[BETA]  Receive all ordered products and approve goods receipt. Only available for users that have activated the Logistics/Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptReceiveAndConfirm_receiveAndConfirm",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Purchase Order ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "receivedDate",
                        "in": "query",
                        "description": "The approval date for the subscription.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "inventoryId",
                        "in": "query",
                        "description": "ID of inventory. Main inventory is set as default",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string",
                        "default": "*"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrder"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceiptLine/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Get goods receipt line by purchase order line ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptLine_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceiptLine"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Update a goods receipt line on a goods receipt. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptLine_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Goods receipt Line ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsReceiptLine"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceiptLine"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Delete goods receipt line by ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptLine_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceiptLine": {
            "get": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Find goods receipt lines for purchase order. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptLine_search",
                "parameters": [
                    {
                        "name": "purchaseOrderId",
                        "in": "query",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceiptLine"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Register new goods receipt; new product on an existing purchase order. When registration of several goods receipt, use /list for better performance. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptLine_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/GoodsReceiptLine"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperGoodsReceiptLine"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/goodsReceiptLine/list": {
            "post": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Register multiple new goods receipt on an existing purchase order. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptLineList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsReceiptLine"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceiptLine"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Update goods receipt lines on a goods receipt. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptLineList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsReceiptLine"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseGoodsReceiptLine"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/goodsReceiptLine"
                ],
                "summary": "[BETA] Delete goods receipt lines by ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderGoodsReceiptLineList_deleteList",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing objects to delete. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GoodsReceiptLine"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder/purchaseOrderIncomingInvoiceRelation"
                ],
                "summary": "[BETA] Find purchase order relation to voucher by ID. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderPurchaseOrderIncomingInvoiceRelation_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrderIncomingInvoiceRelation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/purchaseOrderIncomingInvoiceRelation"
                ],
                "summary": "[BETA] Delete purchase order voucher relation. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderPurchaseOrderIncomingInvoiceRelation_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation": {
            "get": {
                "tags": [
                    "purchaseOrder/purchaseOrderIncomingInvoiceRelation"
                ],
                "summary": "[BETA] Find purchase order relation to voucher with sent data. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderPurchaseOrderIncomingInvoiceRelation_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "orderOutId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voucherId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePurchaseOrderIncomingInvoiceRelation"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "purchaseOrder/purchaseOrderIncomingInvoiceRelation"
                ],
                "summary": "[BETA] Create new relation between purchase order and a voucher. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderPurchaseOrderIncomingInvoiceRelation_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderIncomingInvoiceRelation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrderIncomingInvoiceRelation"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/purchaseOrderIncomingInvoiceRelation/list": {
            "post": {
                "tags": [
                    "purchaseOrder/purchaseOrderIncomingInvoiceRelation"
                ],
                "summary": "[BETA] Create a new list of relations between purchase order and voucher. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderPurchaseOrderIncomingInvoiceRelationList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderIncomingInvoiceRelation"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePurchaseOrderIncomingInvoiceRelation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/purchaseOrderIncomingInvoiceRelation"
                ],
                "summary": "[BETA] Delete multiple purchase order voucher relations. Only available for users that have activated the Logistics Plus Beta-program in 'Our customer account'",
                "description": "",
                "operationId": "PurchaseOrderPurchaseOrderIncomingInvoiceRelationList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/orderline/{id}": {
            "get": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": " [BETA] Find purchase order line by ID.",
                "description": "",
                "operationId": "PurchaseOrderOrderline_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrderline"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": " [BETA] Updates purchase order line",
                "description": "",
                "operationId": "PurchaseOrderOrderline_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderline"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrderline"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": " [BETA] Delete purchase order line.",
                "description": "",
                "operationId": "PurchaseOrderOrderline_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/purchaseOrder/orderline": {
            "post": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": " [BETA] Creates purchase order line.",
                "description": "",
                "operationId": "PurchaseOrderOrderline_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PurchaseOrderline"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPurchaseOrderline"
                        }
                    }
                }
            }
        },
        "/purchaseOrder/orderline/list": {
            "post": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": "Create list of new purchase order lines.",
                "description": "",
                "operationId": "PurchaseOrderOrderlineList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderline"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePurchaseOrderline"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": "[BETA] Update a list of purchase order lines.",
                "description": "",
                "operationId": "PurchaseOrderOrderlineList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderline"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePurchaseOrderline"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "purchaseOrder/orderline"
                ],
                "summary": "[BETA] Delete purchase order lines by ID.",
                "description": "",
                "operationId": "PurchaseOrderOrderlineList_deleteList",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing objects to delete. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PurchaseOrderline"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/reminder/{id}": {
            "get": {
                "tags": [
                    "reminder"
                ],
                "summary": "Get reminder by ID.",
                "description": "",
                "operationId": "Reminder_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperReminder"
                        }
                    }
                }
            }
        },
        "/reminder": {
            "get": {
                "tags": [
                    "reminder"
                ],
                "summary": "Find reminders corresponding with sent data.",
                "description": "",
                "operationId": "Reminder_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "termOfPaymentTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "termOfPaymentFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseReminder"
                        }
                    }
                }
            }
        },
        "/reminder/{reminderId}/pdf": {
            "get": {
                "tags": [
                    "reminder"
                ],
                "summary": "Get reminder document by reminder ID.",
                "description": "",
                "operationId": "ReminderPdf_downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "reminderId",
                        "in": "path",
                        "description": "Reminder ID from which PDF is downloaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            }
        },
        "/internal/resourcePlan2/permissions/modal/{jobId}": {
            "get": {
                "tags": [
                    "internalresourcePlan2permissions"
                ],
                "summary": "Gets information about user permissions when editing a job",
                "description": "",
                "operationId": "InternalResourcePlan2PermissionsModal_getModal",
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperRP2ModalPermissionsDTO"
                        }
                    }
                }
            }
        },
        "/resultbudget": {
            "get": {
                "tags": [
                    "resultbudget"
                ],
                "summary": "Find result budgets corresponding with sent data. Either specify the ids of the departments, projects, products or employees to return result budgets for, or use the boolean parameters includeAll***ResultBudgets to get all results budgets.",
                "description": "",
                "operationId": "Resultbudget_search",
                "parameters": [
                    {
                        "name": "departmentIds",
                        "in": "query",
                        "description": "List of department ids to return result budgets for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectIds",
                        "in": "query",
                        "description": "List of project ids to return result budgets for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "productIds",
                        "in": "query",
                        "description": "List of product ids to return result budgets for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of employee ids to return result budgets for",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to current year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "includeAllDepartmentResultBudgets",
                        "in": "query",
                        "description": "Include all department result budgets for active departments",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeAllProjectResultBudgets",
                        "in": "query",
                        "description": "Include all project result budgets for active projects",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeAllProductResultBudgets",
                        "in": "query",
                        "description": "Include all product result budgets for active products",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "includeAllEmployeeResultBudgets",
                        "in": "query",
                        "description": "Include all employee result budgets for active employees",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseResultBudget"
                        }
                    }
                }
            }
        },
        "/resultbudget/company": {
            "get": {
                "tags": [
                    "resultbudget"
                ],
                "summary": "Get result budget for company",
                "description": "",
                "operationId": "ResultbudgetCompany_getCompanyResultBudget",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to current year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseResultBudget"
                        }
                    }
                }
            }
        },
        "/resultbudget/department/{id}": {
            "get": {
                "tags": [
                    "resultbudget"
                ],
                "summary": "Get result budget associated with a departmentId",
                "description": "",
                "operationId": "ResultbudgetDepartment_getDepartmentResultBudget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to current year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseResultBudget"
                        }
                    }
                }
            }
        },
        "/resultbudget/project/{id}": {
            "get": {
                "tags": [
                    "resultbudget"
                ],
                "summary": "Get result budget associated with a projectId",
                "description": "",
                "operationId": "ResultbudgetProject_getProjectResultBudget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to current year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseResultBudget"
                        }
                    }
                }
            }
        },
        "/resultbudget/product/{id}": {
            "get": {
                "tags": [
                    "resultbudget"
                ],
                "summary": "Get result budget associated with a productId",
                "description": "",
                "operationId": "ResultbudgetProduct_getProductResultBudget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to current year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseResultBudget"
                        }
                    }
                }
            }
        },
        "/resultbudget/employee/{id}": {
            "get": {
                "tags": [
                    "resultbudget"
                ],
                "summary": "Get result budget associated with an employeeId",
                "description": "",
                "operationId": "ResultbudgetEmployee_getEmployeeResultBudget",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to current year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseResultBudget"
                        }
                    }
                }
            }
        },
        "/saft/importSAFT": {
            "post": {
                "tags": [
                    "saft"
                ],
                "summary": "[BETA] Import SAF-T. Send XML file as multipart form.",
                "description": "",
                "operationId": "SaftImportSAFT_importSAFT",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "saftFile",
                        "in": "formData",
                        "description": "The SAF-T file (XML)",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "mappingFile",
                        "in": "formData",
                        "description": "Mapping of chart of accounts (Excel). See https://tripletex.no/resources/examples/saft_account_mapping.xls",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "importCustomerVendors",
                        "in": "formData",
                        "description": "Create customers and suppliers",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "createMissingAccounts",
                        "in": "formData",
                        "description": "Create new accounts",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "importStartBalanceFromOpening",
                        "in": "formData",
                        "description": "Create an opening balance from the import file's starting balance.",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "importStartBalanceFromClosing",
                        "in": "formData",
                        "description": "Create an opening balance from the import file's outgoing balance.",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "importVouchers",
                        "in": "formData",
                        "description": "Create vouchers",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "importDepartments",
                        "in": "formData",
                        "description": "Create departments",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "importProjects",
                        "in": "formData",
                        "description": "Create projects",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "tripletexGeneratesCustomerNumbers",
                        "in": "formData",
                        "description": "Let Tripletex create customer and supplier numbers and ignore the numbers in the import file.",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "createCustomerIB",
                        "in": "formData",
                        "description": "Create an opening balance on accounts receivable from customers",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "updateAccountNames",
                        "in": "formData",
                        "description": "Overwrite existing names on accounts",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "createVendorIB",
                        "in": "formData",
                        "description": "Create an opening balance on accounts payable",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "overrideVoucherDateOnDiscrepancy",
                        "in": "formData",
                        "description": "Overwrite transaction date on period discrepancies.",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "overwriteCustomersContacts",
                        "in": "formData",
                        "description": "Overwrite existing customers/contacts",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "onlyActiveCustomers",
                        "in": "formData",
                        "description": "Only active customers",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "onlyActiveAccounts",
                        "in": "formData",
                        "description": "Only active accounts",
                        "required": true,
                        "type": "boolean"
                    },
                    {
                        "name": "updateStartBalance",
                        "in": "formData",
                        "description": "Update the opening balance of main ledger accounts from the import file by import before the opening balance.",
                        "required": true,
                        "type": "boolean"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/saft/exportSAFT": {
            "get": {
                "tags": [
                    "saft"
                ],
                "summary": "[BETA] Create SAF-T export for the Tripletex account.",
                "description": "",
                "operationId": "SaftExportSAFT_exportSAFT",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year to export",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            }
        },
        "/salary/type/{id}": {
            "get": {
                "tags": [
                    "salary/type"
                ],
                "summary": "Find salary type by ID.",
                "description": "",
                "operationId": "SalaryType_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalaryType"
                        }
                    }
                }
            }
        },
        "/salary/type": {
            "get": {
                "tags": [
                    "salary/type"
                ],
                "summary": "Find salary type corresponding with sent data.",
                "description": "",
                "operationId": "SalaryType_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "showInTimesheet",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSalaryType"
                        }
                    }
                }
            }
        },
        "/salary/compilation": {
            "get": {
                "tags": [
                    "salary/compilation"
                ],
                "summary": "Find salary compilation by employee.",
                "description": "",
                "operationId": "SalaryCompilation_get",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to previous year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalaryCompilation"
                        }
                    }
                }
            }
        },
        "/salary/compilation/pdf": {
            "get": {
                "tags": [
                    "salary/compilation"
                ],
                "summary": "Find salary compilation (PDF document) by employee.",
                "description": "",
                "operationId": "SalaryCompilationPdf_downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Must be between 1900-2100. Defaults to previous year.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            }
        },
        "/salary/payslip/{id}": {
            "get": {
                "tags": [
                    "salary/payslip"
                ],
                "summary": "Find payslip by ID.",
                "description": "",
                "operationId": "SalaryPayslip_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPayslip"
                        }
                    }
                }
            }
        },
        "/salary/payslip": {
            "get": {
                "tags": [
                    "salary/payslip"
                ],
                "summary": "Find payslips corresponding with sent data.",
                "description": "",
                "operationId": "SalaryPayslip_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "wageTransactionId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "yearFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "yearTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "monthFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "monthTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "voucherDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voucherDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePayslip"
                        }
                    }
                }
            }
        },
        "/salary/payslip/{id}/pdf": {
            "get": {
                "tags": [
                    "salary/payslip"
                ],
                "summary": "Find payslip (PDF document) by ID.",
                "description": "",
                "operationId": "SalaryPayslipPdf_downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            }
        },
        "/salary/settings": {
            "get": {
                "tags": [
                    "salary/settings"
                ],
                "summary": "Get salary settings of logged in company.",
                "description": "",
                "operationId": "SalarySettings_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalarySettings"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "salary/settings"
                ],
                "summary": "Update settings of logged in company.",
                "description": "",
                "operationId": "SalarySettings_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SalarySettings"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalarySettings"
                        }
                    }
                }
            }
        },
        "/salary/settings/holiday/{id}": {
            "put": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "Update a holiday setting of current logged in company.",
                "description": "",
                "operationId": "SalarySettingsHoliday_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CompanyHoliday"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyHoliday"
                        }
                    }
                }
            }
        },
        "/salary/settings/holiday": {
            "get": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "Find holiday settings of current logged in company.",
                "description": "",
                "operationId": "SalarySettingsHoliday_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompanyHoliday"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "Create a holiday setting of current logged in company.",
                "description": "",
                "operationId": "SalarySettingsHoliday_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CompanyHoliday"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyHoliday"
                        }
                    }
                }
            }
        },
        "/salary/settings/holiday/list": {
            "post": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "Create multiple holiday settings of current logged in company.",
                "description": "",
                "operationId": "SalarySettingsHolidayList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyHoliday"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompanyHoliday"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "Update multiple holiday settings of current logged in company.",
                "description": "",
                "operationId": "SalarySettingsHolidayList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CompanyHoliday"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompanyHoliday"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "salary/settings/holiday"
                ],
                "summary": "Delete multiple holiday settings of current logged in company.",
                "description": "",
                "operationId": "SalarySettingsHolidayList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/salary/settings/pensionScheme/{id}": {
            "get": {
                "tags": [
                    "salary/settings/pensionScheme"
                ],
                "summary": "Get Pension Scheme for a specific ID",
                "description": "",
                "operationId": "SalarySettingsPensionScheme_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPensionScheme"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "salary/settings/pensionScheme"
                ],
                "summary": "Update a Pension Scheme",
                "description": "",
                "operationId": "SalarySettingsPensionScheme_put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PensionScheme"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPensionScheme"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "salary/settings/pensionScheme"
                ],
                "summary": "Delete a Pension Scheme",
                "description": "",
                "operationId": "SalarySettingsPensionScheme_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/salary/settings/pensionScheme": {
            "get": {
                "tags": [
                    "salary/settings/pensionScheme"
                ],
                "summary": "Find pension schemes.",
                "description": "",
                "operationId": "SalarySettingsPensionScheme_search",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePensionScheme"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "salary/settings/pensionScheme"
                ],
                "summary": "Create a Pension Scheme.",
                "description": "",
                "operationId": "SalarySettingsPensionScheme_post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PensionScheme"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPensionScheme"
                        }
                    }
                }
            }
        },
        "/salary/settings/pensionScheme/list": {
            "post": {
                "tags": [
                    "salary/settings/pensionScheme"
                ],
                "summary": "Create multiple Pension Schemes.",
                "description": "",
                "operationId": "SalarySettingsPensionSchemeList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PensionScheme"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePensionScheme"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "salary/settings/pensionScheme"
                ],
                "summary": "Update multiple Pension Schemes.",
                "description": "",
                "operationId": "SalarySettingsPensionSchemeList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PensionScheme"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePensionScheme"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "salary/settings/pensionScheme"
                ],
                "summary": "Delete multiple Pension Schemes.",
                "description": "",
                "operationId": "SalarySettingsPensionSchemeList_deleteByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/salary/settings/standardTime/{id}": {
            "get": {
                "tags": [
                    "salary/settings/standardTime"
                ],
                "summary": "Find standard time by ID.",
                "description": "",
                "operationId": "SalarySettingsStandardTime_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyStandardTime"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "salary/settings/standardTime"
                ],
                "summary": "Update standard time. ",
                "description": "",
                "operationId": "SalarySettingsStandardTime_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CompanyStandardTime"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyStandardTime"
                        }
                    }
                }
            }
        },
        "/salary/settings/standardTime": {
            "get": {
                "tags": [
                    "salary/settings/standardTime"
                ],
                "summary": "Get all standard times.",
                "description": "",
                "operationId": "SalarySettingsStandardTime_search",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompanyStandardTime"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "salary/settings/standardTime"
                ],
                "summary": "Create standard time.",
                "description": "",
                "operationId": "SalarySettingsStandardTime_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CompanyStandardTime"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyStandardTime"
                        }
                    }
                }
            }
        },
        "/salary/settings/standardTime/byDate": {
            "get": {
                "tags": [
                    "salary/settings/standardTime"
                ],
                "summary": "Find standard time by date",
                "description": "",
                "operationId": "SalarySettingsStandardTimeByDate_getByDate",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyStandardTime"
                        }
                    }
                }
            }
        },
        "/salary/transaction/{id}": {
            "get": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "Find salary transaction by ID.",
                "description": "",
                "operationId": "SalaryTransaction_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalaryTransaction"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "Delete salary transaction by ID.",
                "description": "",
                "operationId": "SalaryTransaction_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/salary/transaction": {
            "post": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "Create a new salary transaction.",
                "description": "",
                "operationId": "SalaryTransaction_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/SalaryTransaction"
                        }
                    },
                    {
                        "name": "generateTaxDeduction",
                        "in": "query",
                        "description": "Generate tax deduction",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSalaryTransaction"
                        }
                    }
                }
            }
        },
        "/salary/transaction/{id}/attachment": {
            "post": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "Upload an attachment to a salary transaction",
                "description": "",
                "operationId": "SalaryTransactionAttachment_uploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Salary Transaction Id to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInteger"
                        }
                    }
                }
            }
        },
        "/salary/transaction/{id}/attachment/list": {
            "post": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "Upload multiple attachments to a salary transaction",
                "description": "",
                "operationId": "SalaryTransactionAttachmentList_uploadAttachments",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Salary Transaction Id to upload attachments to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Multipart files",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FormDataMultiPart"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInteger"
                        }
                    }
                }
            }
        },
        "/salary/transaction/{id}/deleteAttachment": {
            "put": {
                "tags": [
                    "salary/transaction"
                ],
                "summary": "Delete attachment.",
                "description": "",
                "operationId": "SalaryTransactionDeleteAttachment_deleteAttachment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of transaction containing the attachment to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "sendToVoucherInbox",
                        "in": "query",
                        "description": "Should the attachment be sent to inbox rather than deleted?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "split",
                        "in": "query",
                        "description": "If sendToInbox is true, should the attachment be split into one voucher per page?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/supplier/{id}": {
            "get": {
                "tags": [
                    "supplier"
                ],
                "summary": "Get supplier by ID.",
                "description": "",
                "operationId": "Supplier_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplier"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "supplier"
                ],
                "summary": "Update supplier. ",
                "description": "",
                "operationId": "Supplier_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplier"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "supplier"
                ],
                "summary": "[BETA] Delete supplier by ID",
                "description": "",
                "operationId": "Supplier_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/supplier": {
            "get": {
                "tags": [
                    "supplier"
                ],
                "summary": "Find suppliers corresponding with sent data.",
                "description": "",
                "operationId": "Supplier_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "supplierNumber",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organizationNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceEmail",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "accountManagerId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "changedSince",
                        "in": "query",
                        "description": "Only return elements that have changed since this date and time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isWholesaler",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "showProducts",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplier"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "supplier"
                ],
                "summary": "Create supplier. Related supplier addresses may also be created.",
                "description": "",
                "operationId": "Supplier_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Supplier"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplier"
                        }
                    }
                }
            }
        },
        "/supplier/list": {
            "post": {
                "tags": [
                    "supplier"
                ],
                "summary": "[BETA] Create multiple suppliers. Related supplier addresses may also be created.",
                "description": "",
                "operationId": "SupplierList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Supplier"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplier"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "supplier"
                ],
                "summary": "[BETA] Update multiple suppliers. Addresses can also be updated.",
                "description": "",
                "operationId": "SupplierList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Supplier"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplier"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/{id}": {
            "get": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Get supplierInvoice by ID.",
                "description": "",
                "operationId": "SupplierInvoice_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice": {
            "get": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Find supplierInvoices corresponding with sent data.",
                "description": "",
                "operationId": "SupplierInvoice_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "kid",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voucherId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "supplierId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/{invoiceId}/:approve": {
            "put": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Approve supplier invoice.",
                "description": "",
                "operationId": "SupplierInvoiceApprove_approve",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "comment",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/forApproval": {
            "get": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Get supplierInvoices for approval",
                "description": "",
                "operationId": "SupplierInvoiceForApproval_getApprovalInvoices",
                "parameters": [
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search for department, employee, project and more",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "showAll",
                        "in": "query",
                        "description": "Show all or just your own",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Default is logged in employee",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/{invoiceId}/pdf": {
            "get": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Get supplierInvoice document by invoice ID.",
                "description": "",
                "operationId": "SupplierInvoicePdf_downloadPdf",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice ID from which document is downloaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/voucher/{id}/postings": {
            "put": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "[BETA] Put debit postings.",
                "description": "",
                "operationId": "SupplierInvoiceVoucherPostings_putPostings",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Voucher id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Postings",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderLinePostingDTO"
                            }
                        }
                    },
                    {
                        "name": "sendToLedger",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "voucherDate",
                        "in": "query",
                        "description": "If set, the date of the voucher and the supplier invoice will be changed to this date. If empty, date will not be changed",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/:approve": {
            "put": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Approve supplier invoices.",
                "description": "",
                "operationId": "SupplierInvoiceApprove_approveMany",
                "parameters": [
                    {
                        "name": "invoiceIds",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "comment",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/:addRecipient": {
            "put": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Add recipient.",
                "description": "",
                "operationId": "SupplierInvoiceAddRecipient_addRecipientToMany",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "invoiceIds",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "comment",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/{invoiceId}/:addRecipient": {
            "put": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Add recipient to supplier invoices.",
                "description": "",
                "operationId": "SupplierInvoiceAddRecipient_addRecipient",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "comment",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/:reject": {
            "put": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "reject supplier invoices.",
                "description": "",
                "operationId": "SupplierInvoiceReject_rejectMany",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "invoiceIds",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/{invoiceId}/:changeDimension": {
            "put": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Change dimension on a supplier invoice.",
                "description": "",
                "operationId": "SupplierInvoiceChangeDimension_changeDimensionMany",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "debitPostingIds",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dimension",
                        "in": "query",
                        "description": "Dimension",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "PROJECT",
                            "DEPARTMENT",
                            "EMPLOYEE",
                            "PRODUCT"
                        ]
                    },
                    {
                        "name": "dimensionId",
                        "in": "query",
                        "description": "DimensionID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/{invoiceId}/:addPayment": {
            "post": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "Register payment, paymentType == 0 finds the last paymentType for this vendor",
                "description": "",
                "operationId": "SupplierInvoiceAddPayment_addPayment",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "paymentType",
                        "in": "query",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "kidOrReceiverReference",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "bban",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "paymentDate",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "useDefaultPaymentType",
                        "in": "query",
                        "description": "Set paymentType to last type for vendor, autopay, nets or first available other type",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "partialPayment",
                        "in": "query",
                        "description": "Set to true to allow multiple payments registered.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/supplierInvoice/{invoiceId}/:reject": {
            "put": {
                "tags": [
                    "supplierInvoice"
                ],
                "summary": "reject supplier invoice.",
                "description": "",
                "operationId": "SupplierInvoiceReject_reject",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "Invoice ID.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSupplierInvoice"
                        }
                    }
                }
            }
        },
        "/voucherApprovalListElement/{id}": {
            "get": {
                "tags": [
                    "voucherApprovalListElement"
                ],
                "summary": "Get by ID.",
                "description": "",
                "operationId": "VoucherApprovalListElement_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucherApprovalListElement"
                        }
                    }
                }
            }
        },
        "/timesheet/allocated/{id}": {
            "get": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Find allocated hour entry by ID.",
                "description": "",
                "operationId": "TimesheetAllocated_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetAllocated"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Update allocated hour entry by ID. Note: Allocated hour entry object fields which are present but not set, or set to 0, will be nulled. Only holiday/vacation hours can receive comments. A notification will be sent to the entry's employee if the entry's comment has changed.",
                "description": "",
                "operationId": "TimesheetAllocated_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetAllocated"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetAllocated"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Delete allocated hour entry by ID.",
                "description": "",
                "operationId": "TimesheetAllocated_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Number of current version",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/timesheet/allocated": {
            "get": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Find allocated hour entries corresponding with sent data.",
                "description": "",
                "operationId": "TimesheetAllocated_search",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetAllocated"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Add new allocated hour entry. Only one entry per employee/date/activity/project combination is supported. Only holiday/vacation hours can receive comments. A notification will be sent to the entry's employee if the entry has a comment.",
                "description": "",
                "operationId": "TimesheetAllocated_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetAllocated"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetAllocated"
                        }
                    }
                }
            }
        },
        "/timesheet/allocated/list": {
            "post": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Add new allocated hour entry. Multiple objects for several users can be sent in the same request. Only holiday/vacation hours can receive comments. Notifications will be sent to the entries' employees if the entries have comments.",
                "description": "",
                "operationId": "TimesheetAllocatedList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimesheetAllocated"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetAllocated"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Update allocated hour entry. Multiple objects for different users can be sent in the same request. Note: Allocated hour entry object fields which are present but not set, or set to 0, will be nulled. Only holiday/vacation hours can receive comments. Notifications will be sent to the entries' employees if the entries' comments have changed.",
                "description": "",
                "operationId": "TimesheetAllocatedList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of allocated hour entry objects to update. Should have ID set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimesheetAllocated"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetAllocated"
                        }
                    }
                }
            }
        },
        "/timesheet/allocated/{id}/:approve": {
            "put": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Only for allocated hours on the company's internal holiday/vacation activity. Mark the allocated hour entry as approved. The hours will be copied to the time sheet. A notification will be sent to the entry's employee if the entry's approval status or comment has changed.",
                "description": "",
                "operationId": "TimesheetAllocatedApprove_approve",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "managerComment",
                        "in": "query",
                        "description": "Comment to be added to the approved hour entry.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetAllocated"
                        }
                    }
                }
            }
        },
        "/timesheet/allocated/{id}/:unapprove": {
            "put": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Only for allocated hours on the company's internal holiday/vacation activity. Mark the allocated hour entry as unapproved. A notification will be sent to the entry's employee if the entry's approval status or comment has changed.",
                "description": "",
                "operationId": "TimesheetAllocatedUnapprove_unapprove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "managerComment",
                        "in": "query",
                        "description": "Comment to be added to the unapproved hour entry.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetAllocated"
                        }
                    }
                }
            }
        },
        "/timesheet/allocated/:approveList": {
            "put": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Only for allocated hours on the company's internal holiday/vacation activity. Mark the allocated hour entry/entries as approved. The hours will be copied to the time sheet. Notifications will be sent to the entries' employees if the entries' approval statuses or comments have changed. If IDs are provided, the other args are ignored.",
                "description": "",
                "operationId": "TimesheetAllocatedApproveList_approveList",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of allocated hour entry IDs.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs. Defaults to ID of token owner.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "managerComment",
                        "in": "query",
                        "description": "Comment to be added to all approved hour entries.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetAllocated"
                        }
                    }
                }
            }
        },
        "/timesheet/allocated/:unapproveList": {
            "put": {
                "tags": [
                    "timesheet/allocated"
                ],
                "summary": "Only for allocated hours on the company's internal holiday/vacation activity. Mark the allocated hour entry/entries as unapproved. Notifications will be sent to the entries' employees if the entries' approval statuses or comments have changed. If IDs are provided, the other args are ignored.",
                "description": "",
                "operationId": "TimesheetAllocatedUnapproveList_unapproveList",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of allocated hour entry IDs.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs. Defaults to ID of token owner.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "managerComment",
                        "in": "query",
                        "description": "Comment to be added to all unapproved hour entries.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetAllocated"
                        }
                    }
                }
            }
        },
        "/timesheet/companyHoliday/{id}": {
            "get": {
                "tags": [
                    "timesheet/companyHoliday"
                ],
                "summary": "[BETA] Get company holiday by its ID",
                "description": "",
                "operationId": "TimesheetCompanyHoliday_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyHolidays"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timesheet/companyHoliday"
                ],
                "summary": "[BETA] Update a company holiday",
                "description": "",
                "operationId": "TimesheetCompanyHoliday_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CompanyHolidays"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyHolidays"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "timesheet/companyHoliday"
                ],
                "summary": "[BETA] Delete a company holiday",
                "description": "",
                "operationId": "TimesheetCompanyHoliday_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/timesheet/companyHoliday": {
            "get": {
                "tags": [
                    "timesheet/companyHoliday"
                ],
                "summary": "[BETA] Search for company holidays by id or year.",
                "description": "",
                "operationId": "TimesheetCompanyHoliday_search",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "years",
                        "in": "query",
                        "description": "A year `2020` for instance",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCompanyHolidays"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "timesheet/companyHoliday"
                ],
                "summary": "[BETA] Create a company holiday",
                "description": "",
                "operationId": "TimesheetCompanyHoliday_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/CompanyHolidays"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCompanyHolidays"
                        }
                    }
                }
            }
        },
        "/timesheet/entry/{id}": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find timesheet entry by ID.",
                "description": "",
                "operationId": "TimesheetEntry_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetEntry"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Update timesheet entry by ID. Note: Timesheet entry object fields which are present but not set, or set to 0, will be nulled.",
                "description": "",
                "operationId": "TimesheetEntry_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetEntry"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetEntry"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Delete timesheet entry by ID.",
                "description": "",
                "operationId": "TimesheetEntry_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Number of current version",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/timesheet/entry": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find timesheet entry corresponding with sent data.",
                "description": "",
                "operationId": "TimesheetEntry_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "comment",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/TimesheetEntrySearchResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Add new timesheet entry. Only one entry per employee/date/activity/project combination is supported.",
                "description": "",
                "operationId": "TimesheetEntry_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetEntry"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetEntry"
                        }
                    }
                }
            }
        },
        "/timesheet/entry/list": {
            "post": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Add new timesheet entry. Multiple objects for several users can be sent in the same request.",
                "description": "",
                "operationId": "TimesheetEntryList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of timesheet entry objects",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimesheetEntry"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetEntry"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Update timesheet entry. Multiple objects for different users can be sent in the same request.",
                "description": "",
                "operationId": "TimesheetEntryList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "List of timesheet entry objects to update",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TimesheetEntry"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetEntry"
                        }
                    }
                }
            }
        },
        "/timesheet/entry/>recentProjects": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find projects with recent activities (timesheet entry registered).",
                "description": "",
                "operationId": "TimesheetEntryRecentProjects_getRecentProjects",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "ID of employee with recent project hours Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseProject"
                        }
                    }
                }
            }
        },
        "/timesheet/entry/>recentActivities": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find recently used timesheet activities.",
                "description": "",
                "operationId": "TimesheetEntryRecentActivities_getRecentActivities",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "ID of employee to find activities for. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "ID of project to find activities for",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseActivity"
                        }
                    }
                }
            }
        },
        "/timesheet/entry/>totalHours": {
            "get": {
                "tags": [
                    "timesheet/entry"
                ],
                "summary": "Find total hours registered on an employee in a specific period.",
                "description": "",
                "operationId": "TimesheetEntryTotalHours_getTotalHours",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "ID of employee to find hours for. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (from and incl.). Defaults to today.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "Format is yyyy-MM-dd (to and excl.). Defaults to tomorrow.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperBigDecimal"
                        }
                    }
                }
            }
        },
        "/timesheet/month/{id}": {
            "get": {
                "tags": [
                    "timesheet/month"
                ],
                "summary": "Find monthly status entry by ID.",
                "description": "",
                "operationId": "TimesheetMonth_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMonthlyStatus"
                        }
                    }
                }
            }
        },
        "/timesheet/month/:complete": {
            "put": {
                "tags": [
                    "timesheet/month"
                ],
                "summary": "complete month(s).  If id is provided the other args are ignored",
                "description": "",
                "operationId": "TimesheetMonthComplete_complete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs. Defaults to ID of token owner.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "monthYear",
                        "in": "query",
                        "description": "2020-01",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMonthlyStatus"
                        }
                    }
                }
            }
        },
        "/timesheet/month/:approve": {
            "put": {
                "tags": [
                    "timesheet/month"
                ],
                "summary": "approve month(s).  If id is provided the other args are ignored",
                "description": "",
                "operationId": "TimesheetMonthApprove_approve",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs. Defaults to ID of token owner.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "monthYear",
                        "in": "query",
                        "description": "2020-01",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "approvedUntilDate",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.. Defaults to end of month",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMonthlyStatus"
                        }
                    }
                }
            }
        },
        "/timesheet/month/:unapprove": {
            "put": {
                "tags": [
                    "timesheet/month"
                ],
                "summary": "unapprove month(s).  If id is provided the other args are ignored",
                "description": "",
                "operationId": "TimesheetMonthUnapprove_unapprove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs. Defaults to ID of token owner.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "monthYear",
                        "in": "query",
                        "description": "2020-01",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMonthlyStatus"
                        }
                    }
                }
            }
        },
        "/timesheet/month/:reopen": {
            "put": {
                "tags": [
                    "timesheet/month"
                ],
                "summary": "reopen month(s).  If id is provided the other args are ignored",
                "description": "",
                "operationId": "TimesheetMonthReopen_reopen",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Element ID",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs. Defaults to ID of token owner.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "monthYear",
                        "in": "query",
                        "description": "2020-01",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMonthlyStatus"
                        }
                    }
                }
            }
        },
        "/timesheet/month/byMonthNumber": {
            "get": {
                "tags": [
                    "timesheet/month"
                ],
                "summary": "Find monthly status for given month.",
                "description": "",
                "operationId": "TimesheetMonthByMonthNumber_getByMonthNumber",
                "parameters": [
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs. Defaults to ID of token owner.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "monthYear",
                        "in": "query",
                        "description": "2020-01",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMonthlyStatus"
                        }
                    }
                }
            }
        },
        "/timesheet/salaryProjectTypeSpecification/{id}": {
            "get": {
                "tags": [
                    "timesheet/salaryProjectTypeSpecification"
                ],
                "summary": "[BETA] Get timesheet ProjectSalaryType Specification for a specific ID (PILOT USERS ONLY)",
                "description": "",
                "operationId": "TimesheetSalaryProjectTypeSpecification_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetProjectSalaryTypeSpecification"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timesheet/salaryProjectTypeSpecification"
                ],
                "summary": "[BETA] Update a timesheet ProjectSalaryType Specification (PILOT USERS ONLY)",
                "description": "",
                "operationId": "TimesheetSalaryProjectTypeSpecification_put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetProjectSalaryTypeSpecification"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetProjectSalaryTypeSpecification"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "timesheet/salaryProjectTypeSpecification"
                ],
                "summary": "[BETA] Delete a timesheet SalaryType Specification (PILOT USERS ONLY)",
                "description": "",
                "operationId": "TimesheetSalaryProjectTypeSpecification_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/timesheet/salaryProjectTypeSpecification": {
            "get": {
                "tags": [
                    "timesheet/salaryProjectTypeSpecification"
                ],
                "summary": "[BETA] Get list of timesheet ProjectSalaryType Specifications (PILOT USERS ONLY)",
                "description": "",
                "operationId": "TimesheetSalaryProjectTypeSpecification_search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetProjectSalaryTypeSpecification"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "timesheet/salaryProjectTypeSpecification"
                ],
                "summary": "[BETA] Create a timesheet ProjectSalaryType Specification. (PILOT USERS ONLY)",
                "description": "",
                "operationId": "TimesheetSalaryProjectTypeSpecification_post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetProjectSalaryTypeSpecification"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetProjectSalaryTypeSpecification"
                        }
                    }
                }
            }
        },
        "/timesheet/salaryTypeSpecification/{id}": {
            "get": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Get timesheet SalaryType Specification for a specific ID",
                "description": "",
                "operationId": "TimesheetSalaryTypeSpecification_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetSalaryTypeSpecification"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Update a timesheet SalaryType Specification",
                "description": "",
                "operationId": "TimesheetSalaryTypeSpecification_put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetSalaryTypeSpecification"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetSalaryTypeSpecification"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Delete a timesheet SalaryType Specification",
                "description": "",
                "operationId": "TimesheetSalaryTypeSpecification_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/timesheet/salaryTypeSpecification": {
            "get": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Get list of timesheet SalaryType Specifications",
                "description": "",
                "operationId": "TimesheetSalaryTypeSpecification_search",
                "parameters": [
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimesheetSalaryTypeSpecification"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "timesheet/salaryTypeSpecification"
                ],
                "summary": "[BETA] Create a timesheet SalaryType Specification. Only one entry per employee/date/SalaryType",
                "description": "",
                "operationId": "TimesheetSalaryTypeSpecification_post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimesheetSalaryTypeSpecification"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetSalaryTypeSpecification"
                        }
                    }
                }
            }
        },
        "/timesheet/settings": {
            "get": {
                "tags": [
                    "timesheet/settings"
                ],
                "summary": "[BETA] Get timesheet settings of logged in company.",
                "description": "",
                "operationId": "TimesheetSettings_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimesheetSettings"
                        }
                    }
                }
            }
        },
        "/timesheet/timeClock/{id}": {
            "get": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Find time clock entry by ID.",
                "description": "",
                "operationId": "TimesheetTimeClock_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimeClock"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Update time clock by ID.",
                "description": "",
                "operationId": "TimesheetTimeClock_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TimeClock"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimeClock"
                        }
                    }
                }
            }
        },
        "/timesheet/timeClock/:start": {
            "put": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Start time clock.",
                "description": "",
                "operationId": "TimesheetTimeClockStart_start",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Project ID",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "Activity ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Optional. Default is today’s date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lunchBreakDuration",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "number",
                        "minimum": 0
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimeClock"
                        }
                    }
                }
            }
        },
        "/timesheet/timeClock/{id}/:stop": {
            "put": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Stop time clock.",
                "description": "",
                "operationId": "TimesheetTimeClockStop_stop",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Number of current version",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/timesheet/timeClock": {
            "get": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Find time clock entries corresponding with sent data.",
                "description": "",
                "operationId": "TimesheetTimeClock_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "activityId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hourId",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isRunning",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTimeClock"
                        }
                    }
                }
            }
        },
        "/timesheet/timeClock/present": {
            "get": {
                "tags": [
                    "timesheet/timeClock"
                ],
                "summary": "Find a user’s present running time clock.",
                "description": "",
                "operationId": "TimesheetTimeClockPresent_getPresent",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Employee ID. Defaults to ID of token owner.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTimeClock"
                        }
                    }
                }
            }
        },
        "/timesheet/week": {
            "get": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Find weekly status By ID, week/year combination, employeeId. or an approver",
                "description": "",
                "operationId": "TimesheetWeek_search",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "employeeIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    },
                    {
                        "name": "approvedBy",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseWeek"
                        }
                    }
                }
            }
        },
        "/timesheet/week/:complete": {
            "put": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Complete week. By ID or (ISO-8601 week and employeeId combination).",
                "description": "",
                "operationId": "TimesheetWeekComplete_complete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperWeek"
                        }
                    }
                }
            }
        },
        "/timesheet/week/:approve": {
            "put": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Approve week. By ID or (ISO-8601 week and employeeId combination).",
                "description": "",
                "operationId": "TimesheetWeekApprove_approve",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperWeek"
                        }
                    }
                }
            }
        },
        "/timesheet/week/:unapprove": {
            "put": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Unapprove week. By ID or (ISO-8601 week and employeeId combination).",
                "description": "",
                "operationId": "TimesheetWeekUnapprove_unapprove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperWeek"
                        }
                    }
                }
            }
        },
        "/timesheet/week/:reopen": {
            "put": {
                "tags": [
                    "timesheet/week"
                ],
                "summary": "Reopen week. By ID or (ISO-8601 week and employeeId combination).",
                "description": "",
                "operationId": "TimesheetWeekReopen_reopen",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "weekYear",
                        "in": "query",
                        "description": "ISO-8601 week-year",
                        "required": false,
                        "type": "string",
                        "x-example": "2018-12"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperWeek"
                        }
                    }
                }
            }
        },
        "/travelExpense/accommodationAllowance/{id}": {
            "get": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "Get travel accommodation allowance by ID.",
                "description": "",
                "operationId": "TravelExpenseAccommodationAllowance_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccommodationAllowance"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "Update accommodation allowance.",
                "description": "",
                "operationId": "TravelExpenseAccommodationAllowance_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AccommodationAllowance"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccommodationAllowance"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "Delete accommodation allowance.",
                "description": "",
                "operationId": "TravelExpenseAccommodationAllowance_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/accommodationAllowance": {
            "get": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "Find accommodation allowances corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpenseAccommodationAllowance_search",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateCategoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "countTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "amountFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amountTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseAccommodationAllowance"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "travelExpense/accommodationAllowance"
                ],
                "summary": "Create accommodation allowance.",
                "description": "",
                "operationId": "TravelExpenseAccommodationAllowance_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AccommodationAllowance"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperAccommodationAllowance"
                        }
                    }
                }
            }
        },
        "/travelExpense/cost/{id}": {
            "get": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "Get cost by ID.",
                "description": "",
                "operationId": "TravelExpenseCost_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCost"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "Update cost.",
                "description": "",
                "operationId": "TravelExpenseCost_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Cost"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCost"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "Delete cost.",
                "description": "",
                "operationId": "TravelExpenseCost_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/cost": {
            "get": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "Find costs corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpenseCost_search",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "vatTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "currencyId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "countFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "countTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "amountFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amountTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCost"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "Create cost.",
                "description": "",
                "operationId": "TravelExpenseCost_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Cost"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperCost"
                        }
                    }
                }
            }
        },
        "/travelExpense/cost/list": {
            "put": {
                "tags": [
                    "travelExpense/cost"
                ],
                "summary": "Update costs.",
                "description": "",
                "operationId": "TravelExpenseCostList_putList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing updates to objects. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Cost"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseCost"
                        }
                    }
                }
            }
        },
        "/travelExpense/costParticipant/{id}": {
            "get": {
                "tags": [
                    "travelExpense/costParticipant"
                ],
                "summary": "Get cost participant by ID.",
                "description": "",
                "operationId": "TravelExpenseCostParticipant_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseParticipant"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/costParticipant"
                ],
                "summary": "Delete cost participant.",
                "description": "",
                "operationId": "TravelExpenseCostParticipant_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/costParticipant": {
            "post": {
                "tags": [
                    "travelExpense/costParticipant"
                ],
                "summary": "Create participant on cost.",
                "description": "",
                "operationId": "TravelExpenseCostParticipant_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TravelExpenseParticipant"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseParticipant"
                        }
                    }
                }
            }
        },
        "/travelExpense/costParticipant/list": {
            "post": {
                "tags": [
                    "travelExpense/costParticipant"
                ],
                "summary": "Create participants on cost.",
                "description": "",
                "operationId": "TravelExpenseCostParticipantList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TravelExpenseParticipant"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseParticipant"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/costParticipant"
                ],
                "summary": "Delete cost participants.",
                "description": "",
                "operationId": "TravelExpenseCostParticipantList_deleteList",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing objects to delete. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TravelExpenseParticipant"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/costParticipant/{costId}/costParticipants": {
            "get": {
                "tags": [
                    "travelExpense/costParticipant"
                ],
                "summary": "Get cost's participants by costId.",
                "description": "",
                "operationId": "TravelExpenseCostParticipantCostParticipants_getCostParticipants",
                "parameters": [
                    {
                        "name": "costId",
                        "in": "path",
                        "description": "ID of cost",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseParticipant"
                        }
                    }
                }
            }
        },
        "/travelExpense/costParticipant/createCostParticipantAdvanced": {
            "post": {
                "tags": [
                    "travelExpense/costParticipant"
                ],
                "summary": "Create participant on cost using explicit parameters",
                "description": "",
                "operationId": "TravelExpenseCostParticipantCreateCostParticipantAdvanced_createCostParticipantAdvanced",
                "parameters": [
                    {
                        "name": "displayName",
                        "in": "query",
                        "description": "The name of the participant",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "costId",
                        "in": "query",
                        "description": "ID of cost",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "ID of the employee if it is participant. 0 is allowed if the participant is not an employee",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseParticipant"
                        }
                    }
                }
            }
        },
        "/travelExpense/drivingStop/{id}": {
            "get": {
                "tags": [
                    "travelExpense/drivingStop"
                ],
                "summary": "Get driving stop by ID.",
                "description": "",
                "operationId": "TravelExpenseDrivingStop_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDrivingStop"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/drivingStop"
                ],
                "summary": "Delete mileage allowance stops.",
                "description": "",
                "operationId": "TravelExpenseDrivingStop_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/drivingStop": {
            "post": {
                "tags": [
                    "travelExpense/drivingStop"
                ],
                "summary": "Create mileage allowance driving stop.",
                "description": "",
                "operationId": "TravelExpenseDrivingStop_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/DrivingStop"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperDrivingStop"
                        }
                    }
                }
            }
        },
        "/travelExpense/mileageAllowance/{id}": {
            "get": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "Get mileage allowance by ID.",
                "description": "",
                "operationId": "TravelExpenseMileageAllowance_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMileageAllowance"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "Update mileage allowance.",
                "description": "",
                "operationId": "TravelExpenseMileageAllowance_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MileageAllowance"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMileageAllowance"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "Delete mileage allowance.",
                "description": "",
                "operationId": "TravelExpenseMileageAllowance_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/mileageAllowance": {
            "get": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "Find mileage allowances corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpenseMileageAllowance_search",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateCategoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "kmFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "kmTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amountFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amountTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departureLocation",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isCompanyCar",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseMileageAllowance"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "travelExpense/mileageAllowance"
                ],
                "summary": "Create mileage allowance.",
                "description": "",
                "operationId": "TravelExpenseMileageAllowance_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/MileageAllowance"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperMileageAllowance"
                        }
                    }
                }
            }
        },
        "/travelExpense/passenger/{id}": {
            "get": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "Get passenger by ID.",
                "description": "",
                "operationId": "TravelExpensePassenger_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPassenger"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "Update passenger.",
                "description": "",
                "operationId": "TravelExpensePassenger_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Passenger"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPassenger"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "Delete passenger.",
                "description": "",
                "operationId": "TravelExpensePassenger_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/passenger": {
            "get": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "Find passengers corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpensePassenger_search",
                "parameters": [
                    {
                        "name": "mileageAllowance",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePassenger"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "Create passenger.",
                "description": "",
                "operationId": "TravelExpensePassenger_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Passenger"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPassenger"
                        }
                    }
                }
            }
        },
        "/travelExpense/passenger/list": {
            "post": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "Create passengers.",
                "description": "",
                "operationId": "TravelExpensePassengerList_postList",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Passenger"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePassenger"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/passenger"
                ],
                "summary": "Delete passengers.",
                "description": "",
                "operationId": "TravelExpensePassengerList_deleteList",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing objects to delete. Should have ID and version set.",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Passenger"
                            }
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/perDiemCompensation/{id}": {
            "get": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "Get per diem compensation by ID.",
                "description": "",
                "operationId": "TravelExpensePerDiemCompensation_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPerDiemCompensation"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "Update per diem compensation.",
                "description": "",
                "operationId": "TravelExpensePerDiemCompensation_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PerDiemCompensation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPerDiemCompensation"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "Delete per diem compensation.",
                "description": "",
                "operationId": "TravelExpensePerDiemCompensation_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/perDiemCompensation": {
            "get": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "Find per diem compensations corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpensePerDiemCompensation_search",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTypeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateCategoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "overnightAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "NONE",
                            "HOTEL",
                            "BOARDING_HOUSE_WITHOUT_COOKING",
                            "BOARDING_HOUSE_WITH_COOKING"
                        ]
                    },
                    {
                        "name": "countFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "countTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "rateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "rateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amountFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "amountTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isDeductionForBreakfast",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isLunchDeduction",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isDinnerDeduction",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponsePerDiemCompensation"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "travelExpense/perDiemCompensation"
                ],
                "summary": "Create per diem compensation.",
                "description": "",
                "operationId": "TravelExpensePerDiemCompensation_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PerDiemCompensation"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperPerDiemCompensation"
                        }
                    }
                }
            }
        },
        "/travelExpense/{id}": {
            "get": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Get travel expense by ID.",
                "description": "",
                "operationId": "TravelExpense_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpense"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Update travel expense.",
                "description": "",
                "operationId": "TravelExpense_put",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TravelExpense"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpense"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Delete travel expense.",
                "description": "",
                "operationId": "TravelExpense_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/:copy": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Copy travel expense.",
                "description": "",
                "operationId": "TravelExpenseCopy_copy",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpense"
                        }
                    }
                }
            }
        },
        "/travelExpense": {
            "get": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Find travel expenses corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpense_search",
                "parameters": [
                    {
                        "name": "employeeId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "projectManagerId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "departureDateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "returnDateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "category",
                        "required": false,
                        "type": "string",
                        "default": "ALL",
                        "enum": [
                            "ALL",
                            "OPEN",
                            "APPROVED",
                            "SALARY_PAID",
                            "DELIVERED",
                            "REJECTED"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Create travel expense.",
                "description": "",
                "operationId": "TravelExpense_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TravelExpense"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpense"
                        }
                    }
                }
            }
        },
        "/travelExpense/:approve": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Approve travel expenses.",
                "description": "",
                "operationId": "TravelExpenseApprove_approve",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                }
            }
        },
        "/travelExpense/:unapprove": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Unapprove travel expenses.",
                "description": "",
                "operationId": "TravelExpenseUnapprove_unapprove",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                }
            }
        },
        "/travelExpense/:deliver": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Deliver travel expenses.",
                "description": "",
                "operationId": "TravelExpenseDeliver_deliver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                }
            }
        },
        "/travelExpense/:undeliver": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Undeliver travel expenses.",
                "description": "",
                "operationId": "TravelExpenseUndeliver_undeliver",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Partial object describing what should be updated",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/TravelExpense"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                }
            }
        },
        "/travelExpense/:createVouchers": {
            "put": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Create vouchers",
                "description": "",
                "operationId": "TravelExpenseCreateVouchers_createVouchers",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the elements",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "yyyy-MM-dd. Defaults to today.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpense"
                        }
                    }
                }
            }
        },
        "/travelExpense/{travelExpenseId}/attachment": {
            "get": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Get attachment by travel expense ID.",
                "description": "",
                "operationId": "TravelExpenseAttachment_downloadAttachment",
                "produces": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "path",
                        "description": "Travel Expense ID from which PDF is downloaded.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Upload attachment to travel expense.",
                "description": "",
                "operationId": "TravelExpenseAttachment_uploadAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "path",
                        "description": "Travel Expense ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "The file",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "createNewCost",
                        "in": "query",
                        "description": "Create new cost row when you add the attachment",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Delete attachment.",
                "description": "",
                "operationId": "TravelExpenseAttachment_deleteAttachment",
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "path",
                        "description": "ID of attachment containing the attachment to delete.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Version of voucher containing the attachment to delete.",
                        "required": false,
                        "type": "integer",
                        "minimum": 0,
                        "format": "int32"
                    },
                    {
                        "name": "sendToInbox",
                        "in": "query",
                        "description": "Should the attachment be sent to inbox rather than deleted?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "split",
                        "in": "query",
                        "description": "If sendToInbox is true, should the attachment be split into one voucher per page?",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/{travelExpenseId}/attachment/list": {
            "post": {
                "tags": [
                    "travelExpense"
                ],
                "summary": "Upload multiple attachments to travel expense.",
                "description": "",
                "operationId": "TravelExpenseAttachmentList_uploadAttachments",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "travelExpenseId",
                        "in": "path",
                        "description": "Travel Expense ID to upload attachment to.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Multipart files",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FormDataMultiPart"
                        }
                    },
                    {
                        "name": "createNewCost",
                        "in": "query",
                        "description": "Create new cost row when you add the attachment",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/travelExpense/rate/{id}": {
            "get": {
                "tags": [
                    "travelExpense/rate"
                ],
                "summary": "Get travel expense rate by ID.",
                "description": "",
                "operationId": "TravelExpenseRate_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseRate"
                        }
                    }
                }
            }
        },
        "/travelExpense/rate": {
            "get": {
                "tags": [
                    "travelExpense/rate"
                ],
                "summary": "Find rates corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpenseRate_search",
                "parameters": [
                    {
                        "name": "rateCategoryId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "PER_DIEM",
                            "ACCOMMODATION_ALLOWANCE",
                            "MILEAGE_ALLOWANCE"
                        ]
                    },
                    {
                        "name": "isValidDayTrip",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidDomestic",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidForeignTravel",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "requiresZone",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "requiresOvernightAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseRate"
                        }
                    }
                }
            }
        },
        "/travelExpense/rateCategory/{id}": {
            "get": {
                "tags": [
                    "travelExpense/rateCategory"
                ],
                "summary": "Get travel expense rate category by ID.",
                "description": "",
                "operationId": "TravelExpenseRateCategory_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseRateCategory"
                        }
                    }
                }
            }
        },
        "/travelExpense/rateCategory": {
            "get": {
                "tags": [
                    "travelExpense/rateCategory"
                ],
                "summary": "Find rate categories corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpenseRateCategory_search",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "PER_DIEM",
                            "ACCOMMODATION_ALLOWANCE",
                            "MILEAGE_ALLOWANCE"
                        ]
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "travelReportRateCategoryGroupId",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "ameldingWageCode",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "wageCodeNumber",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isValidDayTrip",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isValidDomestic",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "requiresZone",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "isRequiresOvernightAccommodation",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseRateCategory"
                        }
                    }
                }
            }
        },
        "/travelExpense/rateCategoryGroup/{id}": {
            "get": {
                "tags": [
                    "travelExpense/rateCategoryGroup"
                ],
                "summary": "Get travel report rate category group by ID.",
                "description": "",
                "operationId": "TravelExpenseRateCategoryGroup_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseRateCategoryGroup"
                        }
                    }
                }
            }
        },
        "/travelExpense/rateCategoryGroup": {
            "get": {
                "tags": [
                    "travelExpense/rateCategoryGroup"
                ],
                "summary": "Find rate categoriy groups corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpenseRateCategoryGroup_search",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isForeignTravel",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "dateFrom",
                        "in": "query",
                        "description": "From and including",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "dateTo",
                        "in": "query",
                        "description": "To and excluding",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseRateCategoryGroup"
                        }
                    }
                }
            }
        },
        "/travelExpense/costCategory/{id}": {
            "get": {
                "tags": [
                    "travelExpense/costCategory"
                ],
                "summary": "Get cost category by ID.",
                "description": "",
                "operationId": "TravelExpenseCostCategory_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelCostCategory"
                        }
                    }
                }
            }
        },
        "/travelExpense/costCategory": {
            "get": {
                "tags": [
                    "travelExpense/costCategory"
                ],
                "summary": "Find cost category corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpenseCostCategory_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "showOnEmployeeExpenses",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelCostCategory"
                        }
                    }
                }
            }
        },
        "/travelExpense/paymentType/{id}": {
            "get": {
                "tags": [
                    "travelExpense/paymentType"
                ],
                "summary": "Get payment type by ID.",
                "description": "",
                "operationId": "TravelExpensePaymentType_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelPaymentType"
                        }
                    }
                }
            }
        },
        "/travelExpense/paymentType": {
            "get": {
                "tags": [
                    "travelExpense/paymentType"
                ],
                "summary": "Find payment type corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpensePaymentType_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Containing",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isInactive",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "showOnEmployeeExpenses",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelPaymentType"
                        }
                    }
                }
            }
        },
        "/travelExpense/settings": {
            "get": {
                "tags": [
                    "travelExpense/settings"
                ],
                "summary": "Get travel expense settings of logged in company.",
                "description": "",
                "operationId": "TravelExpenseSettings_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseSettings"
                        }
                    }
                }
            }
        },
        "/travelExpense/zone/{id}": {
            "get": {
                "tags": [
                    "travelExpensezone"
                ],
                "summary": "Get travel expense zone by ID.",
                "description": "",
                "operationId": "TravelExpenseZone_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperTravelExpenseZone"
                        }
                    }
                }
            }
        },
        "/travelExpense/zone": {
            "get": {
                "tags": [
                    "travelExpensezone"
                ],
                "summary": "Find travel expense zones corresponding with sent data.",
                "description": "",
                "operationId": "TravelExpenseZone_search",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "isDisabled",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseTravelExpenseZone"
                        }
                    }
                }
            }
        },
        "/vatReturns/comment": {
            "get": {
                "tags": [
                    "vatReturnscomment"
                ],
                "summary": "[BETA] - Get all structured comments related to a given vatCode",
                "description": "",
                "operationId": "VatReturnsComment_query",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVatReturnsVatCodeComment"
                        }
                    }
                }
            }
        },
        "/vatReturns/comment/>all": {
            "get": {
                "tags": [
                    "vatReturnscomment"
                ],
                "summary": "[BETA] - Get all structured comments available",
                "description": "",
                "operationId": "VatReturnsCommentAll_all",
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVatReturnsComment"
                        }
                    }
                }
            }
        },
        "/voucherMessage": {
            "get": {
                "tags": [
                    "voucherMessage"
                ],
                "summary": "[BETA] Find voucherMessage (or a comment) put on a voucher by inputting voucher ids",
                "description": "",
                "operationId": "VoucherMessage_search",
                "parameters": [
                    {
                        "name": "voucherIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucherMessage"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "voucherMessage"
                ],
                "summary": "[BETA] Post new voucherMessage.",
                "description": "",
                "operationId": "VoucherMessage_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VoucherMessage"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucherMessage"
                        }
                    }
                }
            }
        },
        "/voucherStatus/{id}": {
            "get": {
                "tags": [
                    "voucherStatus"
                ],
                "summary": "Get voucherStatus by ID.",
                "description": "",
                "operationId": "VoucherStatus_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucherStatus"
                        }
                    }
                }
            }
        },
        "/voucherStatus": {
            "get": {
                "tags": [
                    "voucherStatus"
                ],
                "summary": "Find voucherStatus corresponding with sent data. The voucherStatus is used to coordinate integration processes. Requires setup done by Tripletex, currently supports debt collection.",
                "description": "",
                "operationId": "VoucherStatus_search",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "voucherIds",
                        "in": "query",
                        "description": "List of IDs",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "WAITING",
                            "DONE",
                            "SKIPPED",
                            "ERROR",
                            "NONE",
                            "PROCESSING",
                            "RECLAIMED"
                        ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Equals",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "TRIPLETEX",
                            "SUPPLIERINVOICE_EXTERNAL",
                            "DEBT_COLLECTION"
                        ]
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From index",
                        "required": false,
                        "type": "integer",
                        "default": 0
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Number of elements to return",
                        "required": false,
                        "type": "integer",
                        "default": 1000
                    },
                    {
                        "name": "sorting",
                        "in": "query",
                        "description": "Sorting pattern",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ListResponseVoucherStatus"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "voucherStatus"
                ],
                "summary": "Post new voucherStatus.",
                "description": "",
                "operationId": "VoucherStatus_post",
                "consumes": [
                    "application/json; charset=utf-8"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "JSON representing the new object to be created. Should not have ID and version set.",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/VoucherStatus"
                        }
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperVoucherStatus"
                        }
                    }
                }
            }
        },
        "/internal/favorites": {
            "get": {
                "tags": [
                    "favorites/internal"
                ],
                "summary": "Get favorite menu",
                "description": "",
                "operationId": "InternalFavorites_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperFavoriteMenu"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "favorites/internal"
                ],
                "summary": "Add new favorite",
                "description": "",
                "operationId": "InternalFavorites_post",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "pageUrl",
                        "in": "formData",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Equals",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully created",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperInteger"
                        }
                    }
                }
            }
        },
        "/internal/favorites/{id}": {
            "put": {
                "tags": [
                    "favorites/internal"
                ],
                "summary": "Update a favorite",
                "description": "",
                "operationId": "InternalFavorites_put",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Equals",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rank",
                        "in": "formData",
                        "description": "Equals",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "favorites/internal"
                ],
                "summary": "Delete a favorite",
                "description": "",
                "operationId": "InternalFavorites_delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Equals",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/internal/segmentation": {
            "get": {
                "tags": [
                    "segmentation/internal"
                ],
                "summary": "Get segmentation data",
                "description": "",
                "operationId": "InternalSegmentation_get",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperSegmentationData"
                        }
                    }
                }
            }
        },
        "/yearEnd/note/{id}": {
            "get": {
                "tags": [
                    "yearEnd/note"
                ],
                "summary": " ",
                "description": "",
                "operationId": "YearEndNote_get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Element ID",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields filter pattern",
                        "required": false,
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "tokenAuthScheme": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ResponseWrapperYearEndReportNote"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "tokenAuthScheme": {
            "description": "Basic AUTH where username is company/customer id for proxy use (or 0 for default), password should be set to the session token",
            "type": "basic"
        }
    },
    "definitions": {
        "Activity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "activityType": {
                    "type": "string",
                    "description": "PROJECT_SPECIFIC_ACTIVITY are made via project/projectactivity, as they must be part of a project.",
                    "enum": [
                        "GENERAL_ACTIVITY",
                        "PROJECT_GENERAL_ACTIVITY",
                        "PROJECT_SPECIFIC_ACTIVITY",
                        "TASK"
                    ]
                },
                "isProjectActivity": {
                    "type": "boolean",
                    "description": "Manipulate these with ActivityType",
                    "readOnly": true
                },
                "isGeneral": {
                    "type": "boolean",
                    "description": "Manipulate these with ActivityType",
                    "readOnly": true
                },
                "isTask": {
                    "type": "boolean",
                    "description": "Manipulate these with ActivityType",
                    "readOnly": true
                },
                "isDisabled": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isChargeable": {
                    "type": "boolean"
                },
                "rate": {
                    "type": "number"
                },
                "costPercentage": {
                    "type": "number"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "Change": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "changeType": {
                    "type": "string",
                    "enum": [
                        "CREATE",
                        "UPDATE",
                        "DELETE",
                        "LOCKED",
                        "REOPENED",
                        "DO_NOT_SHOW"
                    ]
                }
            }
        },
        "ResponseWrapper": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object"
                }
            }
        },
        "ResponseWrapperActivity": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Activity"
                }
            }
        },
        "ListResponse": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "ListResponseActivity": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Activity"
                    }
                }
            }
        },
        "Addon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 80
                },
                "description": {
                    "type": "string",
                    "maxLength": 1024
                },
                "shortDescription": {
                    "type": "string",
                    "maxLength": 150
                },
                "redirectUrl": {
                    "type": "string",
                    "maxLength": 1024
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "IN_DEVELOPMENT",
                        "PENDING",
                        "REJECTED",
                        "APPROVED"
                    ]
                },
                "wizardStep": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "isPublic": {
                    "type": "boolean"
                },
                "apiConsumerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "COMPANY_WIDE",
                        "PERSONAL",
                        "INTERNAL"
                    ]
                },
                "linkToInfo": {
                    "type": "string",
                    "maxLength": 1024
                },
                "partnerName": {
                    "type": "string"
                },
                "targetSystemName": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "OTHER",
                            "YEAR_END",
                            "BANK",
                            "STAFF",
                            "BOOKING_AND_CHECKOUT",
                            "CRM",
                            "DEBT_COLLECTION",
                            "ONLINE_STORE",
                            "HRM",
                            "REPORTING",
                            "TRAVEL_AND_EXPENSES",
                            "RECONCILLIATION",
                            "PAYMENT_SERVICES",
                            "CHECKOUT",
                            "FAG_SYSTEMER",
                            "FINANCIAL_SERVICES",
                            "PROJECT",
                            "MILAGE",
                            "WAREHOUSE_LOGISTICS",
                            "TIMESHEET",
                            "BOARD_WORK"
                        ]
                    }
                },
                "logo": {
                    "$ref": "#/definitions/AddonLogoDTO"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "AddonLogoDTO": {
            "type": "object",
            "properties": {
                "documentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "content": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            }
        },
        "ResponseWrapperAddon": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Addon"
                }
            }
        },
        "ListResponseAddon": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Addon"
                    }
                }
            }
        },
        "ResponseWrapperAddonStatusType": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "enum": [
                        "IN_DEVELOPMENT",
                        "PENDING",
                        "REJECTED",
                        "APPROVED"
                    ]
                }
            }
        },
        "ResponseWrapperString": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "isoAlpha2Code": {
                    "type": "string",
                    "description": "The ISO 3166-1 Alpha2 code of the country (2 letters). https://en.wikipedia.org/wiki/ISO_3166-1",
                    "readOnly": true
                },
                "isoAlpha3Code": {
                    "type": "string",
                    "description": "The ISO 3166-1 Alpha3 code of the country (3 letters). https://en.wikipedia.org/wiki/ISO_3166-1",
                    "readOnly": true
                },
                "isoNumericCode": {
                    "type": "string",
                    "description": "The ISO 3166-1 numeric code of the country (3 digits). https://en.wikipedia.org/wiki/ISO_3166-1",
                    "readOnly": true
                }
            }
        },
        "DeliveryAddress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "addressLine1": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "addressLine2": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "city": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "displayNameInklMatrikkel": {
                    "type": "string",
                    "readOnly": true
                },
                "knr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "gnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "bnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "fnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "snr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "unitNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperDeliveryAddress": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DeliveryAddress"
                }
            }
        },
        "ListResponseDeliveryAddress": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/DeliveryAddress"
                    }
                }
            }
        },
        "LegacyAddress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "addressLine1": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "addressLine2": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "city": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "displayNameInklMatrikkel": {
                    "type": "string",
                    "readOnly": true
                },
                "knr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "gnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "bnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "fnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "snr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "unitNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperLegacyAddress": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/LegacyAddress"
                }
            }
        },
        "ListResponseLegacyAddress": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/LegacyAddress"
                    }
                }
            }
        },
        "ResponseWrapperInteger": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "group": {
                    "type": "string",
                    "readOnly": true
                },
                "stateful": {
                    "type": "boolean",
                    "readOnly": true
                },
                "interruptable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "jobDetail": {
                    "readOnly": true,
                    "$ref": "#/definitions/JobDetailDTO"
                },
                "triggers": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TriggerDTO"
                    }
                }
            }
        },
        "JobDetailDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "group": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "jobclass": {
                    "type": "string"
                },
                "jobData": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ResponseWrapperListJob": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Job"
                    }
                }
            }
        },
        "TriggerDTO": {
            "type": "object",
            "properties": {
                "calendarName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nextFireTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "previousFireTime": {
                    "type": "string",
                    "format": "date-time"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperSystemMessage": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SystemMessage"
                }
            }
        },
        "SystemMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "AltinnInstance": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "altinnId": {
                    "type": "string",
                    "description": "The altinn archive reference",
                    "maxLength": 255
                },
                "partyId": {
                    "type": "string",
                    "description": "The partyId in altinn - refering to the organization",
                    "maxLength": 255
                },
                "instanceGuid": {
                    "type": "string",
                    "description": "The id of the instance in Altinn",
                    "maxLength": 255
                },
                "createdInfo": {
                    "type": "string",
                    "description": "The initials and date of when the instance was created"
                }
            }
        },
        "ResponseWrapperAltinnInstance": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AltinnInstance"
                }
            }
        },
        "AprilaCashCreditApplicationResponseDTO": {
            "type": "object",
            "properties": {
                "signUpUrl": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "PREQUALIFIED",
                        "READY_FOR_SIGNUP",
                        "SUBMITTED",
                        "SIGNED",
                        "COMPLETED",
                        "REJECTED",
                        "CANCELLED",
                        "ERROR",
                        "PENDING_NEW_SIGNATURE"
                    ]
                },
                "statusReason": {
                    "type": "string"
                },
                "activeProduct": {
                    "type": "boolean"
                },
                "submittedApplication": {
                    "type": "boolean"
                },
                "maxCreditLimitAmount": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "maxCreditLimitCurrency": {
                    "type": "string"
                },
                "annualInterestRate": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "monthlyInterestRate": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "monthlyFeeAmount": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "monthlyFeeCurrency": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperAprilaCashCreditApplicationResponseDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AprilaCashCreditApplicationResponseDTO"
                }
            }
        },
        "TlxNumber": {
            "type": "object"
        },
        "ResponseWrapperBoolean": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "boolean"
                }
            }
        },
        "Account": {
            "type": "object",
            "required": [
                "name",
                "number"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ASSETS",
                        "EQUITY",
                        "LIABILITIES",
                        "OPERATING_REVENUES",
                        "OPERATING_EXPENSES",
                        "INVESTMENT_INCOME",
                        "COST_OF_CAPITAL",
                        "TAX_ON_ORDINARY_ACTIVITIES",
                        "EXTRAORDINARY_INCOME",
                        "EXTRAORDINARY_COST",
                        "TAX_ON_EXTRAORDINARY_ACTIVITIES",
                        "ANNUAL_RESULT",
                        "TRANSFERS_AND_ALLOCATIONS"
                    ]
                },
                "legalVatTypes": {
                    "type": "array",
                    "description": "List of legal vat types for this account.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VatType"
                    }
                },
                "ledgerType": {
                    "type": "string",
                    "description": "Supported ledger types, default is GENERAL. Only available for customers with the module multiple ledgers.",
                    "enum": [
                        "GENERAL",
                        "CUSTOMER",
                        "VENDOR",
                        "EMPLOYEE",
                        "ASSET"
                    ]
                },
                "vatType": {
                    "description": "The default vat type for this account.",
                    "$ref": "#/definitions/VatType"
                },
                "vatLocked": {
                    "type": "boolean",
                    "description": "True if all entries on this account must have the vat type given by vatType."
                },
                "currency": {
                    "description": "If given, all entries on this account must have this currency.",
                    "$ref": "#/definitions/Currency"
                },
                "isCloseable": {
                    "type": "boolean",
                    "description": "True if it should be possible to close entries on this account and it is possible to filter on open entries."
                },
                "isApplicableForSupplierInvoice": {
                    "type": "boolean",
                    "description": "True if this account is applicable for supplier invoice registration."
                },
                "requireReconciliation": {
                    "type": "boolean",
                    "description": "True if this account must be reconciled before the accounting period closure."
                },
                "isInactive": {
                    "type": "boolean",
                    "description": "Inactive accounts will not show up in UI lists."
                },
                "isBankAccount": {
                    "type": "boolean"
                },
                "isInvoiceAccount": {
                    "type": "boolean"
                },
                "bankAccountNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "bankAccountCountry": {
                    "$ref": "#/definitions/Country"
                },
                "bankName": {
                    "type": "string",
                    "maxLength": 255
                },
                "bankAccountIBAN": {
                    "type": "string",
                    "maxLength": 100
                },
                "bankAccountSWIFT": {
                    "type": "string",
                    "maxLength": 100
                },
                "saftCode": {
                    "type": "string",
                    "description": "SAF-T code for account. It will be given a default value based on account number if empty.",
                    "maxLength": 4
                },
                "displayName": {
                    "type": "string"
                },
                "requiresDepartment": {
                    "type": "boolean",
                    "description": "Posting against this account requires department."
                },
                "requiresProject": {
                    "type": "boolean",
                    "description": "Posting against this account requires project."
                },
                "invoicingDepartment": {
                    "description": "The department that this account is the invoicing account for. Only relevant if the account represents a bank account that is used as an invoicing account.",
                    "$ref": "#/definitions/Department"
                },
                "isPostingsExist": {
                    "type": "boolean"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "addressLine1": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "addressLine2": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "city": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "displayNameInklMatrikkel": {
                    "type": "string",
                    "readOnly": true
                },
                "knr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "gnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "bnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "fnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "snr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "unitNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                }
            }
        },
        "Asset": {
            "type": "object",
            "required": [
                "dateOfAcquisition",
                "description",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "description": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "dateOfAcquisition": {
                    "type": "string"
                },
                "acquisitionCost": {
                    "type": "number",
                    "description": "Acquisition cost."
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "depreciationAccount": {
                    "description": "Depreciation account for the asset.",
                    "$ref": "#/definitions/Account"
                },
                "incomingBalance": {
                    "type": "number",
                    "description": "Incoming balance for the asset."
                },
                "lifetime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Lifetime in months for the asset.",
                    "minimum": 0
                },
                "depreciationMethod": {
                    "type": "string",
                    "description": "Depreciation method",
                    "enum": [
                        "MANUAL",
                        "STRAIGHT_LINE",
                        "TAX_RELATED",
                        "CUSTOMIZED_AMOUNT"
                    ]
                },
                "depreciationFrom": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Status",
                    "enum": [
                        "UNKNOWN",
                        "ACTIVE",
                        "SOLD",
                        "LOST",
                        "COMPLETED"
                    ]
                },
                "customMonthlyWriteOff": {
                    "type": "number"
                },
                "taxRelatedDepreciationPercentage": {
                    "type": "number"
                },
                "depreciationRemainingValue": {
                    "type": "number"
                },
                "hasHistoryFromExternalSystem": {
                    "type": "boolean"
                },
                "externalLastDepreciation": {
                    "type": "string"
                },
                "externalLastAccountedValue": {
                    "type": "number"
                },
                "externalAccumulatedDepreciation": {
                    "type": "number"
                }
            }
        },
        "Currency": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "factor": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 100
                },
                "displayName": {
                    "type": "string"
                },
                "isDisabled": {
                    "type": "boolean"
                }
            }
        },
        "Department": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "departmentNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "departmentManager": {
                    "$ref": "#/definitions/Employee"
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "isInactive": {
                    "type": "boolean"
                }
            }
        },
        "Division": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "municipalityDate": {
                    "type": "string"
                },
                "municipality": {
                    "$ref": "#/definitions/Municipality"
                }
            }
        },
        "Employee": {
            "type": "object",
            "required": [
                "firstName",
                "lastName"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "employeeNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "dateOfBirth": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 100
                },
                "phoneNumberMobileCountry": {
                    "description": "The country of the mobile phone number. If not set, the country is derived as best as possible from phoneNumberMobile. NB! 8 digit numbers are assumed to be Norwegian.",
                    "$ref": "#/definitions/Country"
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberHome": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberWork": {
                    "type": "string",
                    "maxLength": 100
                },
                "nationalIdentityNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "dnumber": {
                    "type": "string",
                    "maxLength": 11
                },
                "internationalId": {
                    "$ref": "#/definitions/InternationalId"
                },
                "bankAccountNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "iban": {
                    "type": "string",
                    "description": "IBAN field"
                },
                "bic": {
                    "type": "string",
                    "description": "Bic (swift) field"
                },
                "creditorBankCountryId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Country of creditor bank field"
                },
                "usesAbroadPayment": {
                    "type": "boolean",
                    "description": "UsesAbroadPayment field. Determines if we should use domestic or abroad remittance. To be able to use abroad remittance, one has to: 1: have Autopay 2: have valid combination of the fields Iban, Bic (swift) and Country of creditor bank. "
                },
                "userType": {
                    "type": "string",
                    "description": "Define the employee's user type.<br>STANDARD: Reduced access. Users with limited system entitlements.<br>EXTENDED: Users can be given all system entitlements.<br>NO_ACCESS: User with no log on access.<br>Users with access to Tripletex must confirm the email address.",
                    "enum": [
                        "STANDARD",
                        "EXTENDED",
                        "NO_ACCESS"
                    ]
                },
                "allowInformationRegistration": {
                    "type": "boolean",
                    "description": "Determines if salary information can be registered on the user including hours, travel expenses and employee expenses. The user may also be selected as a project member on projects.",
                    "readOnly": true
                },
                "isContact": {
                    "type": "boolean",
                    "readOnly": true
                },
                "comments": {
                    "type": "string"
                },
                "address": {
                    "description": "Address tied to the employee",
                    "$ref": "#/definitions/Address"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "employments": {
                    "type": "array",
                    "description": "Employments tied to the employee",
                    "items": {
                        "$ref": "#/definitions/Employment"
                    }
                },
                "holidayAllowanceEarned": {
                    "$ref": "#/definitions/HolidayAllowanceEarned"
                },
                "employeeCategory": {
                    "$ref": "#/definitions/EmployeeCategory"
                },
                "isAuthProjectOverviewURL": {
                    "type": "boolean",
                    "readOnly": true
                },
                "pictureId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "EmployeeCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "Employment": {
            "type": "object",
            "required": [
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "employmentId": {
                    "type": "string",
                    "description": "Existing employment ID used by the current accounting system",
                    "maxLength": 255
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "employmentEndReason": {
                    "type": "string",
                    "description": "Define the employment end reason.",
                    "enum": [
                        "EMPLOYMENT_END_EXPIRED",
                        "EMPLOYMENT_END_EMPLOYEE",
                        "EMPLOYMENT_END_EMPLOYER",
                        "EMPLOYMENT_END_WRONGLY_REPORTED",
                        "EMPLOYMENT_END_SYSTEM_OR_ACCOUNTANT_CHANGE",
                        "EMPLOYMENT_END_INTERNAL_CHANGE"
                    ]
                },
                "division": {
                    "$ref": "#/definitions/Division"
                },
                "lastSalaryChangeDate": {
                    "type": "string"
                },
                "noEmploymentRelationship": {
                    "type": "boolean",
                    "description": "Activate pensions and other benefits with no employment relationship."
                },
                "isMainEmployer": {
                    "type": "boolean",
                    "description": "Determines if company is main employer for the employee. Default value is true.<br />Some values will be default set if not sent upon creation of employment: <br/> If isMainEmployer is NOT sent and tax deduction code loennFraHovedarbeidsgiver is sent, isMainEmployer will be set to true. <br /> If isMainEmployer is NOT sent and tax deduction code loennFraBiarbeidsgiver is sent, isMainEmployer will be set to false. <br /> If true and deduction code is NOT sent, value of tax deduction code will be set to loennFraHovedarbeidsgiver. <br /> If false and deduction code is NOT sent, value of tax deduction code will be set to loennFraBiarbeidsgiver. <br /> For other types of Tax Deduction Codes, isMainEmployer does not influence anything."
                },
                "taxDeductionCode": {
                    "type": "string",
                    "description": "EMPTY - represents that a tax deduction code is not set on the employment. It is illegal to set the field to this value.  <br /> Default value of this field is loennFraHovedarbeidsgiver or loennFraBiarbeidsgiver depending on boolean isMainEmployer",
                    "enum": [
                        "loennFraHovedarbeidsgiver",
                        "loennFraBiarbeidsgiver",
                        "pensjon",
                        "loennTilUtenrikstjenestemann",
                        "loennKunTrygdeavgiftTilUtenlandskBorger",
                        "loennKunTrygdeavgiftTilUtenlandskBorgerSomGrensegjenger",
                        "introduksjonsstoenad",
                        "ufoereytelserFraAndre",
                        "EMPTY"
                    ]
                },
                "employmentDetails": {
                    "type": "array",
                    "description": "Employment types tied to the employment",
                    "items": {
                        "$ref": "#/definitions/EmploymentDetails"
                    }
                }
            }
        },
        "EmploymentDetails": {
            "type": "object",
            "required": [
                "percentageOfFullTimeEquivalent"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employment": {
                    "$ref": "#/definitions/Employment"
                },
                "date": {
                    "type": "string"
                },
                "employmentType": {
                    "type": "string",
                    "description": "Define the employment type.",
                    "enum": [
                        "ORDINARY",
                        "MARITIME",
                        "FREELANCE",
                        "NOT_CHOSEN"
                    ]
                },
                "employmentForm": {
                    "type": "string",
                    "description": "Define the employment form.",
                    "enum": [
                        "PERMANENT",
                        "TEMPORARY",
                        "NOT_CHOSEN"
                    ]
                },
                "maritimeEmployment": {
                    "$ref": "#/definitions/MaritimeEmployment"
                },
                "remunerationType": {
                    "type": "string",
                    "description": "Define the remuneration type.",
                    "enum": [
                        "MONTHLY_WAGE",
                        "HOURLY_WAGE",
                        "COMMISION_PERCENTAGE",
                        "FEE",
                        "NOT_CHOSEN",
                        "PIECEWORK_WAGE"
                    ]
                },
                "workingHoursScheme": {
                    "type": "string",
                    "description": "Define the working hours scheme type. If you enter a value for SHIFT WORK, you must also enter value for shiftDurationHours",
                    "enum": [
                        "NOT_SHIFT",
                        "ROUND_THE_CLOCK",
                        "SHIFT_365",
                        "OFFSHORE_336",
                        "CONTINUOUS",
                        "OTHER_SHIFT",
                        "NOT_CHOSEN"
                    ]
                },
                "shiftDurationHours": {
                    "type": "number"
                },
                "occupationCode": {
                    "description": "To find the right value to enter in this field, you could go to GET /employee/employment/occupationCode to get a list of valid ID's.",
                    "$ref": "#/definitions/OccupationCode"
                },
                "percentageOfFullTimeEquivalent": {
                    "type": "number"
                },
                "annualSalary": {
                    "type": "number"
                },
                "hourlyWage": {
                    "type": "number"
                },
                "payrollTaxMunicipalityId": {
                    "$ref": "#/definitions/Municipality"
                }
            }
        },
        "HolidayAllowanceEarned": {
            "type": "object",
            "properties": {
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number"
                },
                "basis": {
                    "type": "number"
                },
                "amountExtraHolidayWeek": {
                    "type": "number"
                }
            }
        },
        "InternationalId": {
            "type": "object",
            "properties": {
                "intAmeldingType": {
                    "type": "string",
                    "description": "Define the employee's International Identificator.<br>PASSPORT_NO<br>NATIONAL_INSURANCE_NO<br>TAX_IDENTIFICATION_NO<br>VALUE_ADDED_TAX_IDENTIFICATION_NO",
                    "enum": [
                        "PASSPORT_NO",
                        "NATIONAL_INSURANCE_NO",
                        "TAX_IDENTIFICATION_NO",
                        "VALUE_ADDED_TAX_IDENTIFICATION_NO"
                    ]
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "MaritimeEmployment": {
            "type": "object",
            "properties": {
                "shipRegister": {
                    "type": "string",
                    "description": "Define the ship register. NIS: Norwegian International Ship Register, NOR: Norwegian Ordinary Ship Register, FOREIGN: Foreign Ship Register. ",
                    "enum": [
                        "NIS",
                        "NOR",
                        "FOREIGN"
                    ]
                },
                "shipType": {
                    "type": "string",
                    "description": "Define the ship type.",
                    "enum": [
                        "OTHER",
                        "DRILLING_PLATFORM",
                        "TOURIST"
                    ]
                },
                "tradeArea": {
                    "type": "string",
                    "description": "Define the trade area.",
                    "enum": [
                        "DOMESTIC",
                        "FOREIGN"
                    ]
                }
            }
        },
        "Municipality": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "county": {
                    "type": "string",
                    "readOnly": true
                },
                "payrollTaxZone": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "OccupationCode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "nameNO": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperAsset": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Asset"
                }
            }
        },
        "VatType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 10
                },
                "displayName": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "deductionPercentage": {
                    "type": "number",
                    "description": "Percentage of the VAT amount that is deducted. Always 100% for all predefined VAT types, but can be lower for custom types for relative VAT."
                },
                "parentType": {
                    "description": "Only used on custom VAT types for relative VAT, gives the link to the parent VAT type. For most purposes the custom VAT type will behave like the parent VAT type, but with different deduction.",
                    "$ref": "#/definitions/VatType"
                }
            }
        },
        "ListResponseAsset": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Asset"
                    }
                }
            }
        },
        "AssetDeleteInfo": {
            "type": "object",
            "properties": {
                "assetCount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "importDate": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperAssetDeleteInfo": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AssetDeleteInfo"
                }
            }
        },
        "ResponseWrapperTlxNumber": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "AssetDetails": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "assetId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "dateOfAcquisition": {
                    "type": "string",
                    "readOnly": true
                },
                "acquisitionCost": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceIn": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceOut": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceChange": {
                    "type": "number",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "readOnly": true
                },
                "lifetime": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "AssetGroup": {
            "type": "object",
            "required": [
                "accountNumber"
            ],
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "accountNumber": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "accountName": {
                    "type": "string",
                    "readOnly": true
                },
                "balanceGroupName": {
                    "type": "string",
                    "readOnly": true
                },
                "assetCount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "acquisitionCostSum": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceInSum": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceOutSum": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceChangeSum": {
                    "type": "number",
                    "readOnly": true
                },
                "assetDetails": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AssetDetails"
                    }
                }
            }
        },
        "AssetOverview": {
            "type": "object",
            "properties": {
                "assetGroups": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AssetGroup"
                    }
                },
                "startDate": {
                    "type": "string",
                    "readOnly": true
                },
                "endDate": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperAssetOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AssetOverview"
                }
            }
        },
        "AssetAccountRow": {
            "type": "object",
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "Account number"
                },
                "accountName": {
                    "type": "string",
                    "description": "Account name"
                },
                "assets": {
                    "type": "array",
                    "description": "Assets",
                    "items": {
                        "$ref": "#/definitions/AssetImport"
                    }
                },
                "balanceDifference": {
                    "type": "number",
                    "description": "Balance difference. This is the sum amount on the account that is not connected to an asset after the import."
                }
            }
        },
        "AssetImport": {
            "type": "object",
            "required": [
                "description",
                "lifetime",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "lifetime": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "dateOfAcquisition": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "acquisitionCost": {
                    "type": "number",
                    "description": "Acquisition cost."
                },
                "incomingBalance": {
                    "type": "number",
                    "description": "Incoming balance for the asset."
                },
                "externalAccumulatedDepreciation": {
                    "type": "number",
                    "description": "Accumulated depreciation for the asset."
                }
            }
        },
        "ListResponseAssetAccountRow": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AssetAccountRow"
                    }
                }
            }
        },
        "AuthConfigDTO": {
            "type": "object",
            "properties": {
                "loginUrl": {
                    "type": "string"
                },
                "logoutUrl": {
                    "type": "string"
                },
                "refreshSessionIframeUrl": {
                    "type": "string"
                },
                "checkSessionIframeUrl": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperAuthConfigDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AuthConfigDTO"
                }
            }
        },
        "BalanceSheetAccount": {
            "type": "object",
            "properties": {
                "account": {
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "balanceIn": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceChange": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceOut": {
                    "type": "number",
                    "readOnly": true
                },
                "startDate": {
                    "type": "string",
                    "description": "The start date for this period - inclusive.",
                    "readOnly": true
                },
                "endDate": {
                    "type": "string",
                    "description": "The end date for this period - exclusive.",
                    "readOnly": true
                }
            }
        },
        "ListResponseBalanceSheetAccount": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BalanceSheetAccount"
                    }
                }
            }
        },
        "BalanceSheet": {
            "type": "object",
            "properties": {
                "rows": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BalanceSheetRow"
                    }
                },
                "sumBalanceIn": {
                    "type": "number",
                    "readOnly": true
                },
                "sumBalanceChange": {
                    "type": "number",
                    "readOnly": true
                },
                "sumBalanceOut": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "BalanceSheetRow": {
            "type": "object",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "accountNumber": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "accountName": {
                    "type": "string",
                    "readOnly": true
                },
                "postingCount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "balanceIn": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceChange": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceOut": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperBalanceSheet": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BalanceSheet"
                }
            }
        },
        "BalanceSheetSettingsDTO": {
            "type": "object",
            "properties": {
                "showEmployeeModule": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showDepartmentModule": {
                    "type": "boolean"
                },
                "showProductModule": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperBalanceSheetSettingsDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BalanceSheetSettingsDTO"
                }
            }
        },
        "AutoPaySupport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "uploadNeeded": {
                    "type": "boolean"
                },
                "isEikaType": {
                    "type": "boolean"
                },
                "hasOrgNumber": {
                    "type": "boolean"
                },
                "isPsd2Type": {
                    "type": "boolean"
                },
                "hasApproveInOnlineBanking": {
                    "type": "boolean"
                },
                "requiredBankFieldIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "Bank": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Bank name",
                    "readOnly": true
                },
                "bankStatementFileFormatSupport": {
                    "type": "array",
                    "description": "Bank statement file formats supported.",
                    "readOnly": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "DNB_CSV",
                            "EIKA_TELEPAY",
                            "SPAREBANK1_TELEPAY",
                            "VISMA_ACCOUNT_STATEMENT",
                            "HANDELSBANKEN_TELEPAY",
                            "SPAREBANKEN_VEST_TELEPAY",
                            "NORDEA_CSV",
                            "TRANSFERWISE",
                            "SPAREBANKEN_SOR_TELEPAY",
                            "SPAREBANKEN_OST_TELEPAY",
                            "DANSKE_BANK_CSV",
                            "CULTURA_BANK_TELEPAY",
                            "SBANKEN_PRIVAT_CSV",
                            "HAUGESUND_SPAREBANK_CSV",
                            "VISMA_ACCOUNT_STATEMENT_PSD2",
                            "SBANKEN_BEDRIFT_CSV",
                            "LANDKREDITT_TELEPAY",
                            "ZTL"
                        ]
                    }
                },
                "registerNumbers": {
                    "type": "array",
                    "description": "Register numbers belonging to bank.",
                    "readOnly": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Bank name to comply with LoadableDropdown",
                    "readOnly": true
                },
                "autoPaySupport": {
                    "description": "The autoPay support for this bank",
                    "readOnly": true,
                    "$ref": "#/definitions/AutoPaySupport"
                }
            }
        },
        "ResponseWrapperBank": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Bank"
                }
            }
        },
        "ListResponseBank": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Bank"
                    }
                }
            }
        },
        "BankDashboardAdvice": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "adviceType": {
                    "type": "string",
                    "description": "The advice type.",
                    "enum": [
                        "SHORTEN_DUE_DATE_ON_OUTGOING_INVOICES_TO_CUSTOMERS",
                        "INCREASE_DUE_DATE_ON_INCOMING_INVOICES_FROM_VENDORS",
                        "APPLY_FOR_CASH_CREDIT_WITH_TRIPLETEX_APRILA"
                    ]
                },
                "isActive": {
                    "type": "boolean",
                    "description": "The advice is active."
                },
                "dateUpdated": {
                    "type": "string",
                    "description": "The date the advice was updated."
                },
                "isCancelled": {
                    "type": "boolean",
                    "description": "The advice has been cancelled."
                },
                "dateCancelled": {
                    "type": "string",
                    "description": "The date the advice has been cancelled by the user."
                }
            }
        },
        "ResponseWrapperBankDashboardAdvice": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankDashboardAdvice"
                }
            }
        },
        "ListResponseBankDashboardAdvice": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankDashboardAdvice"
                    }
                }
            }
        },
        "BankAgreementDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "iban": {
                    "type": "string",
                    "description": "The IBAN property."
                },
                "bban": {
                    "type": "string",
                    "description": "The BBAN property."
                },
                "description": {
                    "type": "string",
                    "description": "The description property.",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "description": "display name needed for LoadableDropdown component",
                    "readOnly": true
                },
                "account": {
                    "description": "The account for bank agreement.",
                    "$ref": "#/definitions/Account"
                },
                "uploaderEmployee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "dateCreated": {
                    "type": "string"
                },
                "bank": {
                    "$ref": "#/definitions/Bank"
                },
                "country": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country"
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "isActive": {
                    "type": "boolean",
                    "readOnly": true
                },
                "balance": {
                    "readOnly": true,
                    "$ref": "#/definitions/BankStatementBalance"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "BankStatementBalance": {
            "type": "object",
            "properties": {
                "bookedAmount": {
                    "type": "number",
                    "description": "Booked balance on the given date.",
                    "readOnly": true
                },
                "bookedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "availableAmount": {
                    "type": "number",
                    "description": "Available balance.",
                    "readOnly": true
                },
                "availableDate": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperBankAgreementDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankAgreementDTO"
                }
            }
        },
        "ListResponseBankAgreementDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankAgreementDTO"
                    }
                }
            }
        },
        "AutopayBankAgreement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "iban": {
                    "type": "string",
                    "description": "The IBAN property.",
                    "maxLength": 50
                },
                "bban": {
                    "type": "string",
                    "description": "The BBAN property.",
                    "maxLength": 50
                },
                "description": {
                    "type": "string",
                    "description": "The description property.",
                    "readOnly": true,
                    "maxLength": 250
                },
                "displayName": {
                    "type": "string",
                    "description": "display name needed for LoadableDropdown component",
                    "readOnly": true
                },
                "account": {
                    "description": "The account for bank agreement.",
                    "$ref": "#/definitions/Account"
                },
                "uploaderEmployee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "dateCreated": {
                    "type": "string"
                },
                "bank": {
                    "$ref": "#/definitions/Bank"
                },
                "country": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country"
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "isActive": {
                    "type": "boolean",
                    "readOnly": true
                },
                "balance": {
                    "readOnly": true,
                    "$ref": "#/definitions/BankStatementBalance"
                },
                "accountInBankId": {
                    "type": "string",
                    "maxLength": 50
                },
                "division": {
                    "type": "string",
                    "maxLength": 50
                },
                "ccmAgreementId": {
                    "type": "string",
                    "maxLength": 50
                },
                "organisationNumber": {
                    "type": "string",
                    "maxLength": 50
                },
                "approveInOnlineBanking": {
                    "type": "boolean"
                },
                "isUsed": {
                    "type": "boolean"
                },
                "active": {
                    "type": "boolean"
                }
            }
        },
        "ListResponseAutopayBankAgreement": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AutopayBankAgreement"
                    }
                }
            }
        },
        "BankAgreementCreationDTO": {
            "type": "object",
            "required": [
                "bankAccounts",
                "bankId"
            ],
            "properties": {
                "bankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Bank ID"
                },
                "accountInBankId": {
                    "type": "string",
                    "description": "Customer number in bank"
                },
                "ccmAgreementId": {
                    "type": "string",
                    "description": "Customer Id from Bank"
                },
                "division": {
                    "type": "string",
                    "description": "Division (DNB only)"
                },
                "organizationNumber": {
                    "type": "string",
                    "description": "Organization number"
                },
                "electronicCreation": {
                    "type": "boolean",
                    "description": "Electronic agreement creation initiated."
                },
                "approveInOnlineBanking": {
                    "type": "boolean",
                    "description": "Accounting approve payments"
                },
                "bankAccounts": {
                    "type": "array",
                    "description": "JSON representing a list of new objects to be created. Should not have ID and version set.",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                }
            }
        },
        "BankAgreementUpdateDTO": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id of agreement to update."
                },
                "description": {
                    "type": "string",
                    "description": "The description property."
                },
                "account": {
                    "description": "The account for bank agreement. Only id is populated",
                    "$ref": "#/definitions/Account"
                },
                "accountInBankId": {
                    "type": "string",
                    "description": "Customer number in bank"
                },
                "organisationNumber": {
                    "type": "string",
                    "description": "Organization number"
                },
                "approveInOnlineBanking": {
                    "type": "boolean",
                    "description": "Accounting approve payments"
                }
            }
        },
        "ResponseWrapperListInteger": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "ElectronicSupportDTO": {
            "type": "object",
            "properties": {
                "bankId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Bank ID"
                },
                "bankName": {
                    "type": "string",
                    "description": "Name of the bank"
                },
                "type": {
                    "type": "string",
                    "description": "Type of electronic agreement creation is supported by this bank.COMPLETE: Supports creating the agreement towards AutoPay and Tripletex though the bank.PARTIAL: Supports creating the agreement towards AutoPay only.",
                    "enum": [
                        "PARTIAL",
                        "COMPLETE",
                        "PSD2"
                    ]
                },
                "bankUrl": {
                    "type": "string",
                    "description": "Bank url for ordering electronic agreements for ElectronicSupportDTO of type PARTIAL."
                }
            }
        },
        "ResponseWrapperListElectronicSupportDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ElectronicSupportDTO"
                    }
                }
            }
        },
        "ResponseWrapperAutoPayStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "enum": [
                        "OK",
                        "NOT_ACTIVE",
                        "SERVICE_DOWN"
                    ]
                }
            }
        },
        "ResponseWrapperElectronicSupportDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ElectronicSupportDTO"
                }
            }
        },
        "BankOnboardingDTO": {
            "type": "object",
            "properties": {
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankOnboardingStepDTO"
                    }
                },
                "hasFullAccess": {
                    "type": "boolean"
                },
                "companyOrgnr": {
                    "type": "string"
                },
                "autoPayTwoFAEnabled": {
                    "type": "boolean"
                },
                "lockedCurrenciesMap": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "userIsAutoPayProvisioned": {
                    "type": "boolean"
                }
            }
        },
        "BankOnboardingStepDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "INCOMPLETE",
                        "COMPLETED",
                        "PROCESSING"
                    ]
                },
                "accessible": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperBankOnboardingDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankOnboardingDTO"
                }
            }
        },
        "ListResponseEmployee": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Employee"
                    }
                }
            }
        },
        "BankOnboardingAccessRequestDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "requesteeEmployeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "requesteeName": {
                    "type": "string"
                },
                "roleId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AccommodationAllowance": {
            "type": "object",
            "required": [
                "location"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "rateType": {
                    "$ref": "#/definitions/TravelExpenseRate"
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "zone": {
                    "type": "string"
                },
                "location": {
                    "type": "string",
                    "maxLength": 255
                },
                "address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                }
            }
        },
        "AccountingPeriod": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0,
                    "maximum": 11
                },
                "start": {
                    "type": "string",
                    "readOnly": true
                },
                "end": {
                    "type": "string",
                    "readOnly": true
                },
                "isClosed": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "BankReconciliation": {
            "type": "object",
            "required": [
                "account",
                "accountingPeriod",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "accountingPeriod": {
                    "$ref": "#/definitions/AccountingPeriod"
                },
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "transactions": {
                    "type": "array",
                    "description": "Bank transactions tied to the bank reconciliation",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                },
                "isClosed": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "description": "Type of Bank Reconciliation.",
                    "enum": [
                        "MANUAL",
                        "AUTOMATIC"
                    ]
                },
                "bankAccountClosingBalanceCurrency": {
                    "type": "number"
                },
                "closedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "closedByContact": {
                    "readOnly": true,
                    "$ref": "#/definitions/Contact"
                },
                "closedByEmployee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "approvable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "autoPayReconciliation": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "BankStatement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "openingBalanceCurrency": {
                    "type": "number",
                    "description": "Opening balance on the account.",
                    "readOnly": true
                },
                "closingBalanceCurrency": {
                    "type": "number",
                    "description": "Closing balance on the account.",
                    "readOnly": true
                },
                "fileName": {
                    "type": "string",
                    "description": "Bank statement file name.",
                    "readOnly": true
                },
                "bank": {
                    "description": "Bank",
                    "readOnly": true,
                    "$ref": "#/definitions/Bank"
                },
                "fromDate": {
                    "type": "string",
                    "readOnly": true
                },
                "toDate": {
                    "type": "string",
                    "readOnly": true
                },
                "transactions": {
                    "type": "array",
                    "description": "Bank transactions tied to the bank statement",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                }
            }
        },
        "BankTransaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "postedDate": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "amountCurrency": {
                    "type": "number"
                },
                "bankStatement": {
                    "$ref": "#/definitions/BankStatement"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "groupedPostings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankTransactionPosting"
                    }
                },
                "matchType": {
                    "type": "string",
                    "enum": [
                        "ONE_TRANSACTION_TO_ONE_POSTING",
                        "ONE_TRANSACTION_TO_MANY_POSTINGS",
                        "MANY_TRANSACTIONS_TO_ONE_POSTING",
                        "MANY_TRANSACTIONS_TO_MANY_POSTINGS",
                        "NO_MATCH",
                        "UNKNOWN"
                    ]
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "matched": {
                    "type": "boolean",
                    "readOnly": true
                },
                "bankReconciliationMatchSum": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "BankTransactionPosting": {
            "type": "object",
            "properties": {
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "amount": {
                    "type": "number"
                },
                "amountCurrency": {
                    "type": "number"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoiceNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "postingMatchType": {
                    "type": "string",
                    "enum": [
                        "DEFAULT",
                        "INTERNAL_TRANSFER",
                        "WAGE",
                        "TAX",
                        "VAT"
                    ]
                }
            }
        },
        "CloseGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "postings": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                }
            }
        },
        "CompanyBankAccountPresentation": {
            "type": "object",
            "properties": {
                "iban": {
                    "type": "string",
                    "description": "Iban-number"
                },
                "bban": {
                    "type": "string",
                    "description": "Bban-number"
                },
                "bic": {
                    "type": "string",
                    "description": "BIC/SWIFT for this bankaccount"
                },
                "country": {
                    "readOnly": true,
                    "$ref": "#/definitions/Country"
                },
                "provider": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "NETS",
                        "AUTOPAY"
                    ]
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "displayName": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "minLength": 0,
                    "maxLength": 100
                },
                "phoneNumberMobileCountry": {
                    "description": "The country of the mobile phone number. If not set, the country is derived as best as possible from phoneNumberMobile. NB! 8 digit numbers are assumed to be Norwegian.",
                    "$ref": "#/definitions/Country"
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberWork": {
                    "type": "string",
                    "maxLength": 100
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "Cost": {
            "type": "object",
            "required": [
                "amountCurrencyIncVat",
                "paymentType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "costCategory": {
                    "$ref": "#/definitions/TravelCostCategory"
                },
                "paymentType": {
                    "$ref": "#/definitions/TravelPaymentType"
                },
                "category": {
                    "type": "string",
                    "maxLength": 100
                },
                "comments": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "amountCurrencyIncVat": {
                    "type": "number"
                },
                "amountNOKInclVAT": {
                    "type": "number"
                },
                "amountNOKInclVATLow": {
                    "type": "number",
                    "readOnly": true
                },
                "amountNOKInclVATMedium": {
                    "type": "number",
                    "readOnly": true
                },
                "amountNOKInclVATHigh": {
                    "type": "number",
                    "readOnly": true
                },
                "isPaidByEmployee": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isChargeable": {
                    "type": "boolean"
                },
                "date": {
                    "type": "string"
                },
                "participants": {
                    "type": "array",
                    "description": "Link to individual expense participant.",
                    "items": {
                        "$ref": "#/definitions/TravelExpenseParticipant"
                    }
                },
                "predictions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Prediction"
                    }
                }
            }
        },
        "Customer": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "supplierNumber": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "customerNumber": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "isSupplier": {
                    "type": "boolean",
                    "description": "Defines if the customer is also a supplier."
                },
                "isCustomer": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true
                },
                "accountManager": {
                    "$ref": "#/definitions/Employee"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "minLength": 0,
                    "maxLength": 254
                },
                "invoiceEmail": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 254
                },
                "overdueNoticeEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the customer where the noticing emails are sent in case of an overdue",
                    "minLength": 0,
                    "maxLength": 254
                },
                "bankAccounts": {
                    "type": "array",
                    "description": "[DEPRECATED] List of the bank account numbers for this customer. Norwegian bank account numbers only.",
                    "items": {
                        "type": "string"
                    }
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "NO",
                        "EN"
                    ]
                },
                "displayName": {
                    "type": "string"
                },
                "isPrivateIndividual": {
                    "type": "boolean"
                },
                "singleCustomerInvoice": {
                    "type": "boolean",
                    "description": "Enables various orders on one customer invoice."
                },
                "invoiceSendMethod": {
                    "type": "string",
                    "description": "Define the invoicing method for the customer.<br>EMAIL: Send invoices as email.<br>EHF: Send invoices as EHF.<br>EFAKTURA: Send invoices as EFAKTURA.<br>AVTALEGIRO: Send invoices as AVTALEGIRO.<br>VIPPS: Send invoices through VIPPS.<br>PAPER: Send invoices as paper invoice.<br>MANUAL: User will have to send invocie manually.<br>",
                    "enum": [
                        "EMAIL",
                        "EHF",
                        "EFAKTURA",
                        "AVTALEGIRO",
                        "VIPPS",
                        "PAPER",
                        "MANUAL"
                    ]
                },
                "emailAttachmentType": {
                    "type": "string",
                    "description": "Define the invoice attachment type for emailing to the customer.<br>LINK: Send invoice as link in email.<br>ATTACHMENT: Send invoice as attachment in email.<br>",
                    "enum": [
                        "LINK",
                        "ATTACHMENT"
                    ]
                },
                "postalAddress": {
                    "$ref": "#/definitions/Address"
                },
                "physicalAddress": {
                    "$ref": "#/definitions/Address"
                },
                "deliveryAddress": {
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "category1": {
                    "description": "Category 1 of this customer",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "category2": {
                    "description": "Category 2 of this customer",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "category3": {
                    "description": "Category 3 of this customer",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "invoicesDueIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days/months in which invoices created from this customer is due",
                    "minimum": 0,
                    "maximum": 10000
                },
                "invoicesDueInType": {
                    "type": "string",
                    "description": "Set the time unit of invoicesDueIn. The special case RECURRING_DAY_OF_MONTH enables the due date to be fixed to a specific day of the month, in this case the fixed due date will automatically be set as standard on all invoices created from this customer. Note that when RECURRING_DAY_OF_MONTH is set, the due date will be set to the last day of month if \"31\" is set in invoicesDueIn.",
                    "enum": [
                        "DAYS",
                        "MONTHS",
                        "RECURRING_DAY_OF_MONTH"
                    ]
                },
                "currency": {
                    "description": "The preferred currency for this customer",
                    "$ref": "#/definitions/Currency"
                },
                "bankAccountPresentation": {
                    "type": "array",
                    "description": "List of bankAccount for this customer",
                    "items": {
                        "$ref": "#/definitions/CompanyBankAccountPresentation"
                    }
                },
                "ledgerAccount": {
                    "description": "Can be used to specify the ledger account of the customer if it's different from the default 1500 account.",
                    "$ref": "#/definitions/Account"
                },
                "isFactoring": {
                    "type": "boolean",
                    "description": "If true; send this customers invoices to factoring (if factoring is turned on in account)."
                },
                "invoiceSendSMSNotification": {
                    "type": "boolean",
                    "description": "Is sms-notification on/off"
                },
                "isAutomaticSoftReminderEnabled": {
                    "type": "boolean",
                    "description": "Has automatic soft reminders enabled for this customer."
                },
                "isAutomaticReminderEnabled": {
                    "type": "boolean",
                    "description": "Has automatic reminders enabled for this customer."
                },
                "isAutomaticNoticeOfDebtCollectionEnabled": {
                    "type": "boolean",
                    "description": "Has automatic notice of debt collection enabled for this customer."
                },
                "discountPercentage": {
                    "type": "number",
                    "description": "Default discount percentage for this customer."
                },
                "website": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "CustomerCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "DiscountGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "nameAndNumber": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Document": {
            "type": "object",
            "required": [
                "fileName"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "fileName": {
                    "type": "string",
                    "description": "The name of the document.",
                    "maxLength": 255
                },
                "size": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The size of the document in bytes.",
                    "readOnly": true,
                    "minimum": 0
                },
                "mimeType": {
                    "type": "string",
                    "example": "type/subtype of resource. E.g. application/pdf",
                    "description": "Type of the document",
                    "readOnly": true,
                    "maxLength": 100
                }
            }
        },
        "DrivingStop": {
            "type": "object",
            "required": [
                "locationName",
                "mileageAllowance"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "locationName": {
                    "type": "string",
                    "maxLength": 250
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "sortIndex": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "mileageAllowance": {
                    "$ref": "#/definitions/MileageAllowance"
                }
            }
        },
        "Inventory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "isMainInventory": {
                    "type": "boolean"
                },
                "isInactive": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "email": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "phone": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "deletable": {
                    "type": "boolean"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "lastStocking": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "hasLocations": {
                    "type": "boolean"
                },
                "mainInventory": {
                    "type": "boolean"
                },
                "inactive": {
                    "type": "boolean"
                }
            }
        },
        "InventoryLocation": {
            "type": "object",
            "required": [
                "inventory",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "inventory": {
                    "$ref": "#/definitions/Inventory"
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "isInactive": {
                    "type": "boolean"
                },
                "isDeletable": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "Invoice": {
            "type": "object",
            "required": [
                "invoiceDate",
                "invoiceDueDate",
                "orders"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "invoiceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If value is set to 0, the invoice number will be generated.",
                    "minimum": 0
                },
                "invoiceDate": {
                    "type": "string"
                },
                "customer": {
                    "description": "The invoice customer",
                    "readOnly": true,
                    "$ref": "#/definitions/Customer"
                },
                "creditedInvoice": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the original invoice if this is a credit note.",
                    "readOnly": true
                },
                "isCredited": {
                    "type": "boolean",
                    "readOnly": true
                },
                "invoiceDueDate": {
                    "type": "string"
                },
                "kid": {
                    "type": "string",
                    "description": "KID - Kundeidentifikasjonsnummer.",
                    "maxLength": 25
                },
                "invoiceComment": {
                    "type": "string",
                    "description": "Comment text for the invoice. This was specified on the order as invoiceComment.",
                    "readOnly": true
                },
                "comment": {
                    "type": "string",
                    "description": "Comment text for the specific invoice."
                },
                "orders": {
                    "type": "array",
                    "description": "Related orders. Only one order per invoice is supported at the moment.",
                    "items": {
                        "$ref": "#/definitions/Order"
                    }
                },
                "orderLines": {
                    "type": "array",
                    "description": "Orderlines connected to the invoice.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/OrderLine"
                    }
                },
                "travelReports": {
                    "type": "array",
                    "description": "Travel reports connected to the invoice.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelExpense"
                    }
                },
                "projectInvoiceDetails": {
                    "type": "array",
                    "description": "ProjectInvoiceDetails contains additional information about the invoice, in particular invoices for projects. It contains information about the charged project, the fee amount, extra percent and amount, extra costs, travel expenses, invoice and project comments, akonto amount and values determining if extra costs, akonto and hours should be included. ProjectInvoiceDetails is an object which represents the relation between an invoice and a Project, Orderline and OrderOut object.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectInvoiceDetails"
                    }
                },
                "voucher": {
                    "description": "The invoice voucher.",
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "deliveryDate": {
                    "type": "string",
                    "description": "The delivery date.",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "description": "In the company’s currency, typically NOK.",
                    "readOnly": true
                },
                "amountCurrency": {
                    "type": "number",
                    "description": "In the specified currency.",
                    "readOnly": true
                },
                "amountExcludingVat": {
                    "type": "number",
                    "description": "Amount excluding VAT (NOK).",
                    "readOnly": true
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Amount excluding VAT in the specified currency.",
                    "readOnly": true
                },
                "amountRoundoff": {
                    "type": "number",
                    "description": "Amount of round off to nearest integer.",
                    "readOnly": true
                },
                "amountRoundoffCurrency": {
                    "type": "number",
                    "description": "Amount of round off to nearest integer in the specified currency.",
                    "readOnly": true
                },
                "amountOutstanding": {
                    "type": "number",
                    "description": "The amount outstanding based on the history collection, excluding reminders and any existing remits, in the invoice currency.",
                    "readOnly": true
                },
                "amountCurrencyOutstanding": {
                    "type": "number",
                    "description": "The amountCurrency outstanding based on the history collection, excluding reminders and any existing remits, in the invoice currency.",
                    "readOnly": true
                },
                "amountOutstandingTotal": {
                    "type": "number",
                    "description": "The amount outstanding based on the history collection and including the last reminder and any existing remits. This is the total invoice balance including reminders and remittances, in the invoice currency.",
                    "readOnly": true
                },
                "amountCurrencyOutstandingTotal": {
                    "type": "number",
                    "description": "The amountCurrency outstanding based on the history collection and including the last reminder and any existing remits. This is the total invoice balance including reminders and remittances, in the invoice currency.",
                    "readOnly": true
                },
                "sumRemits": {
                    "type": "number",
                    "description": "The sum of all open remittances of the invoice. Remittances are reimbursement payments back to the customer and are therefore relevant to the bookkeeping of the invoice in the accounts.",
                    "readOnly": true
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "isCreditNote": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isCharged": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isApproved": {
                    "type": "boolean",
                    "readOnly": true
                },
                "postings": {
                    "type": "array",
                    "description": "The invoice postings, which includes a posting for the invoice with a positive amount, and one or more posting for the payments with negative amounts.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                },
                "reminders": {
                    "type": "array",
                    "description": "Invoice debt collection and reminders.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Reminder"
                    }
                },
                "invoiceRemarks": {
                    "type": "string",
                    "description": "Deprecated Invoice remarks - please use the 'invoiceRemark' instead."
                },
                "invoiceRemark": {
                    "description": "Invoice remark - automatically stops reminder/notice of debt collection until specified date.",
                    "$ref": "#/definitions/InvoiceRemark"
                },
                "paymentTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[BETA] Optional. Used to specify payment type for prepaid invoices. Payment type can be specified here, or as a parameter to the /invoice API endpoint.",
                    "minimum": 0
                },
                "paidAmount": {
                    "type": "number",
                    "description": "[BETA] Optional. Used to specify the prepaid amount of the invoice. The paid amount can be specified here, or as a parameter to the /invoice API endpoint."
                },
                "isPeriodizationPossible": {
                    "type": "boolean",
                    "readOnly": true
                },
                "ehfSendStatus": {
                    "type": "string",
                    "description": "[Deprecated] EHF (Peppol) send status. This only shows status for historic EHFs.",
                    "enum": [
                        "DO_NOT_SEND",
                        "SEND",
                        "SENT",
                        "SEND_FAILURE_RECIPIENT_NOT_FOUND"
                    ]
                }
            }
        },
        "InvoiceRemark": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string"
                },
                "postponeRemindersTo": {
                    "type": "string"
                }
            }
        },
        "Link": {
            "type": "object",
            "properties": {
                "rel": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "POST",
                        "PUT",
                        "GET",
                        "DELETE"
                    ]
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "MileageAllowance": {
            "type": "object",
            "required": [
                "date",
                "departureLocation",
                "destination"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "rateType": {
                    "$ref": "#/definitions/TravelExpenseRate"
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "date": {
                    "type": "string"
                },
                "departureLocation": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "km": {
                    "type": "number"
                },
                "rate": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "isCompanyCar": {
                    "type": "boolean"
                },
                "vehicleType": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The corresponded number for the vehicleType. Default value = 0.",
                    "minimum": 0
                },
                "passengers": {
                    "type": "array",
                    "description": "Link to individual passengers.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Passenger"
                    }
                },
                "passengerSupplement": {
                    "description": "Passenger mileage allowance associated with this mileage allowance.",
                    "$ref": "#/definitions/MileageAllowance"
                },
                "trailerSupplement": {
                    "description": "Trailer mileage allowance supplement associated with this mileage allowance.",
                    "$ref": "#/definitions/MileageAllowance"
                },
                "tollCost": {
                    "description": "Toll cost associated with this mileage allowance.",
                    "$ref": "#/definitions/Cost"
                },
                "drivingStops": {
                    "type": "array",
                    "description": "Link to individual mileage stops.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/DrivingStop"
                    }
                }
            }
        },
        "Order": {
            "type": "object",
            "required": [
                "customer",
                "deliveryDate",
                "orderDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "contact": {
                    "$ref": "#/definitions/Contact"
                },
                "attn": {
                    "$ref": "#/definitions/Contact"
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "receiverEmail": {
                    "type": "string",
                    "maxLength": 254
                },
                "overdueNoticeEmail": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "reference": {
                    "type": "string",
                    "maxLength": 255
                },
                "ourContact": {
                    "description": "If the contact is not an employee",
                    "$ref": "#/definitions/Contact"
                },
                "ourContactEmployee": {
                    "description": "If the contact is an employee",
                    "$ref": "#/definitions/Employee"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "orderDate": {
                    "type": "string"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "invoiceComment": {
                    "type": "string",
                    "description": "Comment to be displayed in the invoice based on this order. Can be also found in Invoice.invoiceComment on Invoice objects."
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "invoicesDueIn": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days/months in which invoices created from this order is due",
                    "minimum": 0,
                    "maximum": 10000
                },
                "status": {
                    "type": "string",
                    "description": "Logistics only",
                    "enum": [
                        "NOT_CHOSEN",
                        "NEW",
                        "CONFIRMATION_SENT",
                        "READY_FOR_PICKING",
                        "PICKED",
                        "PACKED",
                        "READY_FOR_SHIPPING",
                        "READY_FOR_INVOICING",
                        "INVOICED",
                        "CANCELLED"
                    ]
                },
                "invoicesDueInType": {
                    "type": "string",
                    "description": "Set the time unit of invoicesDueIn. The special case RECURRING_DAY_OF_MONTH enables the due date to be fixed to a specific day of the month, in this case the fixed due date will automatically be set as standard on all invoices created from this order. Note that when RECURRING_DAY_OF_MONTH is set, the due date will be set to the last day of month if \"31\" is set in invoicesDueIn.",
                    "enum": [
                        "DAYS",
                        "MONTHS",
                        "RECURRING_DAY_OF_MONTH"
                    ]
                },
                "isShowOpenPostsOnInvoices": {
                    "type": "boolean",
                    "description": "Show account statement - open posts on invoices created from this order"
                },
                "isClosed": {
                    "type": "boolean",
                    "description": "Denotes if this order is closed. A closed order can no longer be invoiced unless it is opened again."
                },
                "deliveryDate": {
                    "type": "string"
                },
                "deliveryAddress": {
                    "description": "Delivery address of this order. This can be a new or existing address\n(useful to know, especially if the delivery is to a private person: if 'deliveryAddress.name' is set, we ignore the state of 'customer.id')",
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "deliveryComment": {
                    "type": "string"
                },
                "isPrioritizeAmountsIncludingVat": {
                    "type": "boolean"
                },
                "orderLineSorting": {
                    "type": "string",
                    "enum": [
                        "ID",
                        "PRODUCT",
                        "CUSTOM"
                    ]
                },
                "orderGroups": {
                    "type": "array",
                    "description": "Order line groups",
                    "items": {
                        "$ref": "#/definitions/OrderGroup"
                    }
                },
                "orderLines": {
                    "type": "array",
                    "description": "Order lines tied to the order. New OrderLines may be embedded here, in some endpoints.",
                    "items": {
                        "$ref": "#/definitions/OrderLine"
                    }
                },
                "isSubscription": {
                    "type": "boolean",
                    "description": "If true, the order is a subscription, which enables periodical invoicing of order lines. First, create an order with isSubscription=true, then approve it for subscription invoicing with the :approveSubscriptionInvoice method."
                },
                "subscriptionDuration": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of months/years the subscription shall run",
                    "minimum": 0
                },
                "subscriptionDurationType": {
                    "type": "string",
                    "description": "The time unit of subscriptionDuration",
                    "enum": [
                        "MONTHS",
                        "YEAR"
                    ]
                },
                "subscriptionPeriodsOnInvoice": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of periods on each invoice",
                    "minimum": 0
                },
                "subscriptionPeriodsOnInvoiceType": {
                    "type": "string",
                    "description": "The time unit of subscriptionPeriodsOnInvoice",
                    "readOnly": true,
                    "enum": [
                        "MONTHS"
                    ]
                },
                "subscriptionInvoicingTimeInAdvanceOrArrears": {
                    "type": "string",
                    "description": "Invoicing in advance/in arrears",
                    "enum": [
                        "ADVANCE",
                        "ARREARS"
                    ]
                },
                "subscriptionInvoicingTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days/months invoicing in advance/in arrears",
                    "minimum": 0
                },
                "subscriptionInvoicingTimeType": {
                    "type": "string",
                    "description": "The time unit of subscriptionInvoicingTime",
                    "enum": [
                        "DAYS",
                        "MONTHS"
                    ]
                },
                "isSubscriptionAutoInvoicing": {
                    "type": "boolean",
                    "description": "Automatic invoicing. Starts when the subscription is approved"
                },
                "preliminaryInvoice": {
                    "description": "[BETA] Preliminary invoice if order is not charged",
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "attachment": {
                    "type": "array",
                    "description": "[BETA] Attachments belonging to this order",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Document"
                    }
                },
                "sendMethodDescription": {
                    "type": "string",
                    "description": "Description of how this invoice will be sent"
                },
                "canCreateBackorder": {
                    "type": "boolean",
                    "readOnly": true
                },
                "invoiceOnAccountVatHigh": {
                    "type": "boolean",
                    "description": "Is the on account(a konto) amounts including vat "
                },
                "totalInvoicedOnAccountAmountAbsoluteCurrency": {
                    "type": "number",
                    "description": "Amount paid on account(a konto)",
                    "readOnly": true
                },
                "invoiceSendSMSNotification": {
                    "type": "boolean",
                    "description": "Is sms-notification on/off",
                    "readOnly": true
                },
                "invoiceSMSNotificationNumber": {
                    "type": "string",
                    "description": "The phone number of the receiver of sms notifications",
                    "readOnly": true,
                    "maxLength": 100
                }
            }
        },
        "OrderGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "order": {
                    "$ref": "#/definitions/Order"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255
                },
                "comment": {
                    "type": "string"
                },
                "sortIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Minimum 1. Defines the presentation order of the orderGroups. Does not need to be, and is often not continuous.",
                    "minimum": 0
                },
                "orderLines": {
                    "type": "array",
                    "description": "Order lines belonging to the OrderGroup. Order lines that does not belong to a group, can be posted on the orderLines field on the order.",
                    "items": {
                        "$ref": "#/definitions/OrderLine"
                    }
                }
            }
        },
        "OrderLine": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "inventory": {
                    "$ref": "#/definitions/Inventory"
                },
                "inventoryLocation": {
                    "description": "Inventory location field -- beta program",
                    "$ref": "#/definitions/InventoryLocation"
                },
                "description": {
                    "type": "string"
                },
                "count": {
                    "type": "number"
                },
                "unitCostCurrency": {
                    "type": "number",
                    "description": "Unit price purchase (cost) excluding VAT in the order's currency"
                },
                "unitPriceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Unit price of purchase excluding VAT in the order's currency"
                },
                "currency": {
                    "description": "The order line's currency. Determined by the order's currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "markup": {
                    "type": "number",
                    "description": "Markup given as a percentage (%)"
                },
                "discount": {
                    "type": "number",
                    "description": "Discount given as a percentage (%)"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line excluding VAT in the order's currency",
                    "readOnly": true
                },
                "amountIncludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line including VAT in the order's currency",
                    "readOnly": true
                },
                "order": {
                    "description": "The related Order for this OrderLine. This field is required when creating a new OrderLine in the API.",
                    "$ref": "#/definitions/Order"
                },
                "unitPriceIncludingVatCurrency": {
                    "type": "number",
                    "description": "Unit price of purchase including VAT in the order's currency"
                },
                "isSubscription": {
                    "type": "boolean"
                },
                "subscriptionPeriodStart": {
                    "type": "string"
                },
                "subscriptionPeriodEnd": {
                    "type": "string"
                },
                "orderGroup": {
                    "$ref": "#/definitions/OrderGroup"
                },
                "sortIndex": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Minimum 1. Defines the presentation order of the lines. Does not need to be, and is often not continuous.",
                    "minimum": 0
                }
            }
        },
        "Passenger": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "mileageAllowance": {
                    "$ref": "#/definitions/MileageAllowance"
                }
            }
        },
        "Payslip": {
            "type": "object",
            "required": [
                "employee"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "transaction": {
                    "$ref": "#/definitions/SalaryTransaction"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "date": {
                    "type": "string",
                    "description": "Voucher date."
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "specifications": {
                    "type": "array",
                    "description": "Link to salary specifications.",
                    "items": {
                        "$ref": "#/definitions/SalarySpecification"
                    }
                },
                "vacationAllowanceAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "grossAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                }
            }
        },
        "PerDiemCompensation": {
            "type": "object",
            "required": [
                "location"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "rateType": {
                    "$ref": "#/definitions/TravelExpenseRate"
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "countryCode": {
                    "type": "string"
                },
                "travelExpenseZoneId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional travel expense zone id. If not specified, the value from field zone will be used."
                },
                "overnightAccommodation": {
                    "type": "string",
                    "description": "Set what sort of accommodation was had overnight.",
                    "enum": [
                        "NONE",
                        "HOTEL",
                        "BOARDING_HOUSE_WITHOUT_COOKING",
                        "BOARDING_HOUSE_WITH_COOKING"
                    ]
                },
                "location": {
                    "type": "string",
                    "maxLength": 255
                },
                "address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "isDeductionForBreakfast": {
                    "type": "boolean"
                },
                "isDeductionForLunch": {
                    "type": "boolean"
                },
                "isDeductionForDinner": {
                    "type": "boolean"
                }
            }
        },
        "Posting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "amortizationAccount": {
                    "description": "The Amortization account. AmortizationAccountId, amortizationStartDate and amortizationEndDate should be provided. If amortizationStartDate and amortizationEndDate are provided, while amortizationAccountId is NULL, then the default amortization account will be used.",
                    "$ref": "#/definitions/Account"
                },
                "amortizationStartDate": {
                    "type": "string",
                    "description": "Amortization start date. AmortizationAccountId, amortizationStartDate and amortizationEndDate should be provided."
                },
                "amortizationEndDate": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "amount": {
                    "type": "number"
                },
                "amountCurrency": {
                    "type": "number"
                },
                "amountGross": {
                    "type": "number"
                },
                "amountGrossCurrency": {
                    "type": "number"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "closeGroup": {
                    "$ref": "#/definitions/CloseGroup"
                },
                "invoiceNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "termOfPayment": {
                    "type": "string"
                },
                "row": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "type": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "INCOMING_PAYMENT",
                        "INCOMING_PAYMENT_OPPOSITE",
                        "INVOICE_EXPENSE",
                        "OUTGOING_INVOICE_CUSTOMER_POSTING",
                        "WAGE"
                    ]
                },
                "externalRef": {
                    "type": "string",
                    "description": "External reference for identifying payment basis of the posting, e.g., KID, customer identification or credit note number.",
                    "readOnly": true,
                    "maxLength": 100
                },
                "systemGenerated": {
                    "type": "boolean",
                    "readOnly": true
                },
                "taxTransactionType": {
                    "type": "string",
                    "readOnly": true
                },
                "taxTransactionTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "matched": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "Prediction": {
            "type": "object",
            "properties": {
                "predictedValue": {
                    "type": "string"
                },
                "confidence": {
                    "type": "string"
                }
            }
        },
        "Product": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "displayNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string"
                },
                "ean": {
                    "type": "string",
                    "maxLength": 14
                },
                "elNumber": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 14
                },
                "nrfNumber": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 14
                },
                "costExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price purchase (cost) excluding VAT in the product's currency"
                },
                "expenses": {
                    "type": "number"
                },
                "expensesInPercent": {
                    "type": "number",
                    "readOnly": true
                },
                "costPrice": {
                    "type": "number",
                    "description": "Cost price of purchase",
                    "readOnly": true
                },
                "profit": {
                    "type": "number",
                    "readOnly": true
                },
                "profitInPercent": {
                    "type": "number",
                    "readOnly": true
                },
                "priceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase excluding VAT in the product's currency"
                },
                "priceIncludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase including VAT in the product's currency"
                },
                "isInactive": {
                    "type": "boolean"
                },
                "discountGroup": {
                    "$ref": "#/definitions/DiscountGroup"
                },
                "productUnit": {
                    "$ref": "#/definitions/ProductUnit"
                },
                "isStockItem": {
                    "type": "boolean"
                },
                "stockOfGoods": {
                    "type": "number",
                    "description": "From January 23rd 2023 this field will be available only on demand",
                    "readOnly": true
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "discountPrice": {
                    "type": "number",
                    "readOnly": true
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "resaleProduct": {
                    "$ref": "#/definitions/Product"
                },
                "isDeletable": {
                    "type": "boolean",
                    "description": "For performance reasons, field is deprecated and it will always return false."
                },
                "hasSupplierProductConnected": {
                    "type": "boolean"
                },
                "weight": {
                    "type": "number"
                },
                "weightUnit": {
                    "type": "string",
                    "enum": [
                        "kg",
                        "g",
                        "hg"
                    ]
                },
                "volume": {
                    "type": "number"
                },
                "volumeUnit": {
                    "type": "string",
                    "enum": [
                        "cm3",
                        "dm3",
                        "m3"
                    ]
                },
                "hsnCode": {
                    "type": "string",
                    "maxLength": 20
                },
                "image": {
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "markupListPercentage": {
                    "type": "number",
                    "readOnly": true
                },
                "markupNetPercentage": {
                    "type": "number",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "mainSupplierProduct": {
                    "description": "This feature is available only in pilot",
                    "$ref": "#/definitions/SupplierProduct"
                }
            }
        },
        "ProductUnit": {
            "type": "object",
            "required": [
                "commonCode",
                "name",
                "nameEN"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "displayNameShort": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "nameEN": {
                    "type": "string",
                    "maxLength": 255
                },
                "nameShort": {
                    "type": "string",
                    "maxLength": 50
                },
                "nameShortEN": {
                    "type": "string",
                    "maxLength": 50
                },
                "commonCode": {
                    "type": "string",
                    "maxLength": 50
                },
                "isDeletable": {
                    "type": "boolean"
                }
            }
        },
        "Project": {
            "type": "object",
            "required": [
                "isInternal",
                "name",
                "projectManager",
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "description": "If NULL, a number is generated automatically.",
                    "maxLength": 100
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string"
                },
                "projectManager": {
                    "$ref": "#/definitions/Employee"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "mainProject": {
                    "$ref": "#/definitions/Project"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "customer": {
                    "description": "The project's customer",
                    "$ref": "#/definitions/Customer"
                },
                "isClosed": {
                    "type": "boolean"
                },
                "isReadyForInvoicing": {
                    "type": "boolean"
                },
                "isInternal": {
                    "type": "boolean"
                },
                "isOffer": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isFixedPrice": {
                    "type": "boolean",
                    "description": "Project is fixed price if set to true, hourly rate if set to false."
                },
                "projectCategory": {
                    "$ref": "#/definitions/ProjectCategory"
                },
                "deliveryAddress": {
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "displayNameFormat": {
                    "type": "string",
                    "description": "Defines project name presentation in overviews.",
                    "enum": [
                        "NAME_STANDARD",
                        "NAME_INCL_CUSTOMER_NAME",
                        "NAME_INCL_PARENT_NAME",
                        "NAME_INCL_PARENT_NUMBER",
                        "NAME_INCL_PARENT_NAME_AND_NUMBER"
                    ]
                },
                "reference": {
                    "type": "string",
                    "maxLength": 255
                },
                "externalAccountsNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "discountPercentage": {
                    "type": "number",
                    "description": "Project discount percentage.",
                    "readOnly": true
                },
                "vatType": {
                    "description": "The default vat type for this project.",
                    "$ref": "#/definitions/VatType"
                },
                "fixedprice": {
                    "type": "number",
                    "description": "Fixed price amount, in the project's currency."
                },
                "contributionMarginPercent": {
                    "type": "number",
                    "readOnly": true
                },
                "numberOfSubProjects": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "numberOfProjectParticipants": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "orderLines": {
                    "type": "array",
                    "description": "Order lines tied to the order",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectOrderLine"
                    }
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "markUpOrderLines": {
                    "type": "number",
                    "description": "Set mark-up (%) for order lines."
                },
                "markUpFeesEarned": {
                    "type": "number",
                    "description": "Set mark-up (%) for fees earned."
                },
                "isPriceCeiling": {
                    "type": "boolean",
                    "description": "Set to true if an hourly rate project has a price ceiling."
                },
                "priceCeilingAmount": {
                    "type": "number",
                    "description": "Price ceiling amount, in the project's currency."
                },
                "projectHourlyRates": {
                    "type": "array",
                    "description": "Project Rate Types tied to the project.",
                    "items": {
                        "$ref": "#/definitions/ProjectHourlyRate"
                    }
                },
                "forParticipantsOnly": {
                    "type": "boolean",
                    "description": "Set to true if only project participants can register information on the project"
                },
                "participants": {
                    "type": "array",
                    "description": "Link to individual project participants.",
                    "items": {
                        "$ref": "#/definitions/ProjectParticipant"
                    }
                },
                "contact": {
                    "description": "Customer contact person.",
                    "$ref": "#/definitions/Contact"
                },
                "attention": {
                    "description": "Customer in attention of person",
                    "$ref": "#/definitions/Contact"
                },
                "invoiceComment": {
                    "type": "string",
                    "description": "Comment for project invoices"
                },
                "invoicingPlan": {
                    "type": "array",
                    "description": "Invoicing plans tied to the project",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Invoice"
                    }
                },
                "preliminaryInvoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "generalProjectActivitiesPerProjectOnly": {
                    "type": "boolean",
                    "description": "Set to true if a general project activity must be linked to project to allow time tracking."
                },
                "projectActivities": {
                    "type": "array",
                    "description": "Project Activities",
                    "items": {
                        "$ref": "#/definitions/ProjectActivity"
                    }
                },
                "hierarchyNameAndNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "invoiceDueDate": {
                    "type": "integer",
                    "format": "int32",
                    "description": "invoice due date"
                },
                "invoiceDueDateType": {
                    "type": "string",
                    "description": "Set the time unit of invoiceDueDate. The special case RECURRING_DAY_OF_MONTH enables the due date to be fixed to a specific day of the month, in this case the fixed due date will automatically be set as standard on all invoices created from this project. Note that when RECURRING_DAY_OF_MONTH is set, the due date will be set to the last day of month if \"31\" is set in invoicesDueIn.",
                    "enum": [
                        "DAYS",
                        "MONTHS",
                        "RECURRING_DAY_OF_MONTH"
                    ]
                },
                "invoiceReceiverEmail": {
                    "type": "string",
                    "description": "receiver email",
                    "maxLength": 254
                },
                "accessType": {
                    "type": "string",
                    "description": "READ/WRITE access on project",
                    "enum": [
                        "NONE",
                        "READ",
                        "WRITE"
                    ]
                },
                "useProductNetPrice": {
                    "type": "boolean"
                },
                "ignoreCompanyProductDiscountAgreement": {
                    "type": "boolean"
                },
                "customerName": {
                    "type": "string",
                    "readOnly": true
                },
                "hierarchyLevel": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "projectManagerNameAndNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "totalInvoicedOnAccountAmountAbsoluteCurrency": {
                    "type": "number",
                    "description": "Amount paid on account(a konto)",
                    "readOnly": true
                },
                "invoiceOnAccountVatHigh": {
                    "type": "boolean",
                    "description": "The on account(a konto) amounts including VAT"
                }
            }
        },
        "ProjectActivity": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "activity": {
                    "description": "Add existing project activity or create new project specific activity",
                    "$ref": "#/definitions/Activity"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "isClosed": {
                    "type": "boolean"
                },
                "budgetHours": {
                    "type": "number",
                    "description": "Set budget hours"
                },
                "budgetHourlyRateCurrency": {
                    "type": "number",
                    "description": "Set budget hourly rate"
                },
                "budgetFeeCurrency": {
                    "type": "number",
                    "description": "Set budget fee"
                }
            }
        },
        "ProjectCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "ProjectHourlyRate": {
            "type": "object",
            "required": [
                "hourlyRateModel",
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "startDate": {
                    "type": "string"
                },
                "showInProjectOrder": {
                    "type": "boolean",
                    "description": "Show on contract confirmation/offers"
                },
                "hourlyRateModel": {
                    "type": "string",
                    "description": "Defines the model used for the hourly rate.",
                    "enum": [
                        "TYPE_PREDEFINED_HOURLY_RATES",
                        "TYPE_PROJECT_SPECIFIC_HOURLY_RATES",
                        "TYPE_FIXED_HOURLY_RATE"
                    ]
                },
                "projectSpecificRates": {
                    "type": "array",
                    "description": "Project specific rates if hourlyRateModel is TYPE_PROJECT_SPECIFIC_HOURLY_RATES. ",
                    "items": {
                        "$ref": "#/definitions/ProjectSpecificRate"
                    }
                },
                "fixedRate": {
                    "type": "number",
                    "description": "Fixed Hourly rates if hourlyRateModel is TYPE_FIXED_HOURLY_RATE."
                }
            }
        },
        "ProjectInvoiceDetails": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "description": "The Project related to the Invoice and ProjectInvoiceAdditionalInfo.",
                    "readOnly": true,
                    "$ref": "#/definitions/Project"
                },
                "feeAmount": {
                    "type": "number",
                    "description": "Fee amount of the project. For example: 100 NOK.",
                    "readOnly": true
                },
                "feeAmountCurrency": {
                    "type": "number",
                    "description": "Fee amount of the project in the invoice currency.",
                    "readOnly": true
                },
                "markupPercent": {
                    "type": "number",
                    "description": "The percentage value of mark-up of amountFee. For example: 10%.",
                    "readOnly": true
                },
                "markupAmount": {
                    "type": "number",
                    "description": "The amount value of mark-up of amountFee on the project invoice. For example: 10 NOK.",
                    "readOnly": true
                },
                "markupAmountCurrency": {
                    "type": "number",
                    "description": "The amount value of mark-up of amountFee on the project invoice, in the invoice currency.",
                    "readOnly": true
                },
                "amountOrderLinesAndReinvoicing": {
                    "type": "number",
                    "description": "The amount of chargeable manual order lines and vendor invoices on the project invoice.",
                    "readOnly": true
                },
                "amountOrderLinesAndReinvoicingCurrency": {
                    "type": "number",
                    "description": "The amount of chargeable manual order lines and vendor invoices on the project invoice, in the invoice currency.",
                    "readOnly": true
                },
                "amountTravelReportsAndExpenses": {
                    "type": "number",
                    "description": "The amount of travel costs and expenses on the project invoice.",
                    "readOnly": true
                },
                "amountTravelReportsAndExpensesCurrency": {
                    "type": "number",
                    "description": "The amount of travel costs and expenses on the project invoice, in the invoice currency.",
                    "readOnly": true
                },
                "feeInvoiceText": {
                    "type": "string",
                    "description": "The fee comment on the project invoice.",
                    "readOnly": true
                },
                "invoiceText": {
                    "type": "string",
                    "description": "The comment on the project invoice.",
                    "readOnly": true
                },
                "includeOrderLinesAndReinvoicing": {
                    "type": "boolean",
                    "description": "Determines if extra costs should be included on the project invoice.",
                    "readOnly": true
                },
                "includeHours": {
                    "type": "boolean",
                    "description": "Determines if hours should be included on the project invoice.",
                    "readOnly": true
                },
                "includeOnAccountBalance": {
                    "type": "boolean",
                    "description": "Determines if akonto should be included on the project invoice.",
                    "readOnly": true
                },
                "onAccountBalanceAmount": {
                    "type": "number",
                    "description": "The akonto amount on the project invoice.",
                    "readOnly": true
                },
                "onAccountBalanceAmountCurrency": {
                    "type": "number",
                    "description": "The akonto amount on the project invoice in the invoice currency.",
                    "readOnly": true
                },
                "vatType": {
                    "description": "The VAT type of the project invoice.",
                    "readOnly": true,
                    "$ref": "#/definitions/VatType"
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                }
            }
        },
        "ProjectOrderLine": {
            "type": "object",
            "required": [
                "date",
                "project"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "inventory": {
                    "$ref": "#/definitions/Inventory"
                },
                "inventoryLocation": {
                    "description": "Inventory location field -- beta program",
                    "$ref": "#/definitions/InventoryLocation"
                },
                "description": {
                    "type": "string"
                },
                "count": {
                    "type": "number"
                },
                "unitCostCurrency": {
                    "type": "number",
                    "description": "Unit price purchase (cost) excluding VAT in the order's currency"
                },
                "unitPriceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Unit price of purchase excluding VAT in the order's currency"
                },
                "currency": {
                    "description": "The order line's currency. Determined by the order's currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "markup": {
                    "type": "number",
                    "description": "Markup given as a percentage (%)"
                },
                "discount": {
                    "type": "number",
                    "description": "Discount given as a percentage (%)"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line excluding VAT in the order's currency",
                    "readOnly": true
                },
                "amountIncludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line including VAT in the order's currency",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "date": {
                    "type": "string"
                },
                "isChargeable": {
                    "type": "boolean"
                },
                "isBudget": {
                    "type": "boolean",
                    "readOnly": true
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                }
            }
        },
        "ProjectParticipant": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "adminAccess": {
                    "type": "boolean"
                }
            }
        },
        "ProjectSpecificRate": {
            "type": "object",
            "required": [
                "hourlyRate",
                "projectHourlyRate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "hourlyRate": {
                    "type": "number"
                },
                "hourlyCostPercentage": {
                    "type": "number"
                },
                "projectHourlyRate": {
                    "$ref": "#/definitions/ProjectHourlyRate"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "activity": {
                    "$ref": "#/definitions/Activity"
                }
            }
        },
        "Reminder": {
            "type": "object",
            "required": [
                "termOfPayment",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "reminderDate": {
                    "type": "string",
                    "description": "Creation date of the invoice reminder.",
                    "readOnly": true
                },
                "charge": {
                    "type": "number",
                    "description": "The fee part of the reminder, in the company's currency.",
                    "readOnly": true
                },
                "chargeCurrency": {
                    "type": "number",
                    "description": "The fee part of the reminder, in the invoice currency.",
                    "readOnly": true
                },
                "totalCharge": {
                    "type": "number",
                    "description": "The total fee part of all reminders, in the company's currency.",
                    "readOnly": true
                },
                "totalChargeCurrency": {
                    "type": "number",
                    "description": "The total fee part of all reminders, in the invoice currency.",
                    "readOnly": true
                },
                "totalAmountCurrency": {
                    "type": "number",
                    "description": "The total amount to pay in reminder's currency.",
                    "readOnly": true
                },
                "interests": {
                    "type": "number",
                    "description": "The interests part of the reminder.",
                    "readOnly": true
                },
                "interestRate": {
                    "type": "number",
                    "description": "The reminder interest rate.",
                    "readOnly": true
                },
                "termOfPayment": {
                    "type": "string",
                    "description": "The reminder term of payment date."
                },
                "currency": {
                    "description": "The reminder currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "SOFT_REMINDER",
                        "REMINDER",
                        "NOTICE_OF_DEBT_COLLECTION",
                        "DEBT_COLLECTION"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "kid": {
                    "type": "string",
                    "description": "KID - Kundeidentifikasjonsnummer.",
                    "maxLength": 25
                },
                "bankAccountNumber": {
                    "type": "string",
                    "maxLength": 255
                },
                "bankAccountIBAN": {
                    "type": "string",
                    "maxLength": 255
                },
                "bankAccountSWIFT": {
                    "type": "string",
                    "maxLength": 255
                },
                "bank": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "ResponseWrapperBankReconciliation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankReconciliation"
                }
            }
        },
        "SalarySpecification": {
            "type": "object",
            "required": [
                "count",
                "rate",
                "salaryType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "rate": {
                    "type": "number"
                },
                "count": {
                    "type": "number"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "salaryType": {
                    "$ref": "#/definitions/SalaryType"
                },
                "payslip": {
                    "$ref": "#/definitions/Payslip"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "description": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number"
                }
            }
        },
        "SalaryTransaction": {
            "type": "object",
            "required": [
                "month",
                "payslips",
                "year"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "description": "Voucher date."
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "isHistorical": {
                    "type": "boolean",
                    "description": "With historical wage vouchers you can update the wage system with information dated before the opening balance."
                },
                "paySlipsAvailableDate": {
                    "type": "string",
                    "description": "The date payslips are made available to the employee. Defaults to voucherDate."
                },
                "payslips": {
                    "type": "array",
                    "description": "Link to individual payslip objects.",
                    "items": {
                        "$ref": "#/definitions/Payslip"
                    }
                }
            }
        },
        "SalaryType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "maxLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "type": "string"
                },
                "showInTimesheet": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "Supplier": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "supplierNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "isSupplier": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isCustomer": {
                    "type": "boolean",
                    "description": "Determine if the supplier is also a customer"
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "minLength": 0,
                    "maxLength": 254
                },
                "bankAccounts": {
                    "type": "array",
                    "description": "[DEPRECATED] List of the bank account numbers for this supplier.  Norwegian bank account numbers only.",
                    "items": {
                        "type": "string"
                    }
                },
                "invoiceEmail": {
                    "type": "string",
                    "format": "email",
                    "minLength": 0,
                    "maxLength": 254
                },
                "overdueNoticeEmail": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the customer where the noticing emails are sent in case of an overdue",
                    "minLength": 0,
                    "maxLength": 254
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "isPrivateIndividual": {
                    "type": "boolean"
                },
                "showProducts": {
                    "type": "boolean"
                },
                "accountManager": {
                    "$ref": "#/definitions/Employee"
                },
                "postalAddress": {
                    "$ref": "#/definitions/Address"
                },
                "physicalAddress": {
                    "$ref": "#/definitions/Address"
                },
                "deliveryAddress": {
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "category1": {
                    "description": "Category 1 of this supplier",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "category2": {
                    "description": "Category 2 of this supplier",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "category3": {
                    "description": "Category 3 of this supplier",
                    "$ref": "#/definitions/CustomerCategory"
                },
                "bankAccountPresentation": {
                    "type": "array",
                    "description": "List of bankAccount for this supplier",
                    "items": {
                        "$ref": "#/definitions/CompanyBankAccountPresentation"
                    }
                },
                "currency": {
                    "description": "The preferred currency for this supplier",
                    "$ref": "#/definitions/Currency"
                },
                "ledgerAccount": {
                    "description": "Can be used to specify the ledger account of the supplier if it's different from the default 2400 account",
                    "$ref": "#/definitions/Account"
                },
                "isWholesaler": {
                    "type": "boolean",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "locale": {
                    "type": "string",
                    "readOnly": true
                },
                "website": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "SupplierProduct": {
            "type": "object",
            "required": [
                "supplier"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "ean": {
                    "type": "string",
                    "maxLength": 14
                },
                "costExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price purchase (cost) excluding VAT in the product's currency"
                },
                "cost": {
                    "type": "number",
                    "description": "Price purchase (cost) in the company's currency"
                },
                "priceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase excluding VAT in the product's currency"
                },
                "priceIncludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase including VAT in the product's currency"
                },
                "isInactive": {
                    "type": "boolean"
                },
                "productUnit": {
                    "$ref": "#/definitions/ProductUnit"
                },
                "isStockItem": {
                    "type": "boolean"
                },
                "stockOfGoods": {
                    "type": "number",
                    "readOnly": true
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "discountPrice": {
                    "type": "number",
                    "readOnly": true
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "resaleProduct": {
                    "$ref": "#/definitions/Product"
                },
                "isDeletable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "vendorName": {
                    "type": "string",
                    "readOnly": true
                },
                "isEfoNelfoProduct": {
                    "type": "boolean",
                    "readOnly": true
                },
                "wholesalerId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "isMainSupplierProduct": {
                    "type": "boolean",
                    "description": "This feature is available only in pilot"
                }
            }
        },
        "TravelCostCategory": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "isVatLocked": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showOnTravelExpenses": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showOnEmployeeExpenses": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                }
            }
        },
        "TravelDetails": {
            "type": "object",
            "properties": {
                "isForeignTravel": {
                    "type": "boolean"
                },
                "isDayTrip": {
                    "type": "boolean"
                },
                "isCompensationFromRates": {
                    "type": "boolean"
                },
                "departureDate": {
                    "type": "string"
                },
                "returnDate": {
                    "type": "string"
                },
                "detailedJourneyDescription": {
                    "type": "string"
                },
                "departureFrom": {
                    "type": "string",
                    "maxLength": 255
                },
                "destination": {
                    "type": "string",
                    "maxLength": 255
                },
                "departureTime": {
                    "type": "string",
                    "maxLength": 20
                },
                "returnTime": {
                    "type": "string",
                    "maxLength": 20
                },
                "purpose": {
                    "type": "string"
                }
            }
        },
        "TravelExpense": {
            "type": "object",
            "required": [
                "employee"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "approvedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "completedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "rejectedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "payslip": {
                    "readOnly": true,
                    "$ref": "#/definitions/Payslip"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "paymentCurrency": {
                    "$ref": "#/definitions/Currency"
                },
                "travelDetails": {
                    "$ref": "#/definitions/TravelDetails"
                },
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "attachment": {
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "isCompleted": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isApproved": {
                    "type": "boolean",
                    "readOnly": true
                },
                "rejectedComment": {
                    "type": "string",
                    "readOnly": true
                },
                "isChargeable": {
                    "type": "boolean"
                },
                "isFixedInvoicedAmount": {
                    "type": "boolean"
                },
                "isIncludeAttachedReceiptsWhenReinvoicing": {
                    "type": "boolean"
                },
                "completedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "approvedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "readOnly": true
                },
                "travelAdvance": {
                    "type": "number"
                },
                "fixedInvoicedAmount": {
                    "type": "number"
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                },
                "paymentAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "chargeableAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "lowRateVAT": {
                    "type": "number",
                    "readOnly": true
                },
                "mediumRateVAT": {
                    "type": "number",
                    "readOnly": true
                },
                "highRateVAT": {
                    "type": "number",
                    "readOnly": true
                },
                "paymentAmountCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255
                },
                "perDiemCompensations": {
                    "type": "array",
                    "description": "Link to individual per diem compensations.",
                    "items": {
                        "$ref": "#/definitions/PerDiemCompensation"
                    }
                },
                "mileageAllowances": {
                    "type": "array",
                    "description": "Link to individual mileage allowances.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/MileageAllowance"
                    }
                },
                "accommodationAllowances": {
                    "type": "array",
                    "description": "Link to individual accommodation allowances.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AccommodationAllowance"
                    }
                },
                "costs": {
                    "type": "array",
                    "description": "Link to individual costs.",
                    "items": {
                        "$ref": "#/definitions/Cost"
                    }
                },
                "attachmentCount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0,
                    "maximum": 2147483647
                },
                "state": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ALL",
                        "OPEN",
                        "APPROVED",
                        "SALARY_PAID",
                        "DELIVERED",
                        "REJECTED"
                    ]
                },
                "actions": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                },
                "isSalaryAdmin": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showPayslip": {
                    "type": "boolean",
                    "readOnly": true
                },
                "accountingPeriodClosed": {
                    "type": "boolean",
                    "readOnly": true
                },
                "accountingPeriodVATClosed": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "TravelExpenseParticipant": {
            "type": "object",
            "required": [
                "cost"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional employee id in case the participant is an employee"
                },
                "cost": {
                    "$ref": "#/definitions/Cost"
                }
            }
        },
        "TravelExpenseRate": {
            "type": "object",
            "required": [
                "rateCategory",
                "zone"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "zone": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "breakfastDeductionRate": {
                    "type": "number"
                },
                "lunchDeductionRate": {
                    "type": "number"
                },
                "dinnerDeductionRate": {
                    "type": "number"
                }
            }
        },
        "TravelExpenseRateCategory": {
            "type": "object",
            "required": [
                "fromDate",
                "toDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "ameldingWageCode": {
                    "type": "integer",
                    "format": "int32"
                },
                "wageCodeNumber": {
                    "type": "string"
                },
                "isValidDayTrip": {
                    "type": "boolean"
                },
                "isValidAccommodation": {
                    "type": "boolean"
                },
                "isValidDomestic": {
                    "type": "boolean"
                },
                "isValidForeignTravel": {
                    "type": "boolean"
                },
                "isRequiresZone": {
                    "type": "boolean"
                },
                "isRequiresOvernightAccommodation": {
                    "type": "boolean"
                },
                "fromDate": {
                    "type": "string"
                },
                "toDate": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "PER_DIEM",
                        "ACCOMMODATION_ALLOWANCE",
                        "MILEAGE_ALLOWANCE"
                    ]
                }
            }
        },
        "TravelPaymentType": {
            "type": "object",
            "required": [
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "showOnTravelExpenses": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showOnEmployeeExpenses": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "Voucher": {
            "type": "object",
            "required": [
                "date",
                "description",
                "postings"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0
                },
                "tempNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Temporary voucher number.",
                    "readOnly": true,
                    "minimum": 0
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0
                },
                "description": {
                    "type": "string"
                },
                "voucherType": {
                    "description": "Voucher type. Must not be of type 'Utgående faktura' ('Outgoing Invoice') on new vouchers, instead use voucherType=null or use the Invoice endpoint.",
                    "$ref": "#/definitions/VoucherType"
                },
                "reverseVoucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "postings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                },
                "document": {
                    "description": "If the documentation for the voucher has been generated by the system (e.g. an invoice) then this is a reference to the generated document. This document is always a PDF. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "attachment": {
                    "description": "If the documentation for the voucher has been provided from an external source (e.g. another system via API or a user upload) then this is a reference to the document. This is always a PDF. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "externalVoucherNumber": {
                    "type": "string",
                    "description": "External voucher number."
                },
                "ediDocument": {
                    "description": "If the voucher is created based on a machine readable document (such as EHF or EFO/NELFO) then this is a reference to that document. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "supplierVoucherType": {
                    "type": "string",
                    "description": "Supplier voucher type - simple and detailed.",
                    "enum": [
                        "TYPE_SUPPLIER_INVOICE_SIMPLE",
                        "TYPE_SUPPLIER_INVOICE_DETAILED"
                    ]
                }
            }
        },
        "VoucherType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ListResponseBankReconciliation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankReconciliation"
                    }
                }
            }
        },
        "BankReconciliationAdjustment": {
            "type": "object",
            "properties": {
                "paymentType": {
                    "$ref": "#/definitions/BankReconciliationPaymentType"
                },
                "bankTransactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                },
                "postingDate": {
                    "type": "string"
                },
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "postings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                },
                "bankReconciliationMatch": {
                    "readOnly": true,
                    "$ref": "#/definitions/BankReconciliationMatch"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "interimAccount": {
                    "$ref": "#/definitions/Account"
                },
                "voucherNumber": {
                    "type": "string"
                },
                "voucherViewLink": {
                    "type": "string"
                },
                "voucherDetailsLink": {
                    "type": "string"
                }
            }
        },
        "BankReconciliationMatch": {
            "type": "object",
            "required": [
                "bankReconciliation"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "bankReconciliation": {
                    "$ref": "#/definitions/BankReconciliation"
                },
                "type": {
                    "type": "string",
                    "description": "Type of match, MANUAL and APPROVED_SUGGESTION are considered part of reconciliation.",
                    "enum": [
                        "MANUAL",
                        "PENDING_SUGGESTION",
                        "REJECTED_SUGGESTION",
                        "APPROVED_SUGGESTION",
                        "ADJUSTMENT",
                        "AUTO_MATCHED",
                        "REJECTED_AUTO_MATCH"
                    ]
                },
                "transactions": {
                    "type": "array",
                    "description": "Match transactions",
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                },
                "postings": {
                    "type": "array",
                    "description": "Match postings",
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                }
            }
        },
        "BankReconciliationPaymentType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "Description",
                    "readOnly": true,
                    "maxLength": 255
                },
                "debitAccount": {
                    "description": "Debit account",
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "creditAccount": {
                    "description": "Credit account",
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "ListResponseBankReconciliationAdjustment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankReconciliationAdjustment"
                    }
                }
            }
        },
        "ResponseWrapperDate": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "FileIdForIncomingPaymentsDTO": {
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "FileId corresponding to an Incoming Payment PDF.",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Date on incoming payments file.",
                    "readOnly": true
                },
                "accountNumber": {
                    "type": "string",
                    "description": "Account number.",
                    "readOnly": true
                },
                "postingIds": {
                    "type": "array",
                    "description": "List of postingIds correlated to this fileId",
                    "readOnly": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "ResponseWrapperListFileIdForIncomingPaymentsDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileIdForIncomingPaymentsDTO"
                    }
                }
            }
        },
        "ResponseWrapperBankReconciliationMatch": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankReconciliationMatch"
                }
            }
        },
        "ListResponseBankReconciliationMatch": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankReconciliationMatch"
                    }
                }
            }
        },
        "BankReconciliationMatchesCounter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "bankReconciliationId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The reconciliation id for which the number of matches is stored."
                },
                "autoMatchedMatches": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of auto-matched matches since last page access.",
                    "minimum": 0
                },
                "suggestedMatches": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of suggested matches since last page access.",
                    "minimum": 0
                }
            }
        },
        "ResponseWrapperBankReconciliationMatchesCounter": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankReconciliationMatchesCounter"
                }
            }
        },
        "ResponseWrapperBankReconciliationPaymentType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankReconciliationPaymentType"
                }
            }
        },
        "ListResponseBankReconciliationPaymentType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankReconciliationPaymentType"
                    }
                }
            }
        },
        "BankReconciliationSettings": {
            "type": "object",
            "required": [
                "numberOfMatchesPerPage"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "numberOfMatchesPerPage": {
                    "type": "string",
                    "description": "The number of matches showed per page in bank reconciliation.",
                    "enum": [
                        "ITEMS_10",
                        "ITEMS_50",
                        "ITEMS_100",
                        "ITEMS_500",
                        "ITEMS_1000",
                        "ITEMS_5000",
                        "ITEMS_10000"
                    ]
                }
            }
        },
        "ResponseWrapperBankReconciliationSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankReconciliationSettings"
                }
            }
        },
        "BankSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "taxBankAgreement": {
                    "$ref": "#/definitions/AutopayBankAgreement"
                },
                "remitNumberOfAcceptors": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The remit number of acceptors.",
                    "minimum": 1
                },
                "showAdviceCurrencyMismatch": {
                    "type": "boolean",
                    "description": "The showAdviceCurrencyMismatch property."
                },
                "paymentWithUnknownKidParseOption": {
                    "type": "string",
                    "description": "Setting for whether incoming AutoPay payments without KID should be automatically posted, sent to voucher reception or ignored.",
                    "enum": [
                        "VOUCHER_RECEPTION",
                        "PARSE",
                        "IGNORE"
                    ]
                },
                "signAutoPayWithBankId": {
                    "type": "boolean",
                    "description": "Setting for whether the user should have the option to sign payments and agreements with Bank ID in addition to 2FA."
                },
                "batchBookingOfPayments": {
                    "type": "boolean",
                    "description": "Setting for the user to use or not the batch booking for payments."
                },
                "parseEntriesAsSumPosts": {
                    "type": "boolean",
                    "description": "Setting for the user to choose if account statements entries should be parsed as sum posts or not."
                },
                "employeesWithDirectRemitAccess": {
                    "type": "array",
                    "description": "Employees with payment access",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Employee"
                    }
                },
                "employeesWithLimitedDirectRemitAccess": {
                    "type": "array",
                    "description": "Employees with limited payment access",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Employee"
                    }
                },
                "daysBeforePaymentOutdated": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days before a payment is set as outdated",
                    "minimum": 3,
                    "maximum": 99
                }
            }
        },
        "ResponseWrapperBankSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankSettings"
                }
            }
        },
        "ResponseWrapperBankStatement": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankStatement"
                }
            }
        },
        "ListResponseBankStatement": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankStatement"
                    }
                }
            }
        },
        "ResponseWrapperBankStatementBalance": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankStatementBalance"
                }
            }
        },
        "BankBalanceEstimation": {
            "type": "object",
            "required": [
                "category",
                "description",
                "recurrence"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "java.lang.String",
                    "maxLength": 255
                },
                "voucherId": {
                    "type": "integer",
                    "format": "int32"
                },
                "invoiceId": {
                    "type": "integer",
                    "format": "int32"
                },
                "invoiceNumber": {
                    "type": "string"
                },
                "invoiceAmount": {
                    "type": "number",
                    "description": "java.math.BigDecimal"
                },
                "isIncomingInvoice": {
                    "type": "boolean",
                    "description": "boolean"
                },
                "recurrence": {
                    "type": "string",
                    "description": "Recurrence type",
                    "enum": [
                        "NONE",
                        "DAILY",
                        "WEEKLY",
                        "MONTHLY"
                    ]
                },
                "category": {
                    "type": "string",
                    "description": "Category",
                    "enum": [
                        "DUPLICATE",
                        "STARTING_BALANCE",
                        "NONE",
                        "SALARY",
                        "ENI",
                        "TAX",
                        "VAT_RETURNS",
                        "VACATION_ALLOWANCE",
                        "TRAVEL_AND_EXPENSES"
                    ]
                },
                "vendorOrCustomerName": {
                    "type": "string"
                },
                "isManuallyAdded": {
                    "type": "boolean",
                    "description": "boolean"
                },
                "batchId": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "ListResponseBankBalanceEstimation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankBalanceEstimation"
                    }
                }
            }
        },
        "ResponseWrapperListBankBalanceEstimation": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BankBalanceEstimation"
                    }
                }
            }
        },
        "ResponseWrapperBankBalanceEstimation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankBalanceEstimation"
                }
            }
        },
        "ResponseWrapperBankTransaction": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankTransaction"
                }
            }
        },
        "ListResponseBankTransaction": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BankTransaction"
                    }
                }
            }
        },
        "BankTransactionAggregates": {
            "type": "object",
            "properties": {
                "totalIncomingAmount": {
                    "type": "number",
                    "description": "Total incoming amount on given transactions.",
                    "readOnly": true
                },
                "totalOutgoingAmount": {
                    "type": "number",
                    "description": "Total outgoing amount on given transactions.",
                    "readOnly": true
                },
                "topCustomers": {
                    "type": "array",
                    "description": "top customers and respective earnings",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CompanyTransactionAggregates"
                    }
                },
                "topSuppliers": {
                    "type": "array",
                    "description": "top suppliers and respective payments",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CompanyTransactionAggregates"
                    }
                }
            }
        },
        "CompanyTransactionAggregates": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Customer id.",
                    "readOnly": true
                },
                "name": {
                    "type": "number",
                    "description": "Customer name.",
                    "readOnly": true
                },
                "incomingAmount": {
                    "type": "number",
                    "description": "Incoming amount from this customer.",
                    "readOnly": true
                },
                "percentageOfIncoming": {
                    "type": "number",
                    "description": "Percentage of incoming amount from all companies.",
                    "readOnly": true
                },
                "outgoingAmount": {
                    "type": "number",
                    "description": "Outgoing amount to this company.",
                    "readOnly": true
                },
                "percentageOfOutgoing": {
                    "type": "number",
                    "description": "Percentage outgoing amount from all companies.",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperBankTransactionAggregates": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankTransactionAggregates"
                }
            }
        },
        "ResponseWrapperObject": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object"
                }
            }
        },
        "ListResponseUpsaleMetric": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/UpsaleMetric"
                    }
                }
            }
        },
        "UpsaleMetric": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The company's ID."
                },
                "actualEmployeeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Actual employee's ID."
                },
                "loginEmployeeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Login employee's ID."
                },
                "tripletexUserId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Tripletex's user ID."
                },
                "metricType": {
                    "type": "string",
                    "description": "The type of the metric used.",
                    "enum": [
                        "BANK_DASHBOARD",
                        "VENDOR",
                        "SALARY"
                    ]
                },
                "action": {
                    "type": "string",
                    "description": "Status for upsale's AutoPay bank dashboard page or enabling / disabling upsale's notifications.",
                    "enum": [
                        "VISITED",
                        "ONBOARDED",
                        "DISABLED"
                    ]
                }
            }
        },
        "BringCredentials": {
            "type": "object",
            "required": [
                "confirmationEmail",
                "customerNumber",
                "moduleBring",
                "username"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "username": {
                    "type": "string",
                    "description": "Bring username",
                    "minLength": 0,
                    "maxLength": 255
                },
                "customerNumber": {
                    "type": "string",
                    "description": "Bring customer number",
                    "minLength": 0,
                    "maxLength": 255
                },
                "apiKey": {
                    "type": "string",
                    "description": "API token for Bring APIs"
                },
                "moduleBring": {
                    "type": "boolean",
                    "description": "Bring activation in Logistics module"
                },
                "confirmationEmail": {
                    "type": "string",
                    "description": "Bring preferred email",
                    "minLength": 0,
                    "maxLength": 255
                }
            }
        },
        "ResponseWrapperBringCredentials": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BringCredentials"
                }
            }
        },
        "Checkout": {
            "type": "object",
            "required": [
                "company",
                "employee"
            ],
            "properties": {
                "payingCustomer": {
                    "type": "boolean"
                },
                "proxyOrClient": {
                    "type": "boolean"
                },
                "company": {
                    "description": "Information about the company.",
                    "$ref": "#/definitions/Company"
                },
                "employee": {
                    "description": "Employee that wants to checkout.",
                    "$ref": "#/definitions/Employee"
                },
                "isPayingCustomer": {
                    "type": "boolean",
                    "description": "Returns whether the company category is paying."
                },
                "isProxyOrClient": {
                    "type": "boolean",
                    "description": "Returns whether employee is proxy or not"
                }
            }
        },
        "Company": {
            "type": "object",
            "required": [
                "address",
                "name",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "faxNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "ENK",
                        "AS",
                        "NUF",
                        "ANS",
                        "DA",
                        "PRE",
                        "KS",
                        "ASA",
                        "BBL",
                        "BRL",
                        "GFS",
                        "SPA",
                        "SF",
                        "IKS",
                        "KF_FKF",
                        "FCD",
                        "EOFG",
                        "BA",
                        "STI",
                        "ORG",
                        "ESEK",
                        "SA",
                        "SAM",
                        "BO",
                        "VPFO",
                        "OS",
                        "FLI",
                        "Other"
                    ]
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "accountantOrSimilar": {
                    "type": "boolean",
                    "readOnly": true
                },
                "companyMigration": {
                    "type": "string",
                    "description": "If the company was migrated from another system, this field will contain the name of the system it was migrated from.",
                    "readOnly": true,
                    "enum": [
                        "NONE",
                        "AGRO"
                    ]
                }
            }
        },
        "ResponseWrapperCheckout": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Checkout"
                }
            }
        },
        "AuthorizationManager": {
            "type": "object"
        },
        "ClientAccessTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "roleContainers": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ROLE_ADMINISTRATOR",
                            "AUTH_READ_ONLY",
                            "AUTH_LOGIN",
                            "AUTH_ALL_VOUCHERS",
                            "AUTH_COMPANY_ACCOUNTING_REPORTS",
                            "AUTH_ACCOUNTING_SETTINGS",
                            "AUTH_COMPANY_RESULT_BUDGET",
                            "AUTH_COMPANY_CUSTOMER_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_VENDOR_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_EMPLOYEE_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_ASSET_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_ATTESTOR",
                            "AUTH_DIRECT_REMIT_ADMIN",
                            "AUTH_DIRECT_REMIT_LIGHT",
                            "AUTH_MANAGE_BANK_ACCOUNT_NUMBERS",
                            "AUTH_DIRECT_REMIT_CREATE_NEW",
                            "AUTH_DIRECT_REMIT_ADMIN_ZTL",
                            "AUTH_COMPANY_ADMIN",
                            "AUTH_EMPLOYEE_INFO",
                            "AUTH_COMPANY_EMPLOYEE_ADMIN",
                            "AUTH_CUSTOMER_ADMIN",
                            "AUTH_CUSTOMER_INFO",
                            "AUTH_CREATE_CUSTOMER",
                            "AUTH_INBOX_ARCHIVE_ALL_EMPLOYEES",
                            "AUTH_ARCHIVE_READ",
                            "AUTH_ARCHIVE_WRITE",
                            "AUTH_ARCHIVE_ADMIN",
                            "AUTH_CREATE_NOTE",
                            "AUTH_CREATE_NOTE_TEMPLATE",
                            "AUTH_INVOICING",
                            "AUTH_OFFER_ADMIN",
                            "AUTH_ORDER_ADMIN",
                            "AUTH_CREATE_OFFER",
                            "AUTH_CREATE_ORDER",
                            "AUTH_FACTORING_EXPORT",
                            "AUTH_INVOICE_ADMIN_SETTINGS",
                            "AUTH_PROJECT_MANAGER",
                            "AUTH_PROJECT_MANAGER_COMPANY",
                            "AUTH_DEPARTMENT_REPORT",
                            "AUTH_CREATE_PROJECT",
                            "AUTH_PROJECT_EXTRA_COSTS",
                            "AUTH_PROJECT_INFO",
                            "AUTH_PROJECT_ADMIN_SETTINGS",
                            "AUTH_PROJECT_OWN_PROJECT_RESULT_REPORT",
                            "AUTH_PROJECT_CONTROL_FORMS",
                            "AUTH_PRODUCT_ADMIN",
                            "REPORT_ADMINISTRATOR",
                            "REPORT_AUTHOR",
                            "AUTH_COMPANY_WAGE_ADMIN",
                            "AUTH_WAGE_ADMIN_SETTINGS",
                            "AUTH_WAGE_INFORMATION",
                            "AUTH_TASK_ADMIN",
                            "AUTH_HOURS_COMPANY",
                            "AUTH_HOUR_STATISTICS_COMPANY",
                            "AUTH_HOURLIST",
                            "AUTH_HOURLIST_SETTINGS",
                            "AUTH_HOLYDAY_PLAN",
                            "AUTH_TRAVEL_REPORTS_COMPANY",
                            "AUTH_TRAVEL_REPORT",
                            "AUTH_TRAVEL_EXPENSE_ADMIN_SETTINGS",
                            "AUTH_VOUCHER_EXPORT",
                            "AUTH_INBOX_VOUCHER",
                            "AUTH_INCOMPLETE_VOUCHERS",
                            "AUTH_INCOMING_INVOICE",
                            "AUTH_VOUCHER_SETTINGS",
                            "AUTH_BANK_RECONCILIATION",
                            "AUTH_VAT_REPORT",
                            "AUTH_SICKNESS_REIMBURSEMENT",
                            "AUTH_REGISTER_INCOME",
                            "AUTH_ADVANCED_VOUCHER",
                            "AUTH_VOUCHER_IMPORT",
                            "AUTH_PRODUCT_INVOICE",
                            "AUTH_CUSTOMS_DECLARATION",
                            "AUTH_VOUCHER_AUTOMATION",
                            "AUTH_REMIT_FILES_VOUCHER_OVERVIEW",
                            "YEAR_END_REPORT_ADMINISTRATOR"
                        ]
                    }
                }
            }
        },
        "DatabaseComponentAuthorizationManager": {
            "type": "object"
        },
        "DatabaseComponentAuthorizationManagerRequestlogModel": {
            "type": "object"
        },
        "RequestlogModel": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "tripletexEmployeeId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "time": {
                    "type": "string",
                    "readOnly": true
                },
                "requestUri": {
                    "type": "string",
                    "readOnly": true
                },
                "queryString": {
                    "type": "string",
                    "readOnly": true
                },
                "method": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperListClientAccessTemplate": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientAccessTemplate"
                    }
                }
            }
        },
        "AccountantClientAccessCategoryModel": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "GENERAL",
                        "ACCOUNTING",
                        "VOUCHER_APPROVAL",
                        "BANK",
                        "COMPANY",
                        "CUSTOMER",
                        "DOCUMENT",
                        "INVOICING",
                        "PROJECT",
                        "PRODUCT",
                        "REPORT",
                        "WAGE",
                        "TASK",
                        "HOUR_LIST",
                        "TRAVEL_REPORT",
                        "VOUCHER",
                        "YEAR_END_REPORT"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "accessLevel": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SOME",
                        "ALL"
                    ]
                },
                "hasReceivedAggregatedAccess": {
                    "type": "boolean"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountantClientAccessRole"
                    }
                }
            }
        },
        "AccountantClientAccessModel": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employeeName": {
                    "type": "string"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountantClientAccessCategoryModel"
                    }
                }
            }
        },
        "AccountantClientAccessRole": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "ROLE_ADMINISTRATOR",
                        "AUTH_READ_ONLY",
                        "AUTH_LOGIN",
                        "AUTH_ALL_VOUCHERS",
                        "AUTH_COMPANY_ACCOUNTING_REPORTS",
                        "AUTH_ACCOUNTING_SETTINGS",
                        "AUTH_COMPANY_RESULT_BUDGET",
                        "AUTH_COMPANY_CUSTOMER_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_VENDOR_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_EMPLOYEE_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_ASSET_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_ATTESTOR",
                        "AUTH_DIRECT_REMIT_ADMIN",
                        "AUTH_DIRECT_REMIT_LIGHT",
                        "AUTH_MANAGE_BANK_ACCOUNT_NUMBERS",
                        "AUTH_DIRECT_REMIT_CREATE_NEW",
                        "AUTH_DIRECT_REMIT_ADMIN_ZTL",
                        "AUTH_COMPANY_ADMIN",
                        "AUTH_EMPLOYEE_INFO",
                        "AUTH_COMPANY_EMPLOYEE_ADMIN",
                        "AUTH_CUSTOMER_ADMIN",
                        "AUTH_CUSTOMER_INFO",
                        "AUTH_CREATE_CUSTOMER",
                        "AUTH_INBOX_ARCHIVE_ALL_EMPLOYEES",
                        "AUTH_ARCHIVE_READ",
                        "AUTH_ARCHIVE_WRITE",
                        "AUTH_ARCHIVE_ADMIN",
                        "AUTH_CREATE_NOTE",
                        "AUTH_CREATE_NOTE_TEMPLATE",
                        "AUTH_INVOICING",
                        "AUTH_OFFER_ADMIN",
                        "AUTH_ORDER_ADMIN",
                        "AUTH_CREATE_OFFER",
                        "AUTH_CREATE_ORDER",
                        "AUTH_FACTORING_EXPORT",
                        "AUTH_INVOICE_ADMIN_SETTINGS",
                        "AUTH_PROJECT_MANAGER",
                        "AUTH_PROJECT_MANAGER_COMPANY",
                        "AUTH_DEPARTMENT_REPORT",
                        "AUTH_CREATE_PROJECT",
                        "AUTH_PROJECT_EXTRA_COSTS",
                        "AUTH_PROJECT_INFO",
                        "AUTH_PROJECT_ADMIN_SETTINGS",
                        "AUTH_PROJECT_OWN_PROJECT_RESULT_REPORT",
                        "AUTH_PROJECT_CONTROL_FORMS",
                        "AUTH_PRODUCT_ADMIN",
                        "REPORT_ADMINISTRATOR",
                        "REPORT_AUTHOR",
                        "AUTH_COMPANY_WAGE_ADMIN",
                        "AUTH_WAGE_ADMIN_SETTINGS",
                        "AUTH_WAGE_INFORMATION",
                        "AUTH_TASK_ADMIN",
                        "AUTH_HOURS_COMPANY",
                        "AUTH_HOUR_STATISTICS_COMPANY",
                        "AUTH_HOURLIST",
                        "AUTH_HOURLIST_SETTINGS",
                        "AUTH_HOLYDAY_PLAN",
                        "AUTH_TRAVEL_REPORTS_COMPANY",
                        "AUTH_TRAVEL_REPORT",
                        "AUTH_TRAVEL_EXPENSE_ADMIN_SETTINGS",
                        "AUTH_VOUCHER_EXPORT",
                        "AUTH_INBOX_VOUCHER",
                        "AUTH_INCOMPLETE_VOUCHERS",
                        "AUTH_INCOMING_INVOICE",
                        "AUTH_VOUCHER_SETTINGS",
                        "AUTH_BANK_RECONCILIATION",
                        "AUTH_VAT_REPORT",
                        "AUTH_SICKNESS_REIMBURSEMENT",
                        "AUTH_REGISTER_INCOME",
                        "AUTH_ADVANCED_VOUCHER",
                        "AUTH_VOUCHER_IMPORT",
                        "AUTH_PRODUCT_INVOICE",
                        "AUTH_CUSTOMS_DECLARATION",
                        "AUTH_VOUCHER_AUTOMATION",
                        "AUTH_REMIT_FILES_VOUCHER_OVERVIEW",
                        "YEAR_END_REPORT_ADMINISTRATOR"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "additionalInformation": {
                    "type": "string"
                },
                "hasRequiredModule": {
                    "type": "boolean"
                },
                "hasReceivedAccess": {
                    "type": "boolean"
                },
                "hasAccess": {
                    "type": "boolean"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ROLE_ADMINISTRATOR",
                            "AUTH_READ_ONLY",
                            "AUTH_LOGIN",
                            "AUTH_ALL_VOUCHERS",
                            "AUTH_COMPANY_ACCOUNTING_REPORTS",
                            "AUTH_ACCOUNTING_SETTINGS",
                            "AUTH_COMPANY_RESULT_BUDGET",
                            "AUTH_COMPANY_CUSTOMER_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_VENDOR_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_EMPLOYEE_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_ASSET_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_ATTESTOR",
                            "AUTH_DIRECT_REMIT_ADMIN",
                            "AUTH_DIRECT_REMIT_LIGHT",
                            "AUTH_MANAGE_BANK_ACCOUNT_NUMBERS",
                            "AUTH_DIRECT_REMIT_CREATE_NEW",
                            "AUTH_DIRECT_REMIT_ADMIN_ZTL",
                            "AUTH_COMPANY_ADMIN",
                            "AUTH_EMPLOYEE_INFO",
                            "AUTH_COMPANY_EMPLOYEE_ADMIN",
                            "AUTH_CUSTOMER_ADMIN",
                            "AUTH_CUSTOMER_INFO",
                            "AUTH_CREATE_CUSTOMER",
                            "AUTH_INBOX_ARCHIVE_ALL_EMPLOYEES",
                            "AUTH_ARCHIVE_READ",
                            "AUTH_ARCHIVE_WRITE",
                            "AUTH_ARCHIVE_ADMIN",
                            "AUTH_CREATE_NOTE",
                            "AUTH_CREATE_NOTE_TEMPLATE",
                            "AUTH_INVOICING",
                            "AUTH_OFFER_ADMIN",
                            "AUTH_ORDER_ADMIN",
                            "AUTH_CREATE_OFFER",
                            "AUTH_CREATE_ORDER",
                            "AUTH_FACTORING_EXPORT",
                            "AUTH_INVOICE_ADMIN_SETTINGS",
                            "AUTH_PROJECT_MANAGER",
                            "AUTH_PROJECT_MANAGER_COMPANY",
                            "AUTH_DEPARTMENT_REPORT",
                            "AUTH_CREATE_PROJECT",
                            "AUTH_PROJECT_EXTRA_COSTS",
                            "AUTH_PROJECT_INFO",
                            "AUTH_PROJECT_ADMIN_SETTINGS",
                            "AUTH_PROJECT_OWN_PROJECT_RESULT_REPORT",
                            "AUTH_PROJECT_CONTROL_FORMS",
                            "AUTH_PRODUCT_ADMIN",
                            "REPORT_ADMINISTRATOR",
                            "REPORT_AUTHOR",
                            "AUTH_COMPANY_WAGE_ADMIN",
                            "AUTH_WAGE_ADMIN_SETTINGS",
                            "AUTH_WAGE_INFORMATION",
                            "AUTH_TASK_ADMIN",
                            "AUTH_HOURS_COMPANY",
                            "AUTH_HOUR_STATISTICS_COMPANY",
                            "AUTH_HOURLIST",
                            "AUTH_HOURLIST_SETTINGS",
                            "AUTH_HOLYDAY_PLAN",
                            "AUTH_TRAVEL_REPORTS_COMPANY",
                            "AUTH_TRAVEL_REPORT",
                            "AUTH_TRAVEL_EXPENSE_ADMIN_SETTINGS",
                            "AUTH_VOUCHER_EXPORT",
                            "AUTH_INBOX_VOUCHER",
                            "AUTH_INCOMPLETE_VOUCHERS",
                            "AUTH_INCOMING_INVOICE",
                            "AUTH_VOUCHER_SETTINGS",
                            "AUTH_BANK_RECONCILIATION",
                            "AUTH_VAT_REPORT",
                            "AUTH_SICKNESS_REIMBURSEMENT",
                            "AUTH_REGISTER_INCOME",
                            "AUTH_ADVANCED_VOUCHER",
                            "AUTH_VOUCHER_IMPORT",
                            "AUTH_PRODUCT_INVOICE",
                            "AUTH_CUSTOMS_DECLARATION",
                            "AUTH_VOUCHER_AUTOMATION",
                            "AUTH_REMIT_FILES_VOUCHER_OVERVIEW",
                            "YEAR_END_REPORT_ADMINISTRATOR"
                        ]
                    }
                }
            }
        },
        "ResponseWrapperListAccountantClientAccessModel": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountantClientAccessModel"
                    }
                }
            }
        },
        "EmployeeRoleModelDTO": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "hasAccess": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "ROLE_ADMINISTRATOR",
                        "AUTH_READ_ONLY",
                        "AUTH_LOGIN",
                        "AUTH_ALL_VOUCHERS",
                        "AUTH_COMPANY_ACCOUNTING_REPORTS",
                        "AUTH_ACCOUNTING_SETTINGS",
                        "AUTH_COMPANY_RESULT_BUDGET",
                        "AUTH_COMPANY_CUSTOMER_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_VENDOR_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_EMPLOYEE_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_ASSET_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_ATTESTOR",
                        "AUTH_DIRECT_REMIT_ADMIN",
                        "AUTH_DIRECT_REMIT_LIGHT",
                        "AUTH_MANAGE_BANK_ACCOUNT_NUMBERS",
                        "AUTH_DIRECT_REMIT_CREATE_NEW",
                        "AUTH_DIRECT_REMIT_ADMIN_ZTL",
                        "AUTH_COMPANY_ADMIN",
                        "AUTH_EMPLOYEE_INFO",
                        "AUTH_COMPANY_EMPLOYEE_ADMIN",
                        "AUTH_CUSTOMER_ADMIN",
                        "AUTH_CUSTOMER_INFO",
                        "AUTH_CREATE_CUSTOMER",
                        "AUTH_INBOX_ARCHIVE_ALL_EMPLOYEES",
                        "AUTH_ARCHIVE_READ",
                        "AUTH_ARCHIVE_WRITE",
                        "AUTH_ARCHIVE_ADMIN",
                        "AUTH_CREATE_NOTE",
                        "AUTH_CREATE_NOTE_TEMPLATE",
                        "AUTH_INVOICING",
                        "AUTH_OFFER_ADMIN",
                        "AUTH_ORDER_ADMIN",
                        "AUTH_CREATE_OFFER",
                        "AUTH_CREATE_ORDER",
                        "AUTH_FACTORING_EXPORT",
                        "AUTH_INVOICE_ADMIN_SETTINGS",
                        "AUTH_PROJECT_MANAGER",
                        "AUTH_PROJECT_MANAGER_COMPANY",
                        "AUTH_DEPARTMENT_REPORT",
                        "AUTH_CREATE_PROJECT",
                        "AUTH_PROJECT_EXTRA_COSTS",
                        "AUTH_PROJECT_INFO",
                        "AUTH_PROJECT_ADMIN_SETTINGS",
                        "AUTH_PROJECT_OWN_PROJECT_RESULT_REPORT",
                        "AUTH_PROJECT_CONTROL_FORMS",
                        "AUTH_PRODUCT_ADMIN",
                        "REPORT_ADMINISTRATOR",
                        "REPORT_AUTHOR",
                        "AUTH_COMPANY_WAGE_ADMIN",
                        "AUTH_WAGE_ADMIN_SETTINGS",
                        "AUTH_WAGE_INFORMATION",
                        "AUTH_TASK_ADMIN",
                        "AUTH_HOURS_COMPANY",
                        "AUTH_HOUR_STATISTICS_COMPANY",
                        "AUTH_HOURLIST",
                        "AUTH_HOURLIST_SETTINGS",
                        "AUTH_HOLYDAY_PLAN",
                        "AUTH_TRAVEL_REPORTS_COMPANY",
                        "AUTH_TRAVEL_REPORT",
                        "AUTH_TRAVEL_EXPENSE_ADMIN_SETTINGS",
                        "AUTH_VOUCHER_EXPORT",
                        "AUTH_INBOX_VOUCHER",
                        "AUTH_INCOMPLETE_VOUCHERS",
                        "AUTH_INCOMING_INVOICE",
                        "AUTH_VOUCHER_SETTINGS",
                        "AUTH_BANK_RECONCILIATION",
                        "AUTH_VAT_REPORT",
                        "AUTH_SICKNESS_REIMBURSEMENT",
                        "AUTH_REGISTER_INCOME",
                        "AUTH_ADVANCED_VOUCHER",
                        "AUTH_VOUCHER_IMPORT",
                        "AUTH_PRODUCT_INVOICE",
                        "AUTH_CUSTOMS_DECLARATION",
                        "AUTH_VOUCHER_AUTOMATION",
                        "AUTH_REMIT_FILES_VOUCHER_OVERVIEW",
                        "YEAR_END_REPORT_ADMINISTRATOR"
                    ]
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "GENERAL",
                        "ACCOUNTING",
                        "VOUCHER_APPROVAL",
                        "BANK",
                        "COMPANY",
                        "CUSTOMER",
                        "DOCUMENT",
                        "INVOICING",
                        "PROJECT",
                        "PRODUCT",
                        "REPORT",
                        "WAGE",
                        "TASK",
                        "HOUR_LIST",
                        "TRAVEL_REPORT",
                        "VOUCHER",
                        "YEAR_END_REPORT"
                    ]
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListRoleCategoryContainerDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleCategoryContainerDTO"
                    }
                }
            }
        },
        "RoleCategoryContainerDTO": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "roleContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RoleContainerDTO"
                    }
                },
                "hidden": {
                    "type": "boolean"
                }
            }
        },
        "RoleContainerDTO": {
            "type": "object",
            "properties": {
                "container": {
                    "type": "string",
                    "enum": [
                        "ROLE_ADMINISTRATOR",
                        "AUTH_READ_ONLY",
                        "AUTH_LOGIN",
                        "AUTH_ALL_VOUCHERS",
                        "AUTH_COMPANY_ACCOUNTING_REPORTS",
                        "AUTH_ACCOUNTING_SETTINGS",
                        "AUTH_COMPANY_RESULT_BUDGET",
                        "AUTH_COMPANY_CUSTOMER_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_VENDOR_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_EMPLOYEE_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_ASSET_ACCOUNTING_REPORTS",
                        "AUTH_COMPANY_ATTESTOR",
                        "AUTH_DIRECT_REMIT_ADMIN",
                        "AUTH_DIRECT_REMIT_LIGHT",
                        "AUTH_MANAGE_BANK_ACCOUNT_NUMBERS",
                        "AUTH_DIRECT_REMIT_CREATE_NEW",
                        "AUTH_DIRECT_REMIT_ADMIN_ZTL",
                        "AUTH_COMPANY_ADMIN",
                        "AUTH_EMPLOYEE_INFO",
                        "AUTH_COMPANY_EMPLOYEE_ADMIN",
                        "AUTH_CUSTOMER_ADMIN",
                        "AUTH_CUSTOMER_INFO",
                        "AUTH_CREATE_CUSTOMER",
                        "AUTH_INBOX_ARCHIVE_ALL_EMPLOYEES",
                        "AUTH_ARCHIVE_READ",
                        "AUTH_ARCHIVE_WRITE",
                        "AUTH_ARCHIVE_ADMIN",
                        "AUTH_CREATE_NOTE",
                        "AUTH_CREATE_NOTE_TEMPLATE",
                        "AUTH_INVOICING",
                        "AUTH_OFFER_ADMIN",
                        "AUTH_ORDER_ADMIN",
                        "AUTH_CREATE_OFFER",
                        "AUTH_CREATE_ORDER",
                        "AUTH_FACTORING_EXPORT",
                        "AUTH_INVOICE_ADMIN_SETTINGS",
                        "AUTH_PROJECT_MANAGER",
                        "AUTH_PROJECT_MANAGER_COMPANY",
                        "AUTH_DEPARTMENT_REPORT",
                        "AUTH_CREATE_PROJECT",
                        "AUTH_PROJECT_EXTRA_COSTS",
                        "AUTH_PROJECT_INFO",
                        "AUTH_PROJECT_ADMIN_SETTINGS",
                        "AUTH_PROJECT_OWN_PROJECT_RESULT_REPORT",
                        "AUTH_PROJECT_CONTROL_FORMS",
                        "AUTH_PRODUCT_ADMIN",
                        "REPORT_ADMINISTRATOR",
                        "REPORT_AUTHOR",
                        "AUTH_COMPANY_WAGE_ADMIN",
                        "AUTH_WAGE_ADMIN_SETTINGS",
                        "AUTH_WAGE_INFORMATION",
                        "AUTH_TASK_ADMIN",
                        "AUTH_HOURS_COMPANY",
                        "AUTH_HOUR_STATISTICS_COMPANY",
                        "AUTH_HOURLIST",
                        "AUTH_HOURLIST_SETTINGS",
                        "AUTH_HOLYDAY_PLAN",
                        "AUTH_TRAVEL_REPORTS_COMPANY",
                        "AUTH_TRAVEL_REPORT",
                        "AUTH_TRAVEL_EXPENSE_ADMIN_SETTINGS",
                        "AUTH_VOUCHER_EXPORT",
                        "AUTH_INBOX_VOUCHER",
                        "AUTH_INCOMPLETE_VOUCHERS",
                        "AUTH_INCOMING_INVOICE",
                        "AUTH_VOUCHER_SETTINGS",
                        "AUTH_BANK_RECONCILIATION",
                        "AUTH_VAT_REPORT",
                        "AUTH_SICKNESS_REIMBURSEMENT",
                        "AUTH_REGISTER_INCOME",
                        "AUTH_ADVANCED_VOUCHER",
                        "AUTH_VOUCHER_IMPORT",
                        "AUTH_PRODUCT_INVOICE",
                        "AUTH_CUSTOMS_DECLARATION",
                        "AUTH_VOUCHER_AUTOMATION",
                        "AUTH_REMIT_FILES_VOUCHER_OVERVIEW",
                        "YEAR_END_REPORT_ADMINISTRATOR"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "clientHasRequirements": {
                    "type": "boolean"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ROLE_ADMINISTRATOR",
                            "AUTH_READ_ONLY",
                            "AUTH_LOGIN",
                            "AUTH_ALL_VOUCHERS",
                            "AUTH_COMPANY_ACCOUNTING_REPORTS",
                            "AUTH_ACCOUNTING_SETTINGS",
                            "AUTH_COMPANY_RESULT_BUDGET",
                            "AUTH_COMPANY_CUSTOMER_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_VENDOR_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_EMPLOYEE_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_ASSET_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_ATTESTOR",
                            "AUTH_DIRECT_REMIT_ADMIN",
                            "AUTH_DIRECT_REMIT_LIGHT",
                            "AUTH_MANAGE_BANK_ACCOUNT_NUMBERS",
                            "AUTH_DIRECT_REMIT_CREATE_NEW",
                            "AUTH_DIRECT_REMIT_ADMIN_ZTL",
                            "AUTH_COMPANY_ADMIN",
                            "AUTH_EMPLOYEE_INFO",
                            "AUTH_COMPANY_EMPLOYEE_ADMIN",
                            "AUTH_CUSTOMER_ADMIN",
                            "AUTH_CUSTOMER_INFO",
                            "AUTH_CREATE_CUSTOMER",
                            "AUTH_INBOX_ARCHIVE_ALL_EMPLOYEES",
                            "AUTH_ARCHIVE_READ",
                            "AUTH_ARCHIVE_WRITE",
                            "AUTH_ARCHIVE_ADMIN",
                            "AUTH_CREATE_NOTE",
                            "AUTH_CREATE_NOTE_TEMPLATE",
                            "AUTH_INVOICING",
                            "AUTH_OFFER_ADMIN",
                            "AUTH_ORDER_ADMIN",
                            "AUTH_CREATE_OFFER",
                            "AUTH_CREATE_ORDER",
                            "AUTH_FACTORING_EXPORT",
                            "AUTH_INVOICE_ADMIN_SETTINGS",
                            "AUTH_PROJECT_MANAGER",
                            "AUTH_PROJECT_MANAGER_COMPANY",
                            "AUTH_DEPARTMENT_REPORT",
                            "AUTH_CREATE_PROJECT",
                            "AUTH_PROJECT_EXTRA_COSTS",
                            "AUTH_PROJECT_INFO",
                            "AUTH_PROJECT_ADMIN_SETTINGS",
                            "AUTH_PROJECT_OWN_PROJECT_RESULT_REPORT",
                            "AUTH_PROJECT_CONTROL_FORMS",
                            "AUTH_PRODUCT_ADMIN",
                            "REPORT_ADMINISTRATOR",
                            "REPORT_AUTHOR",
                            "AUTH_COMPANY_WAGE_ADMIN",
                            "AUTH_WAGE_ADMIN_SETTINGS",
                            "AUTH_WAGE_INFORMATION",
                            "AUTH_TASK_ADMIN",
                            "AUTH_HOURS_COMPANY",
                            "AUTH_HOUR_STATISTICS_COMPANY",
                            "AUTH_HOURLIST",
                            "AUTH_HOURLIST_SETTINGS",
                            "AUTH_HOLYDAY_PLAN",
                            "AUTH_TRAVEL_REPORTS_COMPANY",
                            "AUTH_TRAVEL_REPORT",
                            "AUTH_TRAVEL_EXPENSE_ADMIN_SETTINGS",
                            "AUTH_VOUCHER_EXPORT",
                            "AUTH_INBOX_VOUCHER",
                            "AUTH_INCOMPLETE_VOUCHERS",
                            "AUTH_INCOMING_INVOICE",
                            "AUTH_VOUCHER_SETTINGS",
                            "AUTH_BANK_RECONCILIATION",
                            "AUTH_VAT_REPORT",
                            "AUTH_SICKNESS_REIMBURSEMENT",
                            "AUTH_REGISTER_INCOME",
                            "AUTH_ADVANCED_VOUCHER",
                            "AUTH_VOUCHER_IMPORT",
                            "AUTH_PRODUCT_INVOICE",
                            "AUTH_CUSTOMS_DECLARATION",
                            "AUTH_VOUCHER_AUTOMATION",
                            "AUTH_REMIT_FILES_VOUCHER_OVERVIEW",
                            "YEAR_END_REPORT_ADMINISTRATOR"
                        ]
                    }
                },
                "reversedDependencies": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "ROLE_ADMINISTRATOR",
                            "AUTH_READ_ONLY",
                            "AUTH_LOGIN",
                            "AUTH_ALL_VOUCHERS",
                            "AUTH_COMPANY_ACCOUNTING_REPORTS",
                            "AUTH_ACCOUNTING_SETTINGS",
                            "AUTH_COMPANY_RESULT_BUDGET",
                            "AUTH_COMPANY_CUSTOMER_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_VENDOR_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_EMPLOYEE_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_ASSET_ACCOUNTING_REPORTS",
                            "AUTH_COMPANY_ATTESTOR",
                            "AUTH_DIRECT_REMIT_ADMIN",
                            "AUTH_DIRECT_REMIT_LIGHT",
                            "AUTH_MANAGE_BANK_ACCOUNT_NUMBERS",
                            "AUTH_DIRECT_REMIT_CREATE_NEW",
                            "AUTH_DIRECT_REMIT_ADMIN_ZTL",
                            "AUTH_COMPANY_ADMIN",
                            "AUTH_EMPLOYEE_INFO",
                            "AUTH_COMPANY_EMPLOYEE_ADMIN",
                            "AUTH_CUSTOMER_ADMIN",
                            "AUTH_CUSTOMER_INFO",
                            "AUTH_CREATE_CUSTOMER",
                            "AUTH_INBOX_ARCHIVE_ALL_EMPLOYEES",
                            "AUTH_ARCHIVE_READ",
                            "AUTH_ARCHIVE_WRITE",
                            "AUTH_ARCHIVE_ADMIN",
                            "AUTH_CREATE_NOTE",
                            "AUTH_CREATE_NOTE_TEMPLATE",
                            "AUTH_INVOICING",
                            "AUTH_OFFER_ADMIN",
                            "AUTH_ORDER_ADMIN",
                            "AUTH_CREATE_OFFER",
                            "AUTH_CREATE_ORDER",
                            "AUTH_FACTORING_EXPORT",
                            "AUTH_INVOICE_ADMIN_SETTINGS",
                            "AUTH_PROJECT_MANAGER",
                            "AUTH_PROJECT_MANAGER_COMPANY",
                            "AUTH_DEPARTMENT_REPORT",
                            "AUTH_CREATE_PROJECT",
                            "AUTH_PROJECT_EXTRA_COSTS",
                            "AUTH_PROJECT_INFO",
                            "AUTH_PROJECT_ADMIN_SETTINGS",
                            "AUTH_PROJECT_OWN_PROJECT_RESULT_REPORT",
                            "AUTH_PROJECT_CONTROL_FORMS",
                            "AUTH_PRODUCT_ADMIN",
                            "REPORT_ADMINISTRATOR",
                            "REPORT_AUTHOR",
                            "AUTH_COMPANY_WAGE_ADMIN",
                            "AUTH_WAGE_ADMIN_SETTINGS",
                            "AUTH_WAGE_INFORMATION",
                            "AUTH_TASK_ADMIN",
                            "AUTH_HOURS_COMPANY",
                            "AUTH_HOUR_STATISTICS_COMPANY",
                            "AUTH_HOURLIST",
                            "AUTH_HOURLIST_SETTINGS",
                            "AUTH_HOLYDAY_PLAN",
                            "AUTH_TRAVEL_REPORTS_COMPANY",
                            "AUTH_TRAVEL_REPORT",
                            "AUTH_TRAVEL_EXPENSE_ADMIN_SETTINGS",
                            "AUTH_VOUCHER_EXPORT",
                            "AUTH_INBOX_VOUCHER",
                            "AUTH_INCOMPLETE_VOUCHERS",
                            "AUTH_INCOMING_INVOICE",
                            "AUTH_VOUCHER_SETTINGS",
                            "AUTH_BANK_RECONCILIATION",
                            "AUTH_VAT_REPORT",
                            "AUTH_SICKNESS_REIMBURSEMENT",
                            "AUTH_REGISTER_INCOME",
                            "AUTH_ADVANCED_VOUCHER",
                            "AUTH_VOUCHER_IMPORT",
                            "AUTH_PRODUCT_INVOICE",
                            "AUTH_CUSTOMS_DECLARATION",
                            "AUTH_VOUCHER_AUTOMATION",
                            "AUTH_REMIT_FILES_VOUCHER_OVERVIEW",
                            "YEAR_END_REPORT_ADMINISTRATOR"
                        ]
                    }
                },
                "hidden": {
                    "type": "boolean"
                }
            }
        },
        "AccountantCustomer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "ListResponseAccountantCustomer": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AccountantCustomer"
                    }
                }
            }
        },
        "ResponseWrapperClientAccessTemplate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ClientAccessTemplate"
                }
            }
        },
        "ListResponseClientAccessTemplate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ClientAccessTemplate"
                    }
                }
            }
        },
        "ClientInbox": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "authorized": {
                    "type": "boolean"
                },
                "inboxCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListClientInbox": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientInbox"
                    }
                }
            }
        },
        "ClientForReview": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "authorized": {
                    "type": "boolean"
                },
                "forReviewCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListClientForReview": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientForReview"
                    }
                }
            }
        },
        "ClientForApproval": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "authorized": {
                    "type": "boolean"
                },
                "forApprovalCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListClientForApproval": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientForApproval"
                    }
                }
            }
        },
        "ClientForRemit": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "authorized": {
                    "type": "boolean"
                },
                "forPaymentCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListClientForRemit": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ClientForRemit"
                    }
                }
            }
        },
        "AccountantClient": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "ListResponseAccountantClient": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AccountantClient"
                    }
                }
            }
        },
        "ResponseWrapperListTodoListHarmonization": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListHarmonization"
                    }
                }
            }
        },
        "TodoListExpandedDetail": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string",
                    "enum": [
                        "RECONCILIATION_BANK",
                        "RECONCILIATION_LEDGER",
                        "RECONCILIATION_CUSTOMER",
                        "RECONCILIATION_VENDOR",
                        "RECONCILIATION_WAGE",
                        "AMELDING_EMPLOYMENT",
                        "AMELDING_WAGE_TRANSACTION",
                        "WAGE_TRANSACTION_PAID_MANDATORY_DEDUCTION",
                        "WAGE_TRANSACTION_PAID_TAX_DEDUCTION",
                        "WAGE_TRANSACTION_PAID_PAYROLL_TAX"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "TodoListHarmonization": {
            "type": "object",
            "properties": {
                "itemIdentifier": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "clientCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountManagerName": {
                    "type": "string"
                },
                "accountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customAccountManagerName": {
                    "type": "string"
                },
                "customAccountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "customStatus": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "customDueDate": {
                    "type": "string",
                    "format": "date"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date"
                },
                "period": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "expandedDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListExpandedDetail"
                    }
                }
            }
        },
        "TodoListItemStatus": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "OVERDUE",
                        "NOT_STARTED",
                        "INCOMPLETE",
                        "COMPLETED",
                        "NOT_APPLICABLE"
                    ]
                },
                "message": {
                    "type": "string"
                },
                "lastUpdatedBy": {
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "ResponseWrapperListTodoListVat": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListVat"
                    }
                }
            }
        },
        "TodoListVat": {
            "type": "object",
            "properties": {
                "itemIdentifier": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "clientCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountManagerName": {
                    "type": "string"
                },
                "accountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customAccountManagerName": {
                    "type": "string"
                },
                "customAccountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "customStatus": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "customDueDate": {
                    "type": "string",
                    "format": "date"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date"
                },
                "period": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListTodoListAmelding": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListAmelding"
                    }
                }
            }
        },
        "TodoListAmelding": {
            "type": "object",
            "properties": {
                "itemIdentifier": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "clientCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountManagerName": {
                    "type": "string"
                },
                "accountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customAccountManagerName": {
                    "type": "string"
                },
                "customAccountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "customStatus": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "customDueDate": {
                    "type": "string",
                    "format": "date"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date"
                },
                "period": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "expandedDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListExpandedDetail"
                    }
                }
            }
        },
        "ResponseWrapperListTodoListWageTransaction": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListWageTransaction"
                    }
                }
            }
        },
        "TodoListWageTransaction": {
            "type": "object",
            "properties": {
                "itemIdentifier": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "clientCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountManagerName": {
                    "type": "string"
                },
                "accountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customAccountManagerName": {
                    "type": "string"
                },
                "customAccountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "customStatus": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "customDueDate": {
                    "type": "string",
                    "format": "date"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date"
                },
                "period": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "expandedDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListExpandedDetail"
                    }
                }
            }
        },
        "ResponseWrapperListTodoListPeriodOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListPeriodOverview"
                    }
                }
            }
        },
        "TodoListPeriodOverview": {
            "type": "object",
            "properties": {
                "itemIdentifier": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "clientCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountManagerName": {
                    "type": "string"
                },
                "accountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customAccountManagerName": {
                    "type": "string"
                },
                "customAccountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "customStatus": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "customDueDate": {
                    "type": "string",
                    "format": "date"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date"
                },
                "period": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListTodoListAnnualAccounts": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TodoListAnnualAccounts"
                    }
                }
            }
        },
        "TodoListAnnualAccounts": {
            "type": "object",
            "properties": {
                "itemIdentifier": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "clientName": {
                    "type": "string"
                },
                "clientCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountManagerName": {
                    "type": "string"
                },
                "accountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customAccountManagerName": {
                    "type": "string"
                },
                "customAccountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "customStatus": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "dueDate": {
                    "type": "string",
                    "format": "date"
                },
                "customDueDate": {
                    "type": "string",
                    "format": "date"
                },
                "periodStart": {
                    "type": "string",
                    "format": "date"
                },
                "period": {
                    "type": "string"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "TodoListSingleChanges": {
            "type": "object",
            "required": [
                "customerId",
                "originalDate",
                "periodStart",
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "CUSTOM",
                        "HARMONIZATION",
                        "VAT_RETURNS",
                        "AMELDING",
                        "WAGE_TRANSACTIONS",
                        "PERIOD_OVERVIEW",
                        "ANNUAL_ACCOUNTS"
                    ]
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "periodStart": {
                    "type": "string",
                    "description": "The start period"
                },
                "originalDate": {
                    "type": "string",
                    "description": "The original date"
                },
                "customDate": {
                    "type": "string",
                    "description": "The customized date"
                },
                "originalAccountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customAccountManagerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "originalStatus": {
                    "$ref": "#/definitions/TodoListItemStatus"
                },
                "customStatus": {
                    "$ref": "#/definitions/TodoListItemStatus"
                }
            }
        },
        "ListResponseCompany": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Company"
                    }
                }
            }
        },
        "ListResponseTodoListComment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TodoListComment"
                    }
                }
            }
        },
        "TodoListComment": {
            "type": "object",
            "required": [
                "comment",
                "customerId",
                "employee",
                "periodStart",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "type": {
                    "type": "string"
                },
                "periodStart": {
                    "type": "string"
                },
                "comment": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1024
                },
                "createdAt": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperTodoListComment": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TodoListComment"
                }
            }
        },
        "ApiConsumer": {
            "type": "object",
            "required": [
                "consumerName",
                "emails"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "consumerName": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 100
                },
                "emails": {
                    "type": "string",
                    "format": "email"
                }
            }
        },
        "ResponseWrapperApiConsumer": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ApiConsumer"
                }
            }
        },
        "ListResponseApiConsumer": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ApiConsumer"
                    }
                }
            }
        },
        "ConsumerToken": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "apiConsumer": {
                    "$ref": "#/definitions/ApiConsumer"
                },
                "token": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperConsumerToken": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ConsumerToken"
                }
            }
        },
        "ApiError": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "developerMessage": {
                    "type": "string"
                },
                "validationMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ApiValidationMessage"
                    }
                },
                "requestId": {
                    "type": "string"
                }
            }
        },
        "ApiValidationMessage": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "rootId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "EmployeeToken": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "apiConsumer": {
                    "$ref": "#/definitions/ApiConsumer"
                },
                "token": {
                    "type": "string"
                },
                "expirationDate": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperEmployeeToken": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EmployeeToken"
                }
            }
        },
        "EmployeeTokenBundle": {
            "type": "object",
            "properties": {
                "employeeToken": {
                    "$ref": "#/definitions/EmployeeToken"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "robotEmployee": {
                    "$ref": "#/definitions/Employee"
                }
            }
        },
        "ResponseWrapperEmployeeTokenBundle": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EmployeeTokenBundle"
                }
            }
        },
        "MobileAppLogin": {
            "type": "object",
            "required": [
                "appSecret",
                "expirationDate",
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Users username (email)"
                },
                "password": {
                    "type": "string",
                    "description": "Users password"
                },
                "appSecret": {
                    "type": "string",
                    "description": "App secret"
                },
                "mfaCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional mfa auth code"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "Expiration date for the combined token"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional employee ID. Default employee is used when null"
                }
            }
        },
        "VismaConnectMobileAppLogin": {
            "type": "object",
            "required": [
                "accessToken",
                "expirationDate",
                "idToken"
            ],
            "properties": {
                "idToken": {
                    "type": "string",
                    "description": "Id token from Visma Connect"
                },
                "accessToken": {
                    "type": "string",
                    "description": "Access token from Visma Connect"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "Expiration date for the combined token"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional employee ID. Default employee is used when null"
                }
            }
        },
        "EmployeeCompanyDTO": {
            "type": "object",
            "properties": {
                "isDefault": {
                    "type": "boolean"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                }
            }
        },
        "ListResponseEmployeeCompanyDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/EmployeeCompanyDTO"
                    }
                }
            }
        },
        "Credentials": {
            "type": "object",
            "required": [
                "appSecret",
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "description": "Users username (email)"
                },
                "password": {
                    "type": "string",
                    "description": "Users password"
                },
                "appSecret": {
                    "type": "string",
                    "description": "App secret"
                },
                "mfaCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Optional mfa auth code"
                }
            }
        },
        "VismaConnectMobileAppTokens": {
            "type": "object",
            "required": [
                "accessToken",
                "idToken"
            ],
            "properties": {
                "idToken": {
                    "type": "string",
                    "description": "Id token from Visma Connect"
                },
                "accessToken": {
                    "type": "string",
                    "description": "Access token from Visma Connect"
                }
            }
        },
        "AutoLogin": {
            "type": "object",
            "properties": {
                "loginUrl": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperAutoLogin": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AutoLogin"
                }
            }
        },
        "AutoLoginPayloadDTO": {
            "type": "object",
            "properties": {
                "redirectPath": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperVismaConnectLogin": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VismaConnectLogin"
                }
            }
        },
        "VismaConnectLogin": {
            "type": "object",
            "properties": {
                "connectEnabled": {
                    "type": "boolean"
                },
                "connectOnboarded": {
                    "type": "boolean"
                },
                "needsIntroduction": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperSessionToken": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SessionToken"
                }
            }
        },
        "SessionToken": {
            "type": "object",
            "required": [
                "expirationDate",
                "token"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "consumerToken": {
                    "$ref": "#/definitions/ConsumerToken"
                },
                "employeeToken": {
                    "$ref": "#/definitions/EmployeeToken"
                },
                "expirationDate": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "encryptionKey": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "LoggedInUserInfoDTO": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "language": {
                    "type": "string"
                },
                "loggedInWithConnect": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperLoggedInUserInfoDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/LoggedInUserInfoDTO"
                }
            }
        },
        "Client": {
            "type": "object",
            "required": [
                "address",
                "name",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "organizationNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "faxNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "ENK",
                        "AS",
                        "NUF",
                        "ANS",
                        "DA",
                        "PRE",
                        "KS",
                        "ASA",
                        "BBL",
                        "BRL",
                        "GFS",
                        "SPA",
                        "SF",
                        "IKS",
                        "KF_FKF",
                        "FCD",
                        "EOFG",
                        "BA",
                        "STI",
                        "ORG",
                        "ESEK",
                        "SA",
                        "SAM",
                        "BO",
                        "VPFO",
                        "OS",
                        "FLI",
                        "Other"
                    ]
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "accountantOrSimilar": {
                    "type": "boolean",
                    "readOnly": true
                },
                "companyMigration": {
                    "type": "string",
                    "description": "If the company was migrated from another system, this field will contain the name of the system it was migrated from.",
                    "readOnly": true,
                    "enum": [
                        "NONE",
                        "AGRO"
                    ]
                },
                "customerCompanyId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "ListResponseClient": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Client"
                    }
                }
            }
        },
        "ResponseWrapperCompany": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "AltinnCompanyModule": {
            "type": "object",
            "required": [
                "altInnId",
                "altInnPassword"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "altInnId": {
                    "type": "integer",
                    "format": "int32"
                },
                "altInnPassword": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperAltinnCompanyModule": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AltinnCompanyModule"
                }
            }
        },
        "BrregCompanyLookupDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "postalArea": {
                    "type": "string"
                },
                "businessAddress": {
                    "type": "string"
                },
                "businessPostalCode": {
                    "type": "string"
                },
                "businessPostalArea": {
                    "type": "string"
                }
            }
        },
        "ListResponseBrregCompanyLookupDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/BrregCompanyLookupDTO"
                    }
                }
            }
        },
        "CompanyAuthorityDTO": {
            "type": "object",
            "properties": {
                "hasCompanyAuthority": {
                    "type": "string",
                    "enum": [
                        "DENIED",
                        "MANUAL_CHECK",
                        "ACCEPTED"
                    ]
                }
            }
        },
        "ResponseWrapperCompanyAuthorityDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CompanyAuthorityDTO"
                }
            }
        },
        "Modules": {
            "type": "object",
            "properties": {
                "accounting": {
                    "type": "boolean",
                    "description": "Not readable. Only for input."
                },
                "invoice": {
                    "type": "boolean",
                    "description": "Not readable. Only for input."
                },
                "salary": {
                    "type": "boolean",
                    "description": "Not readable. Only for input."
                },
                "salaryStartDate": {
                    "type": "string"
                },
                "project": {
                    "type": "boolean",
                    "description": "Not readable. Only for input."
                },
                "ocr": {
                    "type": "boolean"
                },
                "autoPayOcr": {
                    "type": "boolean"
                },
                "remit": {
                    "type": "boolean"
                },
                "electronicVouchers": {
                    "type": "boolean",
                    "description": "Not readable. Only for input."
                },
                "electro": {
                    "type": "boolean",
                    "description": "Not readable. Only for input."
                },
                "vvs": {
                    "type": "boolean",
                    "description": "Not readable. Only for input."
                },
                "agro": {
                    "type": "boolean"
                },
                "mamut": {
                    "type": "boolean"
                },
                "approveVoucher": {
                    "type": "boolean",
                    "description": "Only readable for now",
                    "readOnly": true
                },
                "moduleprojecteconomy": {
                    "type": "boolean"
                },
                "moduleemployee": {
                    "type": "boolean"
                },
                "moduleContact": {
                    "type": "boolean"
                },
                "modulecustomer": {
                    "type": "boolean"
                },
                "moduledepartment": {
                    "type": "boolean"
                },
                "moduleprojectcategory": {
                    "type": "boolean"
                },
                "moduleinvoice": {
                    "type": "boolean"
                },
                "moduleCurrency": {
                    "type": "boolean"
                },
                "moduleProjectBudget": {
                    "type": "boolean"
                },
                "moduleFactoringVismaFinance": {
                    "type": "string",
                    "enum": [
                        "OFF",
                        "STARTED",
                        "SIGNING_STARTED",
                        "ON",
                        "IN_REVIEW",
                        "DEACTIVATED_FROM_ON",
                        "DEACTIVATED_FROM_OFF",
                        "FAILED",
                        "OPTED_OUT"
                    ]
                },
                "completeMonthlyHourLists": {
                    "type": "boolean"
                },
                "moduleDepartmentAccounting": {
                    "type": "boolean"
                },
                "moduleWageProjectAccounting": {
                    "type": "boolean"
                },
                "moduleProjectAccounting": {
                    "type": "boolean",
                    "description": "read only",
                    "readOnly": true
                },
                "moduleProductAccounting": {
                    "type": "boolean",
                    "description": "read only",
                    "readOnly": true
                },
                "moduleVacationBalance": {
                    "type": "boolean",
                    "description": "read only",
                    "readOnly": true
                },
                "moduleHolydayPlan": {
                    "type": "boolean",
                    "description": "read only",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperModules": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Modules"
                }
            }
        },
        "ListResponseSalesModuleDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalesModuleDTO"
                    }
                }
            }
        },
        "SalesModuleDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "enum": [
                        "MAMUT",
                        "MAMUT_WITH_WAGE",
                        "AGRO_LICENCE",
                        "AGRO_CLIENT",
                        "AGRO_DOCUMENT_CENTER",
                        "AGRO_INVOICE",
                        "AGRO_INVOICE_MIGRATED",
                        "AGRO_WAGE",
                        "NO1TS",
                        "NO1TS_TRAVELREPORT",
                        "NO1TS_ACCOUNTING",
                        "BASIS",
                        "SMART",
                        "PLUSS",
                        "KOMPLETT",
                        "VVS",
                        "ELECTRO",
                        "ACCOUNTING_OFFICE",
                        "SMART_WAGE",
                        "SMART_TIME_TRACKING",
                        "SMART_PROJECT",
                        "OCR",
                        "API_V2",
                        "ELECTRONIC_VOUCHERS",
                        "UP_TO_100_VOUCHERS",
                        "UP_TO_500_VOUCHERS",
                        "UP_TO_1000_VOUCHERS",
                        "UP_TO_2000_VOUCHERS",
                        "UP_TO_3500_VOUCHERS",
                        "UP_TO_5000_VOUCHERS",
                        "UP_TO_10000_VOUCHERS",
                        "UNLIMITED_VOUCHERS",
                        "UP_TO_100_VOUCHERS_AUTOMATION",
                        "UP_TO_500_VOUCHERS_AUTOMATION",
                        "UP_TO_1000_VOUCHERS_AUTOMATION",
                        "UP_TO_2000_VOUCHERS_AUTOMATION",
                        "UP_TO_3500_VOUCHERS_AUTOMATION",
                        "UP_TO_5000_VOUCHERS_AUTOMATION",
                        "UP_TO_10000_VOUCHERS_AUTOMATION",
                        "UNLIMITED_VOUCHERS_AUTOMATION",
                        "LOGISTICS",
                        "MIKRO",
                        "AUTOPLUS_MINI",
                        "AUTOPLUS_MEDIUM",
                        "AUTOPLUS_STOR",
                        "INTEGRATION_PARTNER",
                        "PROJECT",
                        "YEAR_END_REPORTING_ENK",
                        "YEAR_END_REPORTING_AS"
                    ]
                },
                "costStartDate": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperSalesModuleDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesModuleDTO"
                }
            }
        },
        "CompanyRepresentative": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "roleInCompany": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "DAGL",
                        "LEDE",
                        "NEST",
                        "MEDL",
                        "DTPR",
                        "DTSO",
                        "KOMP",
                        "INNH",
                        "SIGN",
                        "SIFE",
                        "SIHV",
                        "PROK",
                        "POFE",
                        "POHV"
                    ]
                },
                "birthdate": {
                    "type": "string",
                    "description": "birthdate",
                    "readOnly": true
                },
                "companyName": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "signatureStatus": {
                    "type": "string",
                    "enum": [
                        "NOT_SIGNED",
                        "PENDING_SIGNATURE",
                        "SIGNED",
                        "NOT_A_SIGNER"
                    ]
                },
                "description": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperContact": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Contact"
                }
            }
        },
        "ListResponseContact": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }
            }
        },
        "ResponseWrapperCountry": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Country"
                }
            }
        },
        "ListResponseCountry": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Country"
                    }
                }
            }
        },
        "ResponseWrapperCurrency": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Currency"
                }
            }
        },
        "ListResponseCurrency": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Currency"
                    }
                }
            }
        },
        "CurrencyExchangeRate": {
            "type": "object",
            "required": [
                "sourceCurrency",
                "targetCurrency"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "targetCurrency": {
                    "$ref": "#/definitions/Currency"
                },
                "sourceCurrency": {
                    "$ref": "#/definitions/Currency"
                },
                "rate": {
                    "type": "number",
                    "minimum": 0
                },
                "source": {
                    "type": "string",
                    "description": "Source of exchange rates, i.e Norges Bank",
                    "enum": [
                        "NORGES_BANK",
                        "HALLONEN"
                    ]
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperCurrencyExchangeRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CurrencyExchangeRate"
                }
            }
        },
        "CurrencyWithRates": {
            "type": "object",
            "required": [
                "code",
                "sourceCurrency",
                "targetCurrencyId"
            ],
            "properties": {
                "targetCurrencyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "factor": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 100
                },
                "isDisabled": {
                    "type": "boolean"
                },
                "sourceCurrency": {
                    "$ref": "#/definitions/Currency"
                },
                "date": {
                    "type": "string"
                },
                "rate": {
                    "type": "number",
                    "minimum": 0
                },
                "source": {
                    "type": "string",
                    "description": "Source of exchange rates, i.e Norges Bank",
                    "enum": [
                        "NORGES_BANK",
                        "HALLONEN"
                    ]
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "ListResponseCurrencyWithRates": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CurrencyWithRates"
                    }
                }
            }
        },
        "ResponseWrapperCustomer": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Customer"
                }
            }
        },
        "ListResponseCustomer": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Customer"
                    }
                }
            }
        },
        "ResponseWrapperCustomerCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CustomerCategory"
                }
            }
        },
        "ListResponseCustomerCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CustomerCategory"
                    }
                }
            }
        },
        "DashboardDTO": {
            "type": "object",
            "properties": {
                "widgets": {
                    "$ref": "#/definitions/Widgets"
                }
            }
        },
        "ResponseWrapperDashboardDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DashboardDTO"
                }
            }
        },
        "ResponseWrapperDepartment": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Department"
                }
            }
        },
        "ListResponseDepartment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Department"
                    }
                }
            }
        },
        "DistributionKey": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "distributionKeyBlade": {
                    "$ref": "#/definitions/DistributionKeyBlade"
                }
            }
        },
        "DistributionKeyBit": {
            "type": "object",
            "properties": {
                "departmentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "departmentName": {
                    "type": "string"
                },
                "percentage": {
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "DistributionKeyBlade": {
            "type": "object",
            "properties": {
                "distributionKeyBits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DistributionKeyBit"
                    }
                }
            }
        },
        "ResponseWrapperDistributionKey": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DistributionKey"
                }
            }
        },
        "ListResponseDistributionKey": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/DistributionKey"
                    }
                }
            }
        },
        "ResponseWrapperDivision": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Division"
                }
            }
        },
        "ListResponseDivision": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Division"
                    }
                }
            }
        },
        "ResponseWrapperDocument": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Document"
                }
            }
        },
        "DocumentArchive": {
            "type": "object",
            "required": [
                "fileName",
                "mimeType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "fileName": {
                    "type": "string",
                    "description": "The name of the document.",
                    "maxLength": 255
                },
                "size": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The size of the document in readable format.",
                    "readOnly": true,
                    "minimum": 0
                },
                "archiveDate": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Type of the document",
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperDocumentArchive": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DocumentArchive"
                }
            }
        },
        "ListResponseDocumentArchive": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/DocumentArchive"
                    }
                }
            }
        },
        "ResponseWrapperEmployee": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Employee"
                }
            }
        },
        "EmployeeEmail": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Employee e-mail address",
                    "minLength": 1
                }
            }
        },
        "ResponseWrapperEmployeeCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EmployeeCategory"
                }
            }
        },
        "ListResponseEmployeeCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/EmployeeCategory"
                    }
                }
            }
        },
        "ResponseWrapperEmployment": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Employment"
                }
            }
        },
        "ListResponseEmployment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Employment"
                    }
                }
            }
        },
        "ResponseWrapperEmploymentDetails": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EmploymentDetails"
                }
            }
        },
        "ListResponseEmploymentDetails": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/EmploymentDetails"
                    }
                }
            }
        },
        "EmploymentType": {
            "type": "object",
            "required": [
                "employmentType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employmentType": {
                    "type": "string",
                    "description": "Defines the employment type option. ",
                    "enum": [
                        "ORDINARY",
                        "MARITIME",
                        "FREELANCE",
                        "NOT_CHOSEN"
                    ]
                },
                "nameNO": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "ListResponseEmploymentType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/EmploymentType"
                    }
                }
            }
        },
        "LeaveOfAbsence": {
            "type": "object",
            "required": [
                "percentage",
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employment": {
                    "$ref": "#/definitions/Employment"
                },
                "importedLeaveOfAbsenceId": {
                    "type": "string",
                    "description": "Existing leave of absence ID used by the current accounting system",
                    "maxLength": 255
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                },
                "isWageDeduction": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "description": "Define the leave of absence type.",
                    "enum": [
                        "LEAVE_OF_ABSENCE",
                        "FURLOUGH",
                        "PARENTAL_BENEFITS",
                        "MILITARY_SERVICE",
                        "EDUCATIONAL",
                        "COMPASSIONATE",
                        "OTHER_NOT_STATUTORILY_REQUIRED",
                        "OTHER_STATUTORILY_REQUIRED",
                        "EDUCATIONAL_NOT_STATUTORILY_REQUIRED",
                        "EDUCATIONAL_STATUTORILY_REQUIRED"
                    ]
                }
            }
        },
        "ResponseWrapperLeaveOfAbsence": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/LeaveOfAbsence"
                }
            }
        },
        "ListResponseLeaveOfAbsence": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/LeaveOfAbsence"
                    }
                }
            }
        },
        "LeaveOfAbsenceType": {
            "type": "object",
            "required": [
                "leaveOfAbsenceType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "leaveOfAbsenceType": {
                    "type": "string",
                    "description": "Defines the leave of absence type option.",
                    "enum": [
                        "LEAVE_OF_ABSENCE",
                        "FURLOUGH",
                        "PARENTAL_BENEFITS",
                        "MILITARY_SERVICE",
                        "EDUCATIONAL",
                        "COMPASSIONATE",
                        "OTHER_NOT_STATUTORILY_REQUIRED",
                        "OTHER_STATUTORILY_REQUIRED",
                        "EDUCATIONAL_NOT_STATUTORILY_REQUIRED",
                        "EDUCATIONAL_STATUTORILY_REQUIRED"
                    ]
                },
                "nameNO": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "ListResponseLeaveOfAbsenceType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/LeaveOfAbsenceType"
                    }
                }
            }
        },
        "ResponseWrapperOccupationCode": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/OccupationCode"
                }
            }
        },
        "ListResponseOccupationCode": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/OccupationCode"
                    }
                }
            }
        },
        "ListResponseRemunerationType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RemunerationType"
                    }
                }
            }
        },
        "RemunerationType": {
            "type": "object",
            "required": [
                "remunerationType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "remunerationType": {
                    "type": "string",
                    "description": "Defines the remuneration type option. ",
                    "enum": [
                        "MONTHLY_WAGE",
                        "HOURLY_WAGE",
                        "COMMISION_PERCENTAGE",
                        "FEE",
                        "NOT_CHOSEN",
                        "PIECEWORK_WAGE"
                    ]
                },
                "nameNO": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "ListResponseWorkingHoursScheme": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/WorkingHoursScheme"
                    }
                }
            }
        },
        "WorkingHoursScheme": {
            "type": "object",
            "required": [
                "workingHoursScheme"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "workingHoursScheme": {
                    "type": "string",
                    "description": "Defines the working hours scheme option.",
                    "enum": [
                        "NOT_SHIFT",
                        "ROUND_THE_CLOCK",
                        "SHIFT_365",
                        "OFFSHORE_336",
                        "CONTINUOUS",
                        "OTHER_SHIFT",
                        "NOT_CHOSEN"
                    ]
                },
                "nameNO": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "HourlyCostAndRate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "date": {
                    "type": "string"
                },
                "rate": {
                    "type": "number"
                },
                "budgetRate": {
                    "type": "number"
                },
                "hourCostRate": {
                    "type": "number"
                }
            }
        },
        "ResponseWrapperHourlyCostAndRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/HourlyCostAndRate"
                }
            }
        },
        "ListResponseHourlyCostAndRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/HourlyCostAndRate"
                    }
                }
            }
        },
        "EmployeeLoginInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Employee id",
                    "readOnly": true
                },
                "username": {
                    "type": "string",
                    "description": "Employee username",
                    "readOnly": true,
                    "maxLength": 255
                },
                "lastLoginDate": {
                    "type": "string",
                    "description": "Last successful employee login datetime",
                    "readOnly": true
                },
                "salesForceEmployee": {
                    "description": "Sales force employee",
                    "readOnly": true,
                    "$ref": "#/definitions/SalesForceEmployee"
                }
            }
        },
        "ResponseWrapperEmployeeLoginInfo": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EmployeeLoginInfo"
                }
            }
        },
        "SalesForceAddress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "addressLine1": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "addressLine2": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "city": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "country": {
                    "readOnly": true,
                    "$ref": "#/definitions/SalesForceCountry"
                }
            }
        },
        "SalesForceCountry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "isoAlpha2Code": {
                    "type": "string",
                    "readOnly": true
                },
                "isoAlpha3Code": {
                    "type": "string",
                    "readOnly": true
                },
                "isoNumericCode": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "SalesForceEmployee": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "email": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "phoneNumberHome": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "phoneNumberWork": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "userId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "phoneNumberSmsCertified": {
                    "type": "string",
                    "readOnly": true
                },
                "isUserAdministrator": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isAccountAdministrator": {
                    "type": "boolean",
                    "readOnly": true
                },
                "allowLogin": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isExternal": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isTripletexCertified": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isDefaultLogin": {
                    "type": "boolean",
                    "readOnly": true
                },
                "loginEndDate": {
                    "type": "string",
                    "description": "Login end date",
                    "readOnly": true
                },
                "address": {
                    "readOnly": true,
                    "$ref": "#/definitions/SalesForceAddress"
                },
                "isMarketingConsent": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isAppUser": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "NextOfKin": {
            "type": "object",
            "required": [
                "name",
                "phoneNumber"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "phoneNumber": {
                    "type": "string",
                    "maxLength": 20
                },
                "address": {
                    "type": "string",
                    "maxLength": 255
                },
                "typeOfRelationship": {
                    "type": "string",
                    "description": "Define the employee's next of kin relationtype.<br>SPOUSE<br>PARTNER<br>PARENT<br>CHILD<br>SIBLING",
                    "enum": [
                        "SPOUSE",
                        "PARTNER",
                        "PARENT",
                        "CHILD",
                        "SIBLING"
                    ]
                }
            }
        },
        "ResponseWrapperNextOfKin": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/NextOfKin"
                }
            }
        },
        "ListResponseNextOfKin": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/NextOfKin"
                    }
                }
            }
        },
        "EmployeePreferences": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "filterOnProjectParticipant": {
                    "type": "boolean"
                },
                "filterOnProjectManager": {
                    "type": "boolean"
                },
                "language": {
                    "type": "string",
                    "enum": [
                        "NO",
                        "EN"
                    ]
                }
            }
        },
        "ResponseWrapperEmployeePreferences": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EmployeePreferences"
                }
            }
        },
        "ListResponseEmployeePreferences": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/EmployeePreferences"
                    }
                }
            }
        },
        "ResponseWrapperStandardTime": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/StandardTime"
                }
            }
        },
        "StandardTime": {
            "type": "object",
            "required": [
                "fromDate",
                "hoursPerDay"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "fromDate": {
                    "type": "string"
                },
                "hoursPerDay": {
                    "type": "number"
                }
            }
        },
        "ListResponseStandardTime": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/StandardTime"
                    }
                }
            }
        },
        "EnhetsregisteretDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "orgNumber": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "municipality": {
                    "type": "string"
                },
                "registrationDate": {
                    "type": "string",
                    "format": "date"
                },
                "vatRegistered": {
                    "type": "boolean"
                },
                "enterprises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnterpriseDTO"
                    }
                }
            }
        },
        "EnterpriseDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "orgNumber": {
                    "type": "string"
                },
                "registrationDate": {
                    "type": "string",
                    "format": "date"
                },
                "municipality": {
                    "type": "string"
                },
                "startDateMunicipality": {
                    "type": "string",
                    "format": "date"
                }
            }
        },
        "ListResponseEnhetsregisteretDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/EnhetsregisteretDTO"
                    }
                }
            }
        },
        "Entitlement": {
            "type": "object",
            "required": [
                "customer",
                "employee",
                "entitlementId"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "description": "Employee which has this privilege",
                    "$ref": "#/definitions/Employee"
                },
                "name": {
                    "type": "string",
                    "description": "Descriptive name for the privilege. Might change between releases.",
                    "readOnly": true
                },
                "entitlementId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique id for the type of privilege."
                },
                "customer": {
                    "description": "The company this role applies for",
                    "$ref": "#/definitions/Company"
                }
            }
        },
        "ResponseWrapperEntitlement": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Entitlement"
                }
            }
        },
        "ListResponseEntitlement": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Entitlement"
                    }
                }
            }
        },
        "RestrictedEntitlementChange": {
            "type": "object",
            "properties": {
                "change": {
                    "type": "string"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "EventInfoDescription": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "payloadModel": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperMapStringEventInfoDescription": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/EventInfoDescription"
                    }
                }
            }
        },
        "EventInfoDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "payloadModel": {
                    "type": "string"
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WebHookWrapper"
                    }
                }
            }
        },
        "ResponseWrapperEventInfoDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/EventInfoDTO"
                }
            }
        },
        "WebHookWrapper": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object"
                },
                "event": {
                    "type": "string"
                },
                "subscriptionId": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Notification": {
            "type": "object",
            "required": [
                "date",
                "message",
                "title",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 100
                },
                "message": {
                    "type": "string",
                    "maxLength": 255
                },
                "type": {
                    "type": "string",
                    "maxLength": 50
                },
                "category": {
                    "type": "string"
                },
                "link": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "ResponseWrapperNotification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Notification"
                }
            }
        },
        "ListResponseNotification": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Notification"
                    }
                }
            }
        },
        "ResponseWrapperSpacesuitNotificationMeta": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SpacesuitNotificationMeta"
                }
            }
        },
        "SpacesuitNotificationMeta": {
            "type": "object",
            "properties": {
                "sseUrl": {
                    "type": "string"
                },
                "clientName": {
                    "type": "string"
                },
                "notificationSettingsUrl": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperUnreadCountDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/UnreadCountDTO"
                }
            }
        },
        "UnreadCountDTO": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "readCursor": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ResponseWrapperSubscription": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Subscription"
                }
            }
        },
        "Subscription": {
            "type": "object",
            "required": [
                "event",
                "targetUrl"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "event": {
                    "type": "string",
                    "example": "customer.create",
                    "description": "Event name (from /v2/event) you wish to subscribe to. Form should be: *subject.verb*.",
                    "minLength": 1,
                    "maxLength": 255
                },
                "targetUrl": {
                    "type": "string",
                    "example": "https://username:password@myintegration.example/tripletexCallback",
                    "description": "The callback URL used for subscriptions (including authentication tokens). Must be absolute and use HTTPS. Basic authentication is supported.",
                    "minLength": 1
                },
                "fields": {
                    "type": "string",
                    "example": "id,version,number",
                    "description": "The fields in the object delivered with the notification callback, nested as in other API calls.",
                    "maxLength": 255
                },
                "status": {
                    "type": "string",
                    "description": "The status of the subscription.",
                    "enum": [
                        "ACTIVE",
                        "DISABLED",
                        "DISABLED_TOO_MANY_ERRORS",
                        "DISABLED_RATE_LIMIT_EXCEEDED",
                        "DISABLED_MISUSE"
                    ]
                },
                "authHeaderName": {
                    "type": "string",
                    "example": "Authorization",
                    "description": "Custom authentication header name",
                    "maxLength": 255
                },
                "authHeaderValue": {
                    "type": "string",
                    "example": "Basic dXNlcm5hbWU6cGFzc3dvcmQ=",
                    "description": "Custom authentication header value (write only)",
                    "maxLength": 4096
                }
            }
        },
        "ListResponseSubscription": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    }
                }
            }
        },
        "ResponseWrapperUserFeedback": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/UserFeedback"
                }
            }
        },
        "UserFeedback": {
            "type": "object",
            "required": [
                "browser",
                "contactRequest",
                "message",
                "pageTitle",
                "team"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "receivedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "message": {
                    "type": "string",
                    "maxLength": 500
                },
                "contactRequest": {
                    "type": "string"
                },
                "browser": {
                    "type": "string",
                    "maxLength": 100
                },
                "pageTitle": {
                    "type": "string",
                    "maxLength": 100
                },
                "team": {
                    "type": "string",
                    "maxLength": 100
                },
                "loginEmployee": {
                    "$ref": "#/definitions/Employee"
                },
                "actualEmployeeId": {
                    "$ref": "#/definitions/Employee"
                }
            }
        },
        "FundingPartnerApplication": {
            "type": "object",
            "required": [
                "amount",
                "firstName",
                "lastName",
                "loanType",
                "phoneNumber"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string",
                    "description": "The firstname property",
                    "minLength": 0,
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "description": "The lastName property",
                    "minLength": 0,
                    "maxLength": 100
                },
                "email": {
                    "type": "string",
                    "description": "The email property",
                    "minLength": 0,
                    "maxLength": 100
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "The phoneNumber property",
                    "minLength": 8,
                    "maxLength": 25
                },
                "comments": {
                    "type": "string",
                    "description": "The comment property",
                    "minLength": 0,
                    "maxLength": 500
                },
                "loanType": {
                    "type": "string",
                    "description": "The loanType property",
                    "enum": [
                        "OTHER",
                        "REAL_ESTATE"
                    ]
                },
                "amount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The amount property",
                    "minimum": 1000000,
                    "maximum": 30000000
                }
            }
        },
        "ResponseWrapperFundingPartnerApplication": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/FundingPartnerApplication"
                }
            }
        },
        "FundingPartnerQualify": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "loanType": {
                    "type": "string",
                    "description": "Which loan type to check",
                    "enum": [
                        "OTHER",
                        "REAL_ESTATE"
                    ]
                },
                "qualify": {
                    "type": "boolean",
                    "description": "Overall if the company qualifies the automatic check"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "realEstateBalance": {
                    "type": "boolean"
                },
                "otherRevenue": {
                    "type": "boolean"
                },
                "otherPositiveResult": {
                    "type": "boolean"
                },
                "otherResultBelowLimit": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperFundingPartnerQualify": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/FundingPartnerQualify"
                }
            }
        },
        "IdPortenLogin": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "description": "The url which the client needs to redirect for performing authentication",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperIdPortenLogin": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/IdPortenLogin"
                }
            }
        },
        "IdPortenLoginRequest": {
            "type": "object",
            "properties": {
                "internalRedirectUrl": {
                    "type": "string",
                    "description": "The url where the user should be redirected back to when authentication is complete"
                }
            }
        },
        "IdPortenLoginStatus": {
            "type": "object",
            "properties": {
                "expiresAt": {
                    "type": "string",
                    "readOnly": true
                },
                "active": {
                    "type": "boolean",
                    "description": "Is the token still active?",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperIdPortenLoginStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/IdPortenLoginStatus"
                }
            }
        },
        "AutoPayMessageDTO": {
            "type": "object",
            "required": [
                "message",
                "messageId",
                "messageType"
            ],
            "properties": {
                "messageId": {
                    "type": "string"
                },
                "messageType": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "AutoPayTransaction": {
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentDTO"
                },
                {
                    "type": "object",
                    "properties": {
                        "sendToBank": {
                            "type": "boolean",
                            "readOnly": true
                        },
                        "smsApproval": {
                            "type": "boolean",
                            "readOnly": true
                        }
                    }
                }
            ]
        },
        "PaymentDTO": {
            "type": "object",
            "discriminator": "paymentSource",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "paymentSource": {
                    "type": "string",
                    "enum": [
                        "AutoPayTransaction",
                        "ZtlTransaction"
                    ]
                },
                "paymentDate": {
                    "type": "string"
                },
                "bookingDate": {
                    "type": "string",
                    "readOnly": true
                },
                "valueDate": {
                    "type": "string",
                    "readOnly": true
                },
                "amountCurrency": {
                    "type": "number",
                    "description": "In the specified currency."
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "creditorName": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBban": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBankName": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBankAddress": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBankPostalCode": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBankPostalCity": {
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The payment status.NOT_APPROVED: Payment not approved yet.<br>APPROVED: Payment approved, but not yet sent to bank.<br>SENT_TO_AUTOPAY: Payment sent to bank.<br>RECEIVED_BY_BANK: Payment received by the bank.<br>ACCEPTED_BY_BANK: Payment that was accepted by the bank.<br>FAILED: Payment that failed.<br>CANCELLED: Cancelled payment.<br>SUCCESS: Payment that ended successfully.<br>",
                    "readOnly": true,
                    "enum": [
                        "NOT_APPROVED",
                        "CANCELLED",
                        "APPROVED",
                        "SENT_TO_AUTOPAY",
                        "RECEIVED_BY_BANK",
                        "ACCEPTED_BY_BANK",
                        "FAILED",
                        "SUCCESS",
                        "NOT_UPDATED",
                        "ON_HOLD",
                        "IMPORTED",
                        "INITIALIZED",
                        "AUTHORIZATION_REQUIRED",
                        "SETTLEMENT_IN_PROGRESS",
                        "REJECTED",
                        "BOOKED",
                        "SETTLEMENT_COMPLETED",
                        "BATCH_FAILED",
                        "BATCH_TIMEOUT",
                        "CANCEL_PENDING",
                        "PAYROLL_AWAITING_AUTHORIZATION",
                        "PAYROLL_SETTLEMENT_IN_PROGRESS",
                        "PAYROLL_SETTLEMENT_COMPLETED",
                        "PAYROLL_CANCELLED",
                        "PAYROLL_SETTLEMENT_NOT_COMPLETED_IN_TIME",
                        "PAYROLL_PAYMENT_INITIATED",
                        "PAYROLL_PAYMENT_ACCEPTED_TECHNICAL_VALIDATION",
                        "PAYROLL_ACCEPTED_FOR_EXECUTION",
                        "PAYROLL_FAILED",
                        "PAYROLL_EXECUTION_COMPLETED"
                    ]
                },
                "statusId": {
                    "type": "string",
                    "description": "The payment status Id. Usually all the payments in one batch have the same status ID, at least to the point of being received by bank.NEW: Payment is new.<br>PENDING_SIGNING: Payment is sent to AutoPay but not signed yet, requires re-approving.<br>CANCELLED: Payment was cancelled by ERP.<br>ERROR: Payment that failed.<br>RECEIVED_BY_BANK: Payment was received by the bank.<br>ACCEPTED_BY_BANK: Payment was accepted by bank.<br>CANCELLED_IN_BANK: Payment was cancelled in bank.<br>REJECTED_BY_BANK: Payment was rejected by bank.<br>PAID: Payment is paid.<br>OTHER: In case status in unknown. Will never be a final status.<br>",
                    "enum": [
                        "NEW",
                        "PENDING_SIGNING",
                        "CANCELLED",
                        "ERROR",
                        "RECEIVED_BY_BANK",
                        "ACCEPTED_BY_BANK",
                        "CANCELLED_IN_BANK",
                        "REJECTED_BY_BANK",
                        "PAID",
                        "OTHER"
                    ]
                },
                "isFinalStatus": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isForeignPayment": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isSalary": {
                    "type": "boolean",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "readOnly": true
                },
                "kid": {
                    "type": "string",
                    "description": "KID - Kundeidentifikasjonsnummer.",
                    "readOnly": true
                },
                "receiverReference": {
                    "type": "string",
                    "readOnly": true
                },
                "sourceVoucher": {
                    "description": "Voucher that was paid.",
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "postings": {
                    "description": "The payment posting.",
                    "readOnly": true,
                    "$ref": "#/definitions/Posting"
                },
                "account": {
                    "description": "The payment account.",
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "amountInAccountCurrency": {
                    "type": "number",
                    "description": "Amount specified in the currency of the bank agreements account.",
                    "readOnly": true
                },
                "isDisabledForUpdate": {
                    "type": "boolean",
                    "description": "Can this payment date be changed.",
                    "readOnly": true
                },
                "isDisabledForAmountChange": {
                    "type": "boolean",
                    "description": "Can this payment amount be changed.",
                    "readOnly": true
                },
                "isSelectable": {
                    "type": "boolean",
                    "description": "Is this payment selectable.",
                    "readOnly": true
                },
                "acceptors": {
                    "type": "array",
                    "description": "Who approved this payment.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Employee"
                    }
                },
                "paymentCategory": {
                    "type": "string",
                    "description": "The payment category.",
                    "readOnly": true,
                    "enum": [
                        "TRANSFER_BETWEEN_ACCOUNTS",
                        "REIMBURSEMENT",
                        "SUPPLIER_INVOICE",
                        "WITHHOLDING_TAX",
                        "TAX_DEDUCTION",
                        "VAT",
                        "SALARY",
                        "ENI",
                        "REGISTERED"
                    ]
                },
                "displayStatus": {
                    "type": "string",
                    "description": "The payment filter status.",
                    "readOnly": true
                },
                "isCancelDisabled": {
                    "type": "boolean",
                    "description": "Can this payment be cancelled.",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperPaymentDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PaymentDTO"
                }
            }
        },
        "ZtlTransaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "paymentSource": {
                    "type": "string",
                    "enum": [
                        "AutoPayTransaction",
                        "ZtlTransaction"
                    ]
                },
                "paymentDate": {
                    "type": "string"
                },
                "bookingDate": {
                    "type": "string",
                    "readOnly": true
                },
                "valueDate": {
                    "type": "string",
                    "readOnly": true
                },
                "amountCurrency": {
                    "type": "number",
                    "description": "In the specified currency."
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "creditorName": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBban": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 50
                },
                "creditorBankName": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBankAddress": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBankPostalCode": {
                    "type": "string",
                    "readOnly": true
                },
                "creditorBankPostalCity": {
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "description": "The payment status.NOT_APPROVED: Payment not approved yet.<br>APPROVED: Payment approved, but not yet sent to bank.<br>SENT_TO_AUTOPAY: Payment sent to bank.<br>RECEIVED_BY_BANK: Payment received by the bank.<br>ACCEPTED_BY_BANK: Payment that was accepted by the bank.<br>FAILED: Payment that failed.<br>CANCELLED: Cancelled payment.<br>SUCCESS: Payment that ended successfully.<br>",
                    "readOnly": true,
                    "enum": [
                        "NOT_APPROVED",
                        "CANCELLED",
                        "APPROVED",
                        "SENT_TO_AUTOPAY",
                        "RECEIVED_BY_BANK",
                        "ACCEPTED_BY_BANK",
                        "FAILED",
                        "SUCCESS",
                        "NOT_UPDATED",
                        "ON_HOLD",
                        "IMPORTED",
                        "INITIALIZED",
                        "AUTHORIZATION_REQUIRED",
                        "SETTLEMENT_IN_PROGRESS",
                        "REJECTED",
                        "BOOKED",
                        "SETTLEMENT_COMPLETED",
                        "BATCH_FAILED",
                        "BATCH_TIMEOUT",
                        "CANCEL_PENDING",
                        "PAYROLL_AWAITING_AUTHORIZATION",
                        "PAYROLL_SETTLEMENT_IN_PROGRESS",
                        "PAYROLL_SETTLEMENT_COMPLETED",
                        "PAYROLL_CANCELLED",
                        "PAYROLL_SETTLEMENT_NOT_COMPLETED_IN_TIME",
                        "PAYROLL_PAYMENT_INITIATED",
                        "PAYROLL_PAYMENT_ACCEPTED_TECHNICAL_VALIDATION",
                        "PAYROLL_ACCEPTED_FOR_EXECUTION",
                        "PAYROLL_FAILED",
                        "PAYROLL_EXECUTION_COMPLETED"
                    ]
                },
                "statusId": {
                    "type": "string",
                    "description": "The payment status Id. Usually all the payments in one batch have the same status ID, at least to the point of being received by bank.NEW: Payment is new.<br>PENDING_SIGNING: Payment is sent to AutoPay but not signed yet, requires re-approving.<br>CANCELLED: Payment was cancelled by ERP.<br>ERROR: Payment that failed.<br>RECEIVED_BY_BANK: Payment was received by the bank.<br>ACCEPTED_BY_BANK: Payment was accepted by bank.<br>CANCELLED_IN_BANK: Payment was cancelled in bank.<br>REJECTED_BY_BANK: Payment was rejected by bank.<br>PAID: Payment is paid.<br>OTHER: In case status in unknown. Will never be a final status.<br>",
                    "enum": [
                        "NEW",
                        "PENDING_SIGNING",
                        "CANCELLED",
                        "ERROR",
                        "RECEIVED_BY_BANK",
                        "ACCEPTED_BY_BANK",
                        "CANCELLED_IN_BANK",
                        "REJECTED_BY_BANK",
                        "PAID",
                        "OTHER"
                    ]
                },
                "isFinalStatus": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isForeignPayment": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isSalary": {
                    "type": "boolean",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "kid": {
                    "type": "string",
                    "description": "KID - Kundeidentifikasjonsnummer.",
                    "readOnly": true,
                    "maxLength": 25
                },
                "receiverReference": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 250
                },
                "sourceVoucher": {
                    "description": "Voucher that was paid.",
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "postings": {
                    "description": "The payment posting.",
                    "readOnly": true,
                    "$ref": "#/definitions/Posting"
                },
                "account": {
                    "description": "The payment account.",
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "amountInAccountCurrency": {
                    "type": "number",
                    "description": "Amount specified in the currency of the bank agreements account.",
                    "readOnly": true
                },
                "isDisabledForUpdate": {
                    "type": "boolean",
                    "description": "Can this payment date be changed.",
                    "readOnly": true
                },
                "isDisabledForAmountChange": {
                    "type": "boolean",
                    "description": "Can this payment amount be changed.",
                    "readOnly": true
                },
                "isSelectable": {
                    "type": "boolean",
                    "description": "Is this payment selectable.",
                    "readOnly": true
                },
                "acceptors": {
                    "type": "array",
                    "description": "Who approved this payment.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Employee"
                    }
                },
                "paymentCategory": {
                    "type": "string",
                    "description": "The payment category.",
                    "readOnly": true,
                    "enum": [
                        "TRANSFER_BETWEEN_ACCOUNTS",
                        "REIMBURSEMENT",
                        "SUPPLIER_INVOICE",
                        "WITHHOLDING_TAX",
                        "TAX_DEDUCTION",
                        "VAT",
                        "SALARY",
                        "ENI",
                        "REGISTERED"
                    ]
                },
                "displayStatus": {
                    "type": "string",
                    "description": "The payment filter status.",
                    "readOnly": true
                },
                "isCancelDisabled": {
                    "type": "boolean",
                    "description": "Can this payment be cancelled.",
                    "readOnly": true
                },
                "statusReason": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 256
                },
                "paymentId": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 128
                },
                "endToEndId": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 128
                }
            }
        },
        "ListResponsePaymentDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PaymentDTO"
                    }
                }
            }
        },
        "ApproveResponseDTO": {
            "type": "object",
            "properties": {
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to AutoPay 2FA or ZTL SCA after payments are sent to be approved"
                },
                "toBeApproved": {
                    "type": "array",
                    "description": "List of payments that will be sent to AutoPay approval/ZTL",
                    "items": {
                        "$ref": "#/definitions/PaymentDTO"
                    }
                },
                "notApproved": {
                    "type": "array",
                    "description": "List of payments that won't be sent to AutoPay approval/ZTL",
                    "items": {
                        "$ref": "#/definitions/PaymentDTO"
                    }
                }
            }
        },
        "ResponseWrapperApproveResponseDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ApproveResponseDTO"
                }
            }
        },
        "ListResponseAutoPayTransaction": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AutoPayTransaction"
                    }
                }
            }
        },
        "CurrencyPaymentsSumDTO": {
            "type": "object",
            "properties": {
                "currency": {
                    "description": "Currency of the sum",
                    "$ref": "#/definitions/Currency"
                },
                "sum": {
                    "description": "Sum of the payments",
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "ResponseWrapperListCurrencyPaymentsSumDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CurrencyPaymentsSumDTO"
                    }
                }
            }
        },
        "CancelResponseDTO": {
            "type": "object",
            "properties": {
                "redirectUrl": {
                    "type": "string",
                    "description": "The redirect URL to ZTL SCA for cancelling the payment"
                },
                "cancellationSuccessful": {
                    "type": "boolean",
                    "description": "Was the cancellation successful?"
                },
                "paymentToBeCancelled": {
                    "description": "Payment to be cancelled",
                    "$ref": "#/definitions/PaymentDTO"
                }
            }
        },
        "ResponseWrapperCancelResponseDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CancelResponseDTO"
                }
            }
        },
        "LinkMobilityReportDTO": {
            "type": "object",
            "properties": {
                "refId": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "resultCode": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PGCallbackDTO": {
            "type": "object",
            "required": [
                "ODPCompanyID",
                "ODPCustomerID",
                "autoPayKey",
                "autoPayKeyLastGeneratedDate",
                "pgRequestId",
                "tenantId"
            ],
            "properties": {
                "odpcompanyID": {
                    "type": "integer",
                    "format": "int32"
                },
                "odpcustomerID": {
                    "type": "integer",
                    "format": "int32"
                },
                "pgRequestId": {
                    "type": "string"
                },
                "tenantId": {
                    "type": "string"
                },
                "ODPCustomerID": {
                    "type": "integer",
                    "format": "int32"
                },
                "ODPCompanyID": {
                    "type": "integer",
                    "format": "int32"
                },
                "autoPayKey": {
                    "type": "string"
                },
                "autoPayKeyLastGeneratedDate": {
                    "type": "string",
                    "format": "date"
                },
                "status": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "ListResponseZtlTransaction": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ZtlTransaction"
                    }
                }
            }
        },
        "ResponseWrapperInventory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Inventory"
                }
            }
        },
        "ListResponseInventory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Inventory"
                    }
                }
            }
        },
        "Inventories": {
            "type": "object",
            "properties": {
                "product": {
                    "readOnly": true,
                    "$ref": "#/definitions/Product"
                },
                "stock": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Stock"
                    }
                }
            }
        },
        "ListResponseInventories": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Inventories"
                    }
                }
            }
        },
        "Stock": {
            "type": "object",
            "properties": {
                "inventory": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "inventoryId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "openingStock": {
                    "type": "number",
                    "readOnly": true
                },
                "changesInPeriod": {
                    "type": "number",
                    "readOnly": true
                },
                "closingStock": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperInventoryLocation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/InventoryLocation"
                }
            }
        },
        "ListResponseInventoryLocation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/InventoryLocation"
                    }
                }
            }
        },
        "ResponseWrapperStocktaking": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Stocktaking"
                }
            }
        },
        "Stocktaking": {
            "type": "object",
            "required": [
                "date",
                "inventory"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "typeOfStocktaking": {
                    "type": "string",
                    "description": "[Deprecated] Define the type of stoctaking.<br>ALL_PRODUCTS_WITH_INVENTORIES: Create a stocktaking for all products with inventories.<br>INCLUDE_PRODUCTS: Create a stocktaking which includes all products.<br>NO_PRODUCTS: Create a stocktaking without products.<br>If not specified, the value 'ALL_PRODUCTS_WITH_INVENTORIES' is used.",
                    "enum": [
                        "ALL_PRODUCTS_WITH_INVENTORIES",
                        "INCLUDE_PRODUCTS",
                        "NO_PRODUCTS"
                    ]
                },
                "inventory": {
                    "description": "The inventory this applies for",
                    "$ref": "#/definitions/Inventory"
                },
                "isCompleted": {
                    "type": "boolean"
                }
            }
        },
        "ListResponseStocktaking": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Stocktaking"
                    }
                }
            }
        },
        "ProductLine": {
            "type": "object",
            "required": [
                "product",
                "stocktaking"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "stocktaking": {
                    "$ref": "#/definitions/Stocktaking"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "count": {
                    "type": "number"
                },
                "unitCostCurrency": {
                    "type": "number",
                    "description": "Unit price purchase (cost) excluding VAT in the order's currency"
                },
                "costCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "comment": {
                    "type": "string"
                },
                "counted": {
                    "type": "boolean",
                    "description": "If a line is counted or not - only for internal use; will return true/false based on whether the stocktaking is completed otherwise.",
                    "readOnly": true
                },
                "counter": {
                    "description": "Who counted the line - only for internal use",
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "dateCounted": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When the line was counted - only for internal use",
                    "readOnly": true
                },
                "expectedStock": {
                    "type": "number",
                    "description": "For internal use only",
                    "readOnly": true
                },
                "location": {
                    "description": "Warehouse location",
                    "readOnly": true,
                    "$ref": "#/definitions/InventoryLocation"
                }
            }
        },
        "ResponseWrapperProductLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductLine"
                }
            }
        },
        "ListResponseProductLine": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductLine"
                    }
                }
            }
        },
        "ResponseWrapperInvoice": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Invoice"
                }
            }
        },
        "ListResponseInvoice": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Invoice"
                    }
                }
            }
        },
        "ResponseWrapperInvoiceRemark": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/InvoiceRemark"
                }
            }
        },
        "MaventaEventDataDTO": {
            "type": "object",
            "required": [
                "destination",
                "id",
                "invoice_id",
                "invoice_number",
                "network",
                "profiles",
                "recipient_bid",
                "recipient_name"
            ],
            "properties": {
                "invoice_id": {
                    "type": "string"
                },
                "invoice_number": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "recipient_name": {
                    "type": "string"
                },
                "recipient_bid": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string"
                },
                "recipient_eia": {
                    "type": "string"
                }
            }
        },
        "MaventaStatusDTO": {
            "type": "object",
            "required": [
                "company_id",
                "event",
                "event_data",
                "event_timestamp"
            ],
            "properties": {
                "event": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string"
                },
                "event_timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "event_data": {
                    "$ref": "#/definitions/MaventaEventDataDTO"
                }
            }
        },
        "PaymentType": {
            "type": "object",
            "required": [
                "description",
                "displayName"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "displayName": {
                    "type": "string"
                },
                "debitAccount": {
                    "$ref": "#/definitions/Account"
                },
                "creditAccount": {
                    "$ref": "#/definitions/Account"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "customer": {
                    "readOnly": true,
                    "$ref": "#/definitions/Customer"
                },
                "supplier": {
                    "readOnly": true,
                    "$ref": "#/definitions/Supplier"
                }
            }
        },
        "ResponseWrapperPaymentType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PaymentType"
                }
            }
        },
        "ListResponsePaymentType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PaymentType"
                    }
                }
            }
        },
        "ResponseWrapperProjectInvoiceDetails": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectInvoiceDetails"
                }
            }
        },
        "ListResponseProjectInvoiceDetails": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectInvoiceDetails"
                    }
                }
            }
        },
        "InvoiceSendTypeDTO": {
            "type": "object",
            "properties": {
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "canReceiveEHF": {
                    "type": "boolean"
                },
                "canReceiveEFaktura": {
                    "type": "boolean"
                },
                "elmaLookupAlive": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperInvoiceSendTypeDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/InvoiceSendTypeDTO"
                }
            }
        },
        "ListResponseInvoiceSendTypeDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/InvoiceSendTypeDTO"
                    }
                }
            }
        },
        "InvoiceSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "hasFirstInvoiceNumber": {
                    "type": "boolean"
                },
                "nextInvoiceNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "bankAccountReady": {
                    "type": "boolean"
                },
                "defaultSendTypeB2B": {
                    "type": "string",
                    "enum": [
                        "EMAIL",
                        "EHF",
                        "EFAKTURA",
                        "AVTALEGIRO",
                        "VIPPS",
                        "PAPER",
                        "MANUAL",
                        "DIRECT",
                        "AUTOINVOICE_EHF_OUTBOUND",
                        "AUTOINVOICE_EHF_INCOMING",
                        "PEPPOL_EHF_INCOMING"
                    ]
                },
                "defaultSendTypeB2C": {
                    "type": "string",
                    "enum": [
                        "EMAIL",
                        "EHF",
                        "EFAKTURA",
                        "AVTALEGIRO",
                        "VIPPS",
                        "PAPER",
                        "MANUAL",
                        "DIRECT",
                        "AUTOINVOICE_EHF_OUTBOUND",
                        "AUTOINVOICE_EHF_INCOMING",
                        "PEPPOL_EHF_INCOMING"
                    ]
                },
                "defaultOrderInvoiceComment": {
                    "type": "string",
                    "readOnly": true
                },
                "showBackorder": {
                    "type": "boolean"
                },
                "setDeliverToAvailableStock": {
                    "type": "boolean"
                },
                "sendTypes": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "EHF",
                            "AVTALEGIRO",
                            "EFAKTURA",
                            "VIPPS",
                            "PAPER",
                            "MANUAL"
                        ]
                    }
                },
                "isAutomaticSoftReminderEnabled": {
                    "type": "boolean",
                    "description": "Has automatic soft reminders enabled for this company. This setting need to be enabled both here and on each customer card to take effect.",
                    "readOnly": true
                },
                "automaticSoftReminderDaysAfterDueDate": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days after due date automatic soft reminders should be sent out if enabled.",
                    "readOnly": true
                },
                "isAutomaticReminderEnabled": {
                    "type": "boolean",
                    "description": "Has automatic reminders enabled for this company. This setting need to be enabled both here and on each customer card to take effect.",
                    "readOnly": true
                },
                "automaticReminderDaysAfterDueDate": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days after due date automatic reminders should be sent ouf if enabled.",
                    "readOnly": true
                },
                "isAutomaticNoticeOfDebtCollectionEnabled": {
                    "type": "boolean",
                    "description": "Has automatic notices of debt collection enabled for this company. This setting need to be enabled both here and on each customer card to take effect.",
                    "readOnly": true
                },
                "automaticNoticeOfDebtCollectionDaysAfterDueDate": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of days after due date automatic notices of debt collection should be sent out if enabled.",
                    "readOnly": true
                },
                "externalInvoiceNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Highest external invoice number for this company",
                    "readOnly": true
                },
                "hasSentFirstInvoice": {
                    "type": "boolean",
                    "description": "Has company sent first invoice",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperInvoiceSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/InvoiceSettings"
                }
            }
        },
        "InvoiceTemplateRenderer": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperInvoiceTemplateRenderer": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/InvoiceTemplateRenderer"
                }
            }
        },
        "ColorField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "enum": [
                        "FONT_COLOR",
                        "MAIN_COLOR"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "CommentValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "enum": [
                        "INVOICE_COMMENT"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ImageValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "enum": [
                        "TOP_LOGO"
                    ]
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                }
            }
        },
        "UserTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "template": {
                    "type": "string",
                    "enum": [
                        "SIMPLE",
                        "FANCY",
                        "PAY_ME_PAYMENT_FOCUS"
                    ]
                },
                "colors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ColorField"
                    }
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "AMOUNT_TO_PAY_MAJOR",
                            "AMOUNT_TO_PAY_MINOR",
                            "INVOICE_DATE",
                            "DUE_DATE",
                            "INVOICE_NUMBER",
                            "CUSTOMER_NUMBER",
                            "OUR_REFERENCE",
                            "THEIR_REFERENCE",
                            "ACCOUNT",
                            "KID",
                            "ORDER_LINE_SUMMARY_NET",
                            "ORDER_LINE_SUMMARY_VAT",
                            "ORDER_LINE_SUMMARY_TOTAL",
                            "PROJECT_NAME",
                            "OUR_CONTACT",
                            "THEIR_CONTACT",
                            "DELIVERY_DATE",
                            "DELIVERY_ADDRESS",
                            "DELIVERY_TOTAL_WEIGHT",
                            "SENDER_NAME",
                            "SENDER_ADDRESS_LINE_1",
                            "SENDER_ADDRESS_LINE_2",
                            "SENDER_ZIP_CODE",
                            "SENDER_AREA",
                            "SENDER_ORG_NUMBER",
                            "SENDER_PHONE",
                            "SENDER_EMAIL",
                            "SENDER_ZIP_AND_CITY",
                            "RECIPIENT_NAME",
                            "RECIPIENT_ADDRESS_LINE_1",
                            "RECIPIENT_ADDRESS_LINE_2",
                            "RECIPIENT_ZIP_CODE",
                            "RECIPIENT_AREA",
                            "RECIPIENT_ORG_NUMBER",
                            "RECIPIENT_PHONE",
                            "RECIPIENT_EMAIL",
                            "RECIPIENT_ZIP_AND_CITY",
                            "OL_PRODUCT_NUMBER",
                            "OL_DESCRIPTION",
                            "OL_QUANTITY",
                            "OL_ITEM_COST",
                            "OL_VAT",
                            "OL_NET_SUM",
                            "OL_DISCOUNT",
                            "OL_SURCHARGE"
                        ]
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CommentValue"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageValue"
                    }
                }
            }
        },
        "CommentField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "ImageField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "InvoiceField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "categoryName": {
                    "type": "string"
                },
                "categoryDescription": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperTemplate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Template"
                }
            }
        },
        "Template": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "defaultFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceField"
                    }
                },
                "availableFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceField"
                    }
                },
                "requiredFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceField"
                    }
                },
                "commentFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CommentField"
                    }
                },
                "colorFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ColorField"
                    }
                },
                "imageFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageField"
                    }
                }
            }
        },
        "ListResponseTemplate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Template"
                    }
                }
            }
        },
        "ResponseWrapperUserTemplate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/UserTemplate"
                }
            }
        },
        "ResponseWrapperUserTemplateDefaultDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/UserTemplateDefaultDTO"
                }
            }
        },
        "UserTemplateDefaultDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "template": {
                    "type": "string",
                    "enum": [
                        "SIMPLE",
                        "FANCY",
                        "PAY_ME_PAYMENT_FOCUS"
                    ]
                },
                "colors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ColorField"
                    }
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "AMOUNT_TO_PAY_MAJOR",
                            "AMOUNT_TO_PAY_MINOR",
                            "INVOICE_DATE",
                            "DUE_DATE",
                            "INVOICE_NUMBER",
                            "CUSTOMER_NUMBER",
                            "OUR_REFERENCE",
                            "THEIR_REFERENCE",
                            "ACCOUNT",
                            "KID",
                            "ORDER_LINE_SUMMARY_NET",
                            "ORDER_LINE_SUMMARY_VAT",
                            "ORDER_LINE_SUMMARY_TOTAL",
                            "PROJECT_NAME",
                            "OUR_CONTACT",
                            "THEIR_CONTACT",
                            "DELIVERY_DATE",
                            "DELIVERY_ADDRESS",
                            "DELIVERY_TOTAL_WEIGHT",
                            "SENDER_NAME",
                            "SENDER_ADDRESS_LINE_1",
                            "SENDER_ADDRESS_LINE_2",
                            "SENDER_ZIP_CODE",
                            "SENDER_AREA",
                            "SENDER_ORG_NUMBER",
                            "SENDER_PHONE",
                            "SENDER_EMAIL",
                            "SENDER_ZIP_AND_CITY",
                            "RECIPIENT_NAME",
                            "RECIPIENT_ADDRESS_LINE_1",
                            "RECIPIENT_ADDRESS_LINE_2",
                            "RECIPIENT_ZIP_CODE",
                            "RECIPIENT_AREA",
                            "RECIPIENT_ORG_NUMBER",
                            "RECIPIENT_PHONE",
                            "RECIPIENT_EMAIL",
                            "RECIPIENT_ZIP_AND_CITY",
                            "OL_PRODUCT_NUMBER",
                            "OL_DESCRIPTION",
                            "OL_QUANTITY",
                            "OL_ITEM_COST",
                            "OL_VAT",
                            "OL_NET_SUM",
                            "OL_DISCOUNT",
                            "OL_SURCHARGE"
                        ]
                    }
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CommentValue"
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ImageValue"
                    }
                }
            }
        },
        "ListResponseUserTemplate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/UserTemplate"
                    }
                }
            }
        },
        "InvoiceMessage": {
            "type": "object",
            "properties": {
                "contentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "messageContentType": {
                    "type": "integer",
                    "format": "int32"
                },
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "sendTime": {
                    "type": "string",
                    "format": "date"
                },
                "readTime": {
                    "type": "string",
                    "format": "date"
                },
                "receiverEmail": {
                    "type": "string"
                }
            }
        },
        "InvoiceReminder": {
            "type": "object",
            "properties": {
                "reminderType": {
                    "type": "integer",
                    "format": "int32"
                },
                "debtCollectorName": {
                    "type": "string"
                },
                "totalChargeCurrency": {
                    "type": "number",
                    "format": "double"
                },
                "interestsCurrency": {
                    "type": "number",
                    "format": "double"
                },
                "reminderDate": {
                    "type": "string",
                    "format": "date"
                },
                "termOfPayment": {
                    "type": "string",
                    "format": "date"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InvoiceMessage"
                    }
                }
            }
        },
        "InvoiceStatus": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "level": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "SUCCESS",
                        "WARNING",
                        "CRITICAL"
                    ]
                }
            }
        },
        "InvoiceSummaryDTO": {
            "type": "object",
            "properties": {
                "moreThan30DaysOverdueSum": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "lessThan30DaysOverdueSum": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "notOverdueSum": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "outstandingOrdersSum": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "showInvoiceAction": {
                    "type": "boolean"
                }
            }
        },
        "ListResponseInvoiceSummaryDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/InvoiceSummaryDTO"
                    }
                }
            }
        },
        "InvoiceOverviewMetaDTO": {
            "type": "object",
            "properties": {
                "hasModuleProjectEconomy": {
                    "type": "boolean"
                },
                "isVatOn": {
                    "type": "boolean"
                },
                "isReminderDebtCollectionActionAllowed": {
                    "type": "boolean"
                },
                "isPaymentActionAllowed": {
                    "type": "boolean"
                },
                "isCreditActionAllowed": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperInvoiceOverviewMetaDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/InvoiceOverviewMetaDTO"
                }
            }
        },
        "ResponseWrapperMapFeatureBoolean": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "LedgerAccount": {
            "type": "object",
            "properties": {
                "account": {
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "sumAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "sumAmountCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "postings": {
                    "type": "array",
                    "description": "Link to postings on this account.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                }
            }
        },
        "ListResponseLedgerAccount": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/LedgerAccount"
                    }
                }
            }
        },
        "ListResponseSupplierBalance": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SupplierBalance"
                    }
                }
            }
        },
        "SupplierBalance": {
            "type": "object",
            "properties": {
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "balanceIn": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceChange": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceOut": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceInCurrencies": {
                    "type": "array",
                    "description": "Currencies that have been used prior to this period, for the given filter",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Currency"
                    }
                },
                "sumAmountNegative": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperAccount": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Account"
                }
            }
        },
        "ListResponseAccount": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                }
            }
        },
        "ResponseWrapperAccountingPeriod": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AccountingPeriod"
                }
            }
        },
        "ListResponseAccountingPeriod": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AccountingPeriod"
                    }
                }
            }
        },
        "AnnualAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "start": {
                    "type": "string",
                    "readOnly": true
                },
                "end": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperAnnualAccount": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AnnualAccount"
                }
            }
        },
        "ListResponseAnnualAccount": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AnnualAccount"
                    }
                }
            }
        },
        "ResponseWrapperCloseGroup": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CloseGroup"
                }
            }
        },
        "ListResponseCloseGroup": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CloseGroup"
                    }
                }
            }
        },
        "PaymentTypeOut": {
            "type": "object",
            "required": [
                "creditAccount",
                "description"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "maxLength": 255
                },
                "isBruttoWageDeduction": {
                    "type": "boolean",
                    "description": "true if it should be a deduction from the wage. The module PROVISIONSALARY is required to both view and change this setting"
                },
                "creditAccount": {
                    "$ref": "#/definitions/Account"
                },
                "showIncomingInvoice": {
                    "type": "boolean",
                    "description": "true if the payment type should be available in supplier invoices"
                },
                "showWagePayment": {
                    "type": "boolean",
                    "description": "true if the payment type should be available in wage payments. The wage module is required to both view and change this setting"
                },
                "showVatReturns": {
                    "type": "boolean",
                    "description": "true if the payment type should be available in vat returns"
                },
                "showWagePeriodTransaction": {
                    "type": "boolean",
                    "description": "true if the payment type should be available in period transactionsThe wage module is required to both view and change this setting"
                },
                "requiresSeparateVoucher": {
                    "type": "boolean",
                    "description": "true if a separate voucher is required"
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32",
                    "description": "determines in which order the types should be listed. No 1 is listed first"
                },
                "isInactive": {
                    "type": "boolean",
                    "description": "true if the payment type should be hidden from available payment types"
                }
            }
        },
        "ResponseWrapperPaymentTypeOut": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PaymentTypeOut"
                }
            }
        },
        "ListResponsePaymentTypeOut": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PaymentTypeOut"
                    }
                }
            }
        },
        "ResponseWrapperPosting": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Posting"
                }
            }
        },
        "ListResponsePosting": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                }
            }
        },
        "HistoricalPosting": {
            "type": "object",
            "required": [
                "account",
                "amount",
                "amountCurrency",
                "amountGross",
                "amountGrossCurrency",
                "amountVat",
                "currency",
                "date"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "date": {
                    "type": "string",
                    "description": "The posting date."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the posting."
                },
                "account": {
                    "description": "The ledger account of the posting.",
                    "$ref": "#/definitions/Account"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "amount": {
                    "type": "number",
                    "description": "The posting amount in company currency. Important: The amounts in this amount field must have sum = 0 on all the dates. If multiple postings with different dates, then the sum must be 0 on each of the dates."
                },
                "amountCurrency": {
                    "type": "number",
                    "description": "The posting amount in posting currency."
                },
                "amountGross": {
                    "type": "number",
                    "description": "The posting gross amount in company currency."
                },
                "amountGrossCurrency": {
                    "type": "number",
                    "description": "The posting gross amount in posting currency."
                },
                "amountVat": {
                    "type": "number",
                    "description": "The amount of vat on this posting in company currency (NOK)."
                },
                "currency": {
                    "description": "Posting currency.",
                    "$ref": "#/definitions/Currency"
                },
                "invoiceNumber": {
                    "type": "string",
                    "description": "Invoice number.",
                    "maxLength": 100
                },
                "termOfPayment": {
                    "type": "string",
                    "description": "Due date."
                },
                "closeGroup": {
                    "type": "string",
                    "description": "Optional. Used to create a close group for postings."
                }
            }
        },
        "ResponseWrapperHistoricalPosting": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/HistoricalPosting"
                }
            }
        },
        "ResponseWrapperVatType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VatType"
                }
            }
        },
        "ListResponseVatType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VatType"
                    }
                }
            }
        },
        "ResponseWrapperVoucher": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Voucher"
                }
            }
        },
        "OpeningBalance": {
            "type": "object",
            "required": [
                "voucherDate"
            ],
            "properties": {
                "voucherDate": {
                    "type": "string",
                    "description": "The date for the opening balance"
                },
                "balancePostings": {
                    "type": "array",
                    "description": "Balance postings",
                    "items": {
                        "$ref": "#/definitions/OpeningBalanceBalancePosting"
                    }
                },
                "customerPostings": {
                    "type": "array",
                    "description": "Postings in the customer sub ledger",
                    "items": {
                        "$ref": "#/definitions/OpeningBalanceCustomerPosting"
                    }
                },
                "supplierPostings": {
                    "type": "array",
                    "description": "Postings in the supplier sub ledger",
                    "items": {
                        "$ref": "#/definitions/OpeningBalanceSupplierPosting"
                    }
                },
                "employeePostings": {
                    "type": "array",
                    "description": "Postings in the employee sub ledger",
                    "items": {
                        "$ref": "#/definitions/OpeningBalanceEmployeePosting"
                    }
                }
            }
        },
        "OpeningBalanceBalancePosting": {
            "type": "object",
            "required": [
                "account",
                "amount"
            ],
            "properties": {
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "amount": {
                    "type": "number"
                },
                "amountCurrency": {
                    "type": "number",
                    "description": "Only relevant for accounts in a different currency than the company currency, e.g an EUR account in a Norwegian company.  If provided on other accounts, it must always equal 'amount'"
                }
            }
        },
        "OpeningBalanceCustomerPosting": {
            "type": "object",
            "required": [
                "amount",
                "customer"
            ],
            "properties": {
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "OpeningBalanceEmployeePosting": {
            "type": "object",
            "required": [
                "amount",
                "employee"
            ],
            "properties": {
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "OpeningBalanceSupplierPosting": {
            "type": "object",
            "required": [
                "amount",
                "supplier"
            ],
            "properties": {
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "ListResponseVoucher": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Voucher"
                    }
                }
            }
        },
        "VoucherSearchResponse": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Voucher"
                    }
                },
                "totalNumberOfPostings": {
                    "type": "integer",
                    "format": "int32",
                    "description": "[DEPRECATED] Number of postings returned (if postings are returned)",
                    "readOnly": true
                }
            }
        },
        "Delete": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "Is the delete operation available for this Voucher?",
                    "readOnly": true
                },
                "reasons": {
                    "type": "array",
                    "description": "If the delete operation is not available then this is a list of reasons why. Otherwise the list will be empty",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ResponseWrapperVoucherOptions": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherOptions"
                }
            }
        },
        "VoucherOptions": {
            "type": "object",
            "properties": {
                "delete": {
                    "description": "A data structure containing information about the delete operation.",
                    "readOnly": true,
                    "$ref": "#/definitions/Delete"
                }
            }
        },
        "HistoricalVoucher": {
            "type": "object",
            "required": [
                "date",
                "description",
                "externalVoucherNumber",
                "postings"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "description": "The voucher date."
                },
                "externalVoucherNumber": {
                    "type": "string",
                    "description": "External voucher number. This is the voucher number in the historical system."
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The voucher number generated by Tripletex. System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Voucher year. System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0
                },
                "description": {
                    "type": "string",
                    "description": "The voucher description."
                },
                "voucherType": {
                    "description": "Voucher type. Optional. Must not be of type 'Utgående faktura' ('Outgoing Invoice') on new vouchers, instead use voucherType=null or use the Invoice endpoint.",
                    "$ref": "#/definitions/VoucherType"
                },
                "postings": {
                    "type": "array",
                    "description": "The list of postings of the voucher. In postings, these fields must be provided: date, account, currency, amount, amountBasis, amountVat, amountCurrency, amountBasisCurrency.",
                    "items": {
                        "$ref": "#/definitions/HistoricalPosting"
                    }
                }
            }
        },
        "ListResponseHistoricalVoucher": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/HistoricalVoucher"
                    }
                }
            }
        },
        "ListResponseVoucherInternal": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VoucherInternal"
                    }
                }
            }
        },
        "VoucherInternal": {
            "type": "object",
            "required": [
                "date",
                "description",
                "postings"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0
                },
                "tempNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Temporary voucher number.",
                    "readOnly": true,
                    "minimum": 0
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0
                },
                "description": {
                    "type": "string"
                },
                "voucherType": {
                    "description": "Voucher type. Must not be of type 'Utgående faktura' ('Outgoing Invoice') on new vouchers, instead use voucherType=null or use the Invoice endpoint.",
                    "$ref": "#/definitions/VoucherType"
                },
                "reverseVoucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "postings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                },
                "document": {
                    "description": "If the documentation for the voucher has been generated by the system (e.g. an invoice) then this is a reference to the generated document. This document is always a PDF. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "attachment": {
                    "description": "If the documentation for the voucher has been provided from an external source (e.g. another system via API or a user upload) then this is a reference to the document. This is always a PDF. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "externalVoucherNumber": {
                    "type": "string",
                    "description": "External voucher number."
                },
                "ediDocument": {
                    "description": "If the voucher is created based on a machine readable document (such as EHF or EFO/NELFO) then this is a reference to that document. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "supplierVoucherType": {
                    "type": "string",
                    "description": "Supplier voucher type - simple and detailed.",
                    "enum": [
                        "TYPE_SUPPLIER_INVOICE_SIMPLE",
                        "TYPE_SUPPLIER_INVOICE_DETAILED"
                    ]
                },
                "urlDetails": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperVoucherType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherType"
                }
            }
        },
        "ListResponseVoucherType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VoucherType"
                    }
                }
            }
        },
        "License": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Returns the license id.",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Returns license name.",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "description": "Returns license creation date.",
                    "readOnly": true
                },
                "displayTextKey": {
                    "type": "string",
                    "description": "Returns license display text",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperLicenseDTO[]": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/License"
                    }
                }
            }
        },
        "ResponseWrapperTripDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TripDTO"
                }
            }
        },
        "TripDTO": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "travelTimeInMinutes": {
                    "type": "number"
                },
                "sumTollNOK": {
                    "type": "number"
                }
            }
        },
        "ListResponseSearchCompletionDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SearchCompletionDTO"
                    }
                }
            }
        },
        "SearchCompletionDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "alternateName": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "postalArea": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "score": {
                    "type": "integer",
                    "format": "int32"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "SEARCH1881",
                            "TRIPLETEX",
                            "NICKNAME",
                            "EMPLOYEE",
                            "CONTACT",
                            "ACTIVITY",
                            "PROJECT",
                            "ORDER",
                            "OFFER",
                            "CUSTOMER",
                            "COMPANY",
                            "CONTROLSCHEMA",
                            "HOUR",
                            "TRAVELEXPENSE"
                        ]
                    }
                }
            }
        },
        "ListResponsePersonAutoCompleteDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PersonAutoCompleteDTO"
                    }
                }
            }
        },
        "PersonAutoCompleteDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "alternateName": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "postalArea": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "score": {
                    "type": "integer",
                    "format": "int32"
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "SEARCH1881",
                            "TRIPLETEX",
                            "NICKNAME",
                            "EMPLOYEE",
                            "CONTACT",
                            "ACTIVITY",
                            "PROJECT",
                            "ORDER",
                            "OFFER",
                            "CUSTOMER",
                            "COMPANY",
                            "CONTROLSCHEMA",
                            "HOUR",
                            "TRAVELEXPENSE"
                        ]
                    }
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "phoneNumberMobile": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "countryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "reserved": {
                    "type": "boolean"
                }
            }
        },
        "Coordinate": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number",
                    "format": "double"
                },
                "longitude": {
                    "type": "number",
                    "format": "double"
                },
                "location": {
                    "type": "string"
                },
                "geoEmpty": {
                    "type": "boolean"
                }
            }
        },
        "Day": {
            "type": "object",
            "properties": {
                "weekDay": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "hours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Hours"
                    }
                }
            }
        },
        "Hours": {
            "type": "object",
            "properties": {
                "startTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                }
            }
        },
        "Price": {
            "type": "object",
            "properties": {
                "vehicle": {
                    "type": "string",
                    "enum": [
                        "NotSet",
                        "CarDiesel",
                        "CarGasolineOrHybrid",
                        "CarZeroEmission",
                        "TruckEuroV",
                        "TruckEuroVI",
                        "CarGeneral",
                        "TruckGeneral"
                    ]
                },
                "price": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "rushHoursToll": {
                    "$ref": "#/definitions/RushHoursToll"
                },
                "vehicleDescription": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperTripSearchResponseDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TripSearchResponseDTO"
                }
            }
        },
        "RushHoursToll": {
            "type": "object",
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Day"
                    }
                },
                "price": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "TollStationV2": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Price"
                    }
                },
                "coordinate": {
                    "$ref": "#/definitions/Coordinate"
                },
                "time": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "distance": {
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "TotalToll": {
            "type": "object",
            "properties": {
                "vehicle": {
                    "type": "string",
                    "enum": [
                        "NotSet",
                        "CarDiesel",
                        "CarGasolineOrHybrid",
                        "CarZeroEmission",
                        "TruckEuroV",
                        "TruckEuroVI",
                        "CarGeneral",
                        "TruckGeneral"
                    ]
                },
                "rushHoursToll": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "regularToll": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "totalPrice": {
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "TripSearchResponseDTO": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "travelTimeInMinutes": {
                    "type": "number"
                },
                "totalToll": {
                    "$ref": "#/definitions/TotalToll"
                },
                "tollStations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TollStationV2"
                    }
                }
            }
        },
        "TripSearchDTO": {
            "type": "object",
            "properties": {
                "routePoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Coordinate"
                    }
                },
                "vehicleType": {
                    "type": "string",
                    "enum": [
                        "NotSet",
                        "CarDiesel",
                        "CarGasolineOrHybrid",
                        "CarZeroEmission",
                        "TruckEuroV",
                        "TruckEuroVI",
                        "CarGeneral",
                        "TruckGeneral"
                    ]
                }
            }
        },
        "MobileAppSpecificRightsInfo": {
            "type": "object",
            "properties": {
                "hourRegistrationEnabled": {
                    "type": "boolean"
                },
                "projectEnabled": {
                    "type": "boolean"
                },
                "departmentEnabled": {
                    "type": "boolean"
                },
                "userIsAllowedToRegisterHours": {
                    "type": "boolean"
                },
                "payrollAccountingEnabled": {
                    "type": "boolean"
                },
                "userIsAuthWageMenu": {
                    "type": "boolean"
                },
                "userIsAuthMySalary": {
                    "type": "boolean"
                },
                "electronicVouchersEnabled": {
                    "type": "boolean"
                },
                "travelExpenseEnabled": {
                    "type": "boolean"
                },
                "documentArchiveEnabled": {
                    "type": "boolean"
                },
                "archiveReceptionEnabled": {
                    "type": "boolean"
                },
                "userIsPayslipOnly": {
                    "type": "boolean"
                },
                "travelExpenseRatesEnabled": {
                    "type": "boolean"
                },
                "taxFreeMileageRatesEnabled": {
                    "type": "boolean"
                },
                "approveTravelExpenseEnabled": {
                    "type": "boolean"
                },
                "userIsAuthProjectInfo": {
                    "type": "boolean"
                },
                "userIsAuthTravelAndExpenseApprove": {
                    "type": "boolean"
                },
                "userIsAuthEmployeeInfo": {
                    "type": "boolean"
                },
                "userIsAuthVoucherApprove": {
                    "type": "boolean"
                },
                "userIsAuthRemitApprove": {
                    "type": "boolean"
                },
                "userIsAuthInvoicing": {
                    "type": "boolean"
                },
                "userIsAuthCreateOrder": {
                    "type": "boolean"
                },
                "vatOnForCompany": {
                    "type": "boolean"
                },
                "taxFreeDietRatesEnabled": {
                    "type": "boolean"
                },
                "travelDietIgnorePostingEnabled": {
                    "type": "boolean"
                },
                "employeeEnabled": {
                    "type": "boolean"
                },
                "hourBalanceEnabledForEmployee": {
                    "type": "boolean"
                },
                "vacationBalanceEnabledForEmployee": {
                    "type": "boolean"
                },
                "userIsAuthCreateCustomer": {
                    "type": "boolean"
                },
                "userIsAuthProjectMenu": {
                    "type": "boolean"
                },
                "userIsAuthCompanyAccountingReports": {
                    "type": "boolean"
                },
                "vvselectroEnabled": {
                    "type": "boolean"
                },
                "customerEnabled": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperMobileAppSpecificRightsInfo": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/MobileAppSpecificRightsInfo"
                }
            }
        },
        "ResponseWrapperWorkingHoursCollection": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/WorkingHoursCollection"
                }
            }
        },
        "WorkingHours": {
            "type": "object",
            "properties": {
                "hours": {
                    "type": "number",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "WorkingHoursCollection": {
            "type": "object",
            "properties": {
                "employeeWorkingHours": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/WorkingHours"
                    }
                },
                "companyWorkingHours": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/WorkingHours"
                    }
                }
            }
        },
        "ListResponseMunicipality": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Municipality"
                    }
                }
            }
        },
        "MySubscriptionModuleDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "shortDescription": {
                    "type": "string"
                },
                "descriptionPart1": {
                    "type": "string"
                },
                "descriptionPart2": {
                    "type": "string"
                },
                "perUsePrice": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "perUserPrice": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "monthlyPrice": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "yearlyPrice": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "startUpPrice": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "perUserOverLimitPrice": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "priceDescription": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                },
                "available": {
                    "type": "boolean"
                },
                "processing": {
                    "type": "boolean"
                },
                "infoText": {
                    "type": "string"
                },
                "agreementTitle": {
                    "type": "string"
                },
                "agreementText": {
                    "type": "string"
                },
                "unavailableText": {
                    "type": "string"
                },
                "licenseUrl": {
                    "type": "string"
                },
                "licenseText": {
                    "type": "string"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "priceLine1Text": {
                    "type": "string"
                },
                "priceLine2Text": {
                    "type": "string"
                },
                "priceLine3Text": {
                    "type": "string"
                },
                "price1": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "price2": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "price3": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "canDeactivate": {
                    "type": "boolean"
                },
                "deactivationError": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperMySubscriptionModuleDTO[]": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MySubscriptionModuleDTO"
                    }
                }
            }
        },
        "AccountClosureInfoDTO": {
            "type": "object",
            "properties": {
                "customerCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "readAccess": {
                    "type": "boolean"
                },
                "nbOfYears": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MySubscriptionAccountInfoDTO": {
            "type": "object",
            "properties": {
                "readOnlyPackagePrice": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "voucherModule": {
                    "type": "string"
                },
                "suspended": {
                    "type": "boolean"
                },
                "canReopen": {
                    "type": "boolean"
                },
                "reopenLimitDate": {
                    "type": "string",
                    "format": "date"
                },
                "reopenNumberOfDays": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ResponseWrapperMySubscriptionAccountInfoDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/MySubscriptionAccountInfoDTO"
                }
            }
        },
        "ResponseWrapperServiceActivationResponseDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ServiceActivationResponseDTO"
                }
            }
        },
        "Result": {
            "type": "object",
            "properties": {
                "returnValue": {
                    "type": "object"
                },
                "forward": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "validations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "popups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "changes": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "ServiceActivationResponseDTO": {
            "type": "object",
            "properties": {
                "result": {
                    "$ref": "#/definitions/Result"
                }
            }
        },
        "AccountClosureFeedback": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "customerCompanyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "reason": {
                    "type": "string",
                    "maxLength": 255
                },
                "comment": {
                    "type": "string",
                    "maxLength": 1024
                }
            }
        },
        "ResponseWrapperAccountClosureFeedback": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AccountClosureFeedback"
                }
            }
        },
        "ResponseWrapperOrder": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Order"
                }
            }
        },
        "ListResponseOrder": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Order"
                    }
                }
            }
        },
        "OrderOffer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "offerDate": {
                    "type": "string"
                },
                "customer": {
                    "description": "The offer's customer",
                    "$ref": "#/definitions/Customer"
                }
            }
        },
        "ResponseWrapperOrderOffer": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/OrderOffer"
                }
            }
        },
        "ListResponseOrderOffer": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/OrderOffer"
                    }
                }
            }
        },
        "ResponseWrapperOrderGroup": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/OrderGroup"
                }
            }
        },
        "ListResponseOrderGroup": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/OrderGroup"
                    }
                }
            }
        },
        "ResponseWrapperOrderLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/OrderLine"
                }
            }
        },
        "ListResponseOrderLine": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/OrderLine"
                    }
                }
            }
        },
        "ListResponseOutgoingStock": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/OutgoingStock"
                    }
                }
            }
        },
        "OutgoingStock": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "order": {
                    "readOnly": true,
                    "$ref": "#/definitions/Order"
                },
                "product": {
                    "readOnly": true,
                    "$ref": "#/definitions/Product"
                },
                "count": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "ListResponsePaymentTypeAutomation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PaymentTypeAutomation"
                    }
                }
            }
        },
        "PaymentTypeAutomation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id corresponding to a Dropdown Type used in the Payment Widget's dropdown elements"
                },
                "description": {
                    "type": "string",
                    "description": "Value of a Dropdown Type used in the Payment Widget's dropdown elements"
                },
                "paymentIntegration": {
                    "type": "string",
                    "description": "The Payment Type (NETS, AUTOPAY, POSTING_RULE)",
                    "enum": [
                        "NONE",
                        "NOT_PAID",
                        "NETS",
                        "AUTOPAY",
                        "POSTING_RULE",
                        "ZTL"
                    ]
                }
            }
        },
        "PaymentWidgetPaymentType": {
            "type": "object",
            "properties": {
                "paymentTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Id corresponding to a Dropdown Type used in the Payment Widget's dropdown elements"
                },
                "paymentTypeValue": {
                    "type": "string",
                    "description": "Value of a Dropdown Type used in the Payment Widget's dropdown elements"
                },
                "paymentIntegration": {
                    "type": "string",
                    "description": "The Payment Type (NETS, AUTOPAY, POSTING_RULE)",
                    "enum": [
                        "NONE",
                        "NOT_PAID",
                        "NETS",
                        "AUTOPAY",
                        "POSTING_RULE",
                        "ZTL"
                    ]
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Payment type's currency id"
                },
                "currencyCode": {
                    "type": "string",
                    "description": "Payment type's currency code"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Is the default payment type "
                }
            }
        },
        "ResponseWrapperSimplePaymentWidget": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SimplePaymentWidget"
                }
            }
        },
        "SimplePaymentWidget": {
            "type": "object",
            "properties": {
                "paymentTypes": {
                    "type": "array",
                    "description": "List of payment types used in this Payment Widget",
                    "items": {
                        "$ref": "#/definitions/PaymentWidgetPaymentType"
                    }
                },
                "selectedPaymentType": {
                    "description": "Default payment type for this Payment Widget",
                    "$ref": "#/definitions/PaymentWidgetPaymentType"
                },
                "date": {
                    "type": "string",
                    "description": "Date of the payment to be registered in the Payment Widget"
                },
                "amount": {
                    "description": "Amount of the payment to be registered in the Payment Widget",
                    "$ref": "#/definitions/TlxNumber"
                },
                "bankAccount": {
                    "type": "string",
                    "description": "Bank account used to register payment in the Payment Widget"
                },
                "kid": {
                    "type": "string",
                    "description": "Kid used to register payment in the Payment Widget"
                },
                "readOnlyBankAccount": {
                    "type": "boolean",
                    "description": "Field for making the bank account field readOnly in the Payment Widget"
                },
                "readOnlyKid": {
                    "type": "boolean",
                    "description": "Field for making the kid field readOnly in the Payment Widget"
                }
            }
        },
        "AdvancedPaymentWidget": {
            "type": "object",
            "properties": {
                "paymentTypes": {
                    "type": "array",
                    "description": "List of payment types used in this Advanced Payment Widget",
                    "items": {
                        "$ref": "#/definitions/PaymentWidgetPaymentType"
                    }
                },
                "selectedPaymentType": {
                    "description": "Default payment type for this Advanced Payment Widget",
                    "$ref": "#/definitions/PaymentWidgetPaymentType"
                },
                "isAutoPay": {
                    "type": "boolean",
                    "description": "Flag for an AutoPay payment"
                },
                "isZtl": {
                    "type": "boolean",
                    "description": "Flag for a ZTL payment"
                },
                "isForeignPayment": {
                    "type": "boolean",
                    "description": "Flag for an AutoPay foreign payment"
                },
                "creditorBankIdentificator": {
                    "type": "integer",
                    "format": "int32",
                    "description": "AutoPay's SWIFT or bank code type for an abroad payment"
                },
                "creditorName": {
                    "type": "string",
                    "description": "AutoPay's creditor name for an abroad payment"
                },
                "creditorAddress": {
                    "type": "string",
                    "description": "AutoPay's creditor address for an abroad payment"
                },
                "creditorPostalCode": {
                    "type": "string",
                    "description": "AutoPay's creditor postal code for an abroad payment"
                },
                "creditorPostalCity": {
                    "type": "string",
                    "description": "AutoPay's creditor postal city for an abroad payment"
                },
                "creditorCountryId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "AutoPay's creditor country id for an abroad payment"
                },
                "creditorBankCountryId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "AutoPay's creditor bank country id for an abroad bank code payment"
                },
                "creditorBankName": {
                    "type": "string",
                    "description": "AutoPay's creditor bank name for an abroad bank code payment"
                },
                "creditorBankAddress": {
                    "type": "string",
                    "description": "AutoPay's creditor bank address for an abroad bank code payment"
                },
                "creditorBankPostalCode": {
                    "type": "string",
                    "description": "AutoPay's creditor bank postal code for an abroad bank code payment"
                },
                "creditorBankPostalCity": {
                    "type": "string",
                    "description": "AutoPay's creditor bank postal city for an abroad bank code payment"
                },
                "creditorBankCode": {
                    "type": "string",
                    "description": "AutoPay's creditor bank code for an abroad bank code payment"
                },
                "creditorBic": {
                    "type": "string",
                    "description": "AutoPay's SWIFT code for an abroad payment"
                },
                "accountNumber": {
                    "type": "string",
                    "description": "Payment type's account number"
                },
                "customerVendorIbanOrBban": {
                    "type": "array",
                    "description": "Account numbers for this vendor",
                    "items": {
                        "type": "string"
                    }
                },
                "creditorClearingCode": {
                    "type": "string",
                    "description": "AutoPay's creditor bank code"
                },
                "isCreditorAddressOnly": {
                    "type": "boolean",
                    "description": "Flag for the creditor address"
                },
                "kid": {
                    "type": "string",
                    "description": "Kid or receiver's reference value"
                },
                "amount": {
                    "description": "Amount value in invoice currency",
                    "$ref": "#/definitions/TlxNumber"
                },
                "oppositeAmount": {
                    "description": "Amount value in payment type currency",
                    "$ref": "#/definitions/TlxNumber"
                },
                "date": {
                    "type": "string",
                    "description": "Payment's date value"
                },
                "regulatoryReportingCode": {
                    "type": "string",
                    "description": "AutoPay's regulatory reporting code"
                },
                "regulatoryReportingInfo": {
                    "type": "string",
                    "description": "AutoPay's regulatory reporting info"
                },
                "currencyCode": {
                    "type": "string",
                    "description": "Invoice currency code or default"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Invoice currency id or default"
                }
            }
        },
        "ResponseWrapperAdvancedPaymentWidget": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AdvancedPaymentWidget"
                }
            }
        },
        "RegulatoryReportingCode": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperListRegulatoryReportingCode": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegulatoryReportingCode"
                    }
                }
            }
        },
        "ResponseWrapperMapPilotFeatureBoolean": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "ExternalProduct": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "elNumber": {
                    "type": "string",
                    "maxLength": 14
                },
                "nrfNumber": {
                    "type": "string",
                    "maxLength": 14
                },
                "costExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price purchase (cost) excluding VAT in the product's currency",
                    "readOnly": true
                },
                "priceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase excluding VAT in the product's currency"
                },
                "priceIncludingVatCurrency": {
                    "type": "number",
                    "description": "Price of purchase including VAT in the product's currency"
                },
                "isInactive": {
                    "type": "boolean"
                },
                "productUnit": {
                    "$ref": "#/definitions/ProductUnit"
                },
                "isStockItem": {
                    "type": "boolean"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "discountPrice": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperExternalProduct": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ExternalProduct"
                }
            }
        },
        "ListResponseExternalProduct": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ExternalProduct"
                    }
                }
            }
        },
        "ResponseWrapperProduct": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Product"
                }
            }
        },
        "ListResponseProduct": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Product"
                    }
                }
            }
        },
        "ResponseWrapperSupplierProduct": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SupplierProduct"
                }
            }
        },
        "ListResponseSupplierProduct": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SupplierProduct"
                    }
                }
            }
        },
        "ResponseWrapperDiscountGroup": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DiscountGroup"
                }
            }
        },
        "ListResponseDiscountGroup": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/DiscountGroup"
                    }
                }
            }
        },
        "ProductInventoryLocation": {
            "type": "object",
            "required": [
                "inventory",
                "product"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "inventory": {
                    "$ref": "#/definitions/Inventory"
                },
                "inventoryLocation": {
                    "$ref": "#/definitions/InventoryLocation"
                },
                "isMainLocation": {
                    "type": "boolean"
                },
                "stockOfGoods": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProductInventoryLocation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductInventoryLocation"
                }
            }
        },
        "ListResponseProductInventoryLocation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductInventoryLocation"
                    }
                }
            }
        },
        "LogisticsSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "hasWarehouseLocation": {
                    "type": "boolean"
                },
                "showOnboardingWizard": {
                    "type": "boolean"
                },
                "moduleSuggestedProductNumber": {
                    "type": "boolean"
                },
                "suggestedProductNumber": {
                    "type": "string",
                    "maxLength": 50
                },
                "purchaseOrderDefaultComment": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperLogisticsSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/LogisticsSettings"
                }
            }
        },
        "ProductGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Product group name",
                    "maxLength": 255
                },
                "displayName": {
                    "type": "string",
                    "description": "Product group displayName",
                    "readOnly": true
                },
                "parentGroup": {
                    "description": "Product group parent",
                    "$ref": "#/definitions/ProductGroup"
                },
                "isDeletable": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProductGroup": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductGroup"
                }
            }
        },
        "ListResponseProductGroup": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductGroup"
                    }
                }
            }
        },
        "ProductGroupRelation": {
            "type": "object",
            "required": [
                "product",
                "productGroup"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "productGroup": {
                    "$ref": "#/definitions/ProductGroup"
                }
            }
        },
        "ResponseWrapperProductGroupRelation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductGroupRelation"
                }
            }
        },
        "ListResponseProductGroupRelation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductGroupRelation"
                    }
                }
            }
        },
        "ListResponseProductPrice": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductPrice"
                    }
                }
            }
        },
        "ProductPrice": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "fromDate": {
                    "type": "string"
                },
                "toDate": {
                    "type": "string"
                },
                "purchasePrice": {
                    "description": "Purchase Price excluding VAT",
                    "$ref": "#/definitions/TlxNumber"
                },
                "purchasePriceCurrency": {
                    "type": "number",
                    "description": "Purchase Price (cost) excluding VAT in the product's currency"
                },
                "costPrice": {
                    "description": "Cost Price",
                    "$ref": "#/definitions/TlxNumber"
                },
                "salesPriceExcludingVat": {
                    "description": "Sales Price excluding VAT",
                    "$ref": "#/definitions/TlxNumber"
                },
                "vatType": {
                    "$ref": "#/definitions/VatType"
                },
                "salesPriceIncludingVat": {
                    "description": "Sales Price including VAT",
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "ProductSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "moduleWarehouse": {
                    "type": "boolean"
                },
                "hasWarehouseLocation": {
                    "type": "boolean"
                },
                "newCustomerAfterLogisticsRelease": {
                    "type": "boolean",
                    "readOnly": true
                },
                "productOrderLinesSortOrder": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 3
                },
                "productSetCostFromOrderLine": {
                    "type": "boolean"
                },
                "purchaseOrderDefaultComment": {
                    "type": "string"
                },
                "modulePurchaseOrderNumberSeries": {
                    "type": "boolean"
                },
                "purchaseOrderNumberSeries": {
                    "type": "string"
                },
                "showOnboardingWizard": {
                    "type": "boolean"
                },
                "moduleSuggestedProductNumber": {
                    "type": "boolean"
                },
                "suggestedProductNumber": {
                    "type": "string"
                },
                "purchaseOrderModule": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperProductSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductSettings"
                }
            }
        },
        "ProductImport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "importFile": {
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "separator": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "COMMA",
                        "SEMICOLON"
                    ]
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "FILE_UPLOADED",
                        "FIELDS_MAPPED",
                        "IMPORT_COMPLETED",
                        "IMPORT_ABORTED"
                    ]
                },
                "productImportHeaders": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductImportHeader"
                    }
                }
            }
        },
        "ProductImportFieldDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "textKey": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "sequence": {
                    "type": "integer",
                    "format": "int32"
                },
                "mandatory": {
                    "type": "boolean"
                }
            }
        },
        "ProductImportHeader": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "productImport": {
                    "readOnly": true,
                    "$ref": "#/definitions/ProductImport"
                },
                "orderOfColumn": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "name": {
                    "type": "string",
                    "maxLength": 250
                },
                "sampleValue": {
                    "type": "string",
                    "maxLength": 250
                },
                "suggestedColumnField": {
                    "readOnly": true,
                    "$ref": "#/definitions/ProductImportFieldDTO"
                }
            }
        },
        "ResponseWrapperProductImport": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductImport"
                }
            }
        },
        "ResponseWrapperListProductImportFieldDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProductImportFieldDTO"
                    }
                }
            }
        },
        "ListResponseProductImportHeader": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductImportHeader"
                    }
                }
            }
        },
        "ListResponseProductImportHeaderFieldsRelation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductImportHeaderFieldsRelation"
                    }
                }
            }
        },
        "ProductImportHeaderFieldsRelation": {
            "type": "object",
            "required": [
                "field",
                "header",
                "productImport"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "productImport": {
                    "$ref": "#/definitions/ProductImport"
                },
                "header": {
                    "$ref": "#/definitions/ProductImportHeader"
                },
                "field": {
                    "$ref": "#/definitions/ProductImportFieldDTO"
                }
            }
        },
        "ListResponseProductPotential": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductPotential"
                    }
                }
            }
        },
        "ProductImportRowErrorMessage": {
            "type": "object",
            "properties": {
                "fieldId": {
                    "type": "integer",
                    "format": "int32"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "ProductPotential": {
            "type": "object",
            "required": [
                "productImport"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "productImport": {
                    "$ref": "#/definitions/ProductImport"
                },
                "rowContent": {
                    "description": "rowContent",
                    "$ref": "#/definitions/ProductRowJSON"
                },
                "errorMessage": {
                    "type": "array",
                    "description": "errorMessage",
                    "items": {
                        "$ref": "#/definitions/ProductImportRowErrorMessage"
                    }
                },
                "rowStatus": {
                    "type": "string",
                    "enum": [
                        "NEW",
                        "UPDATE",
                        "FAIL"
                    ]
                }
            }
        },
        "ProductRowJSON": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "productUnit": {
                    "type": "string"
                },
                "inactive": {
                    "type": "boolean"
                },
                "eanGtin": {
                    "type": "string"
                },
                "purchasePrice": {
                    "type": "string"
                },
                "sellingPriceExclVat": {
                    "type": "string"
                },
                "sellingPriceInclVat": {
                    "type": "string"
                },
                "stockItem": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperProductUnit": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductUnit"
                }
            }
        },
        "ListResponseProductUnit": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductUnit"
                    }
                }
            }
        },
        "ProductUnitMaster": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "nameShort": {
                    "type": "string",
                    "readOnly": true
                },
                "commonCode": {
                    "type": "string",
                    "readOnly": true
                },
                "peppolName": {
                    "type": "string",
                    "readOnly": true
                },
                "peppolSymbol": {
                    "type": "string",
                    "readOnly": true
                },
                "isInactive": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProductUnitMaster": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProductUnitMaster"
                }
            }
        },
        "ListResponseProductUnitMaster": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProductUnitMaster"
                    }
                }
            }
        },
        "ResponseWrapperProject": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Project"
                }
            }
        },
        "ListResponseProject": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Project"
                    }
                }
            }
        },
        "ResponseWrapperLong": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "ProjectAccess": {
            "type": "object",
            "properties": {
                "accessOrderLines": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "READ",
                        "WRITE"
                    ]
                },
                "accessHours": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "READ",
                        "WRITE"
                    ]
                },
                "accessAttachments": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "READ",
                        "WRITE"
                    ]
                },
                "accessControlForms": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "READ",
                        "WRITE"
                    ]
                }
            }
        },
        "ResponseWrapperProjectAccess": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectAccess"
                }
            }
        },
        "ResponseWrapperProjectCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectCategory"
                }
            }
        },
        "ListResponseProjectCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectCategory"
                    }
                }
            }
        },
        "Choice": {
            "type": "object",
            "required": [
                "name",
                "positive",
                "value"
            ],
            "properties": {
                "positive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ProjectOnboardingSummaryDTO": {
            "type": "object",
            "required": [
                "choices",
                "observations"
            ],
            "properties": {
                "observations": {
                    "type": "string"
                },
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Choice"
                    }
                }
            }
        },
        "ResponseWrapperProjectOnboardingSummaryDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectOnboardingSummaryDTO"
                }
            }
        },
        "ResponseWrapperProjectOrderLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectOrderLine"
                }
            }
        },
        "ListResponseProjectOrderLine": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectOrderLine"
                    }
                }
            }
        },
        "ListResponseProjectOverviewAggregate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectOverviewAggregate"
                    }
                }
            }
        },
        "ProjectOverviewAggregate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "isReadyForInvoicing": {
                    "type": "boolean"
                },
                "isClosed": {
                    "type": "boolean"
                },
                "isFixedPrice": {
                    "type": "boolean"
                },
                "isInternal": {
                    "type": "boolean"
                },
                "isAuthProjectOverviewContractType": {
                    "type": "boolean"
                },
                "projectManager": {
                    "$ref": "#/definitions/Employee"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "mainProject": {
                    "$ref": "#/definitions/Project"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "projectCategory": {
                    "$ref": "#/definitions/ProjectCategory"
                },
                "plannedBudget": {
                    "type": "number"
                },
                "completedBudget": {
                    "type": "number"
                },
                "accessType": {
                    "type": "string",
                    "description": "READ/WRITE access on project",
                    "enum": [
                        "NONE",
                        "READ",
                        "WRITE"
                    ]
                },
                "invoiceReserveTotalAmountCurrency": {
                    "type": "number"
                },
                "invoiceAkontoReserveAmountCurrency": {
                    "type": "number"
                },
                "invoiceExtracostsReserveCurrency": {
                    "type": "number"
                },
                "invoiceFeeReserveCurrency": {
                    "type": "number"
                },
                "hoursToApprove": {
                    "type": "number"
                },
                "invoicesToApprove": {
                    "type": "number"
                },
                "expensesToApprove": {
                    "type": "number"
                },
                "vouchersToApprove": {
                    "type": "number"
                },
                "isProjectAttestor": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperProjectParticipant": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectParticipant"
                }
            }
        },
        "ListResponseProjectParticipant": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectParticipant"
                    }
                }
            }
        },
        "ProjectPeriodInvoicingReserve": {
            "type": "object",
            "properties": {
                "invoiceFeeReserveCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "periodOrderLinesIncomeCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "invoiceExtracostsReserveCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "invoiceAkontoReserveAmountCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "invoiceReserveTotalAmountCurrency": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProjectPeriodInvoicingReserve": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectPeriodInvoicingReserve"
                }
            }
        },
        "ProjectPeriodInvoiced": {
            "type": "object",
            "properties": {
                "sumAmountPaid": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmountOutstanding": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmountDue": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmountDueOutstanding": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmount": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProjectPeriodInvoiced": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectPeriodInvoiced"
                }
            }
        },
        "ProjectPeriodOverallStatus": {
            "type": "object",
            "properties": {
                "income": {
                    "type": "number",
                    "readOnly": true
                },
                "costs": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProjectPeriodOverallStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectPeriodOverallStatus"
                }
            }
        },
        "ListResponseProjectPeriodMonthlyStatus": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectPeriodMonthlyStatus"
                    }
                }
            }
        },
        "ProjectPeriodMonthlyStatus": {
            "type": "object",
            "properties": {
                "income": {
                    "type": "number",
                    "readOnly": true
                },
                "costs": {
                    "type": "number",
                    "readOnly": true
                },
                "dateFrom": {
                    "type": "string",
                    "readOnly": true
                },
                "dateTo": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ProjectPeriodHourlyReport": {
            "type": "object",
            "properties": {
                "chargeableHours": {
                    "type": "number",
                    "readOnly": true
                },
                "nonChargeableHours": {
                    "type": "number",
                    "readOnly": true
                },
                "approvedButUnchargedHours": {
                    "type": "number",
                    "readOnly": true
                },
                "nonApprovedHours": {
                    "type": "number",
                    "readOnly": true
                },
                "registeredHours": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProjectPeriodHourlyReport": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectPeriodHourlyReport"
                }
            }
        },
        "ProjectBudgetStatus": {
            "type": "object",
            "properties": {
                "totalTotalIncomeCurrency": {
                    "type": "number",
                    "readOnly": true
                },
                "budgetTotalIncomeCurrency": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProjectBudgetStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectBudgetStatus"
                }
            }
        },
        "ResponseWrapperProjectActivity": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectActivity"
                }
            }
        },
        "ProjectControlForm": {
            "type": "object",
            "required": [
                "comment",
                "title"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "title": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                },
                "comment": {
                    "type": "string",
                    "minLength": 1
                },
                "completed": {
                    "type": "boolean"
                },
                "signatureRequired": {
                    "type": "boolean",
                    "readOnly": true
                },
                "signed": {
                    "type": "boolean",
                    "readOnly": true
                },
                "controlForm": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProjectControlForm": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectControlForm"
                }
            }
        },
        "ListResponseProjectControlForm": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectControlForm"
                    }
                }
            }
        },
        "ProjectControlFormType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperProjectControlFormType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectControlFormType"
                }
            }
        },
        "ListResponseProjectControlFormType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectControlFormType"
                    }
                }
            }
        },
        "ResponseWrapperProjectHourlyRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectHourlyRate"
                }
            }
        },
        "ListResponseProjectHourlyRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectHourlyRate"
                    }
                }
            }
        },
        "HourlyRate": {
            "type": "object",
            "required": [
                "hourlyRateModel",
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "startDate": {
                    "type": "string"
                },
                "hourlyRateModel": {
                    "type": "string",
                    "description": "Defines the model used for the hourly rate.",
                    "enum": [
                        "TYPE_PREDEFINED_HOURLY_RATES",
                        "TYPE_PROJECT_SPECIFIC_HOURLY_RATES",
                        "TYPE_FIXED_HOURLY_RATE"
                    ]
                },
                "projectSpecificRates": {
                    "type": "array",
                    "description": "Project specific rates if hourlyRateModel is TYPE_PROJECT_SPECIFIC_HOURLY_RATES. ",
                    "items": {
                        "$ref": "#/definitions/ProjectSpecificRate"
                    }
                },
                "fixedRate": {
                    "type": "number",
                    "description": "Fixed Hourly rates if hourlyRateModel is TYPE_FIXED_HOURLY_RATE."
                }
            }
        },
        "ResponseWrapperProjectSpecificRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectSpecificRate"
                }
            }
        },
        "ListResponseProjectSpecificRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ProjectSpecificRate"
                    }
                }
            }
        },
        "ResourcePlanActivity": {
            "type": "object",
            "properties": {
                "activityId": {
                    "type": "integer",
                    "format": "int32"
                },
                "activityName": {
                    "type": "string"
                },
                "employeeEntries": {
                    "type": "array",
                    "description": "List of EmployeeResourcePlanDTO",
                    "items": {
                        "$ref": "#/definitions/ResourcePlanEmployee"
                    }
                }
            }
        },
        "ResourcePlanBudget": {
            "type": "object",
            "properties": {
                "projectId": {
                    "type": "integer",
                    "format": "int32"
                },
                "projectName": {
                    "type": "string"
                },
                "periodStart": {
                    "type": "string"
                },
                "periodEnd": {
                    "type": "string"
                },
                "periodType": {
                    "type": "string",
                    "enum": [
                        "HOUR",
                        "DAY",
                        "WEEK",
                        "MONTH"
                    ]
                },
                "activityEntries": {
                    "type": "array",
                    "description": "List of ActivityResourcePlanDTO",
                    "items": {
                        "$ref": "#/definitions/ResourcePlanActivity"
                    }
                }
            }
        },
        "ResourcePlanEmployee": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employeeName": {
                    "type": "string"
                },
                "budget": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "remaining": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "totalHours": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "totalAllocated": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "hoursEntries": {
                    "type": "array",
                    "description": "List of HoursResourcePlanDTO",
                    "items": {
                        "$ref": "#/definitions/ResourcePlanHours"
                    }
                }
            }
        },
        "ResourcePlanHours": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "allocatedHours": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "workedHours": {
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "ResponseWrapperResourcePlanBudget": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ResourcePlanBudget"
                }
            }
        },
        "ProjectSettings": {
            "type": "object",
            "properties": {
                "approveHourLists": {
                    "type": "boolean"
                },
                "approveInvoices": {
                    "type": "boolean"
                },
                "markReadyForInvoicing": {
                    "type": "boolean"
                },
                "historicalInformation": {
                    "type": "boolean"
                },
                "projectForecast": {
                    "type": "boolean"
                },
                "budgetOnSubcontracts": {
                    "type": "boolean"
                },
                "projectCategories": {
                    "type": "boolean"
                },
                "referenceFee": {
                    "type": "boolean"
                },
                "sortOrderProjects": {
                    "type": "string",
                    "enum": [
                        "SORT_ORDER_NAME_AND_NUMBER",
                        "SORT_ORDER_NAME"
                    ]
                },
                "autoCloseInvoicedProjects": {
                    "type": "boolean"
                },
                "mustApproveRegisteredHours": {
                    "type": "boolean"
                },
                "showProjectOrderLinesToAllProjectParticipants": {
                    "type": "boolean"
                },
                "hourCostPercentage": {
                    "type": "boolean"
                },
                "fixedPriceProjectsFeeCalcMethod": {
                    "type": "string",
                    "enum": [
                        "FIXED_PRICE_PROJECTS_CALC_METHOD_INVOICED_FEE",
                        "FIXED_PRICE_PROJECTS_CALC_METHOD_PERCENT_COMPLETED"
                    ]
                },
                "fixedPriceProjectsInvoiceByProgress": {
                    "type": "boolean"
                },
                "projectBudgetReferenceFee": {
                    "type": "boolean"
                },
                "allowMultipleProjectInvoiceVat": {
                    "type": "boolean"
                },
                "standardReinvoicing": {
                    "type": "boolean"
                },
                "isCurrentMonthDefaultPeriod": {
                    "type": "boolean"
                },
                "showProjectOnboarding": {
                    "type": "boolean"
                },
                "autoConnectIncomingOrderlineToProject": {
                    "type": "boolean"
                },
                "autoGenerateProjectNumber": {
                    "type": "boolean"
                },
                "autoGenerateStartingNumber": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "projectNameScheme": {
                    "type": "string",
                    "enum": [
                        "NAME_STANDARD",
                        "NAME_INCL_CUSTOMER_NAME",
                        "NAME_INCL_PARENT_NAME",
                        "NAME_INCL_PARENT_NUMBER",
                        "NAME_INCL_PARENT_NAME_AND_NUMBER"
                    ]
                },
                "projectTypeOfContract": {
                    "type": "string",
                    "enum": [
                        "PROJECT_FIXED_PRICE",
                        "PROJECT_HOUR_RATES"
                    ]
                },
                "projectOrderLinesSortOrder": {
                    "type": "string",
                    "enum": [
                        "SORT_ORDER_ID",
                        "SORT_ORDER_DATE",
                        "SORT_ORDER_PRODUCT",
                        "SORT_ORDER_CUSTOM"
                    ]
                },
                "projectHourlyRateModel": {
                    "type": "string",
                    "enum": [
                        "TYPE_PREDEFINED_HOURLY_RATES",
                        "TYPE_PROJECT_SPECIFIC_HOURLY_RATES",
                        "TYPE_FIXED_HOURLY_RATE"
                    ]
                },
                "onlyProjectMembersCanRegisterInfo": {
                    "type": "boolean"
                },
                "onlyProjectActivitiesTimesheetRegistration": {
                    "type": "boolean"
                },
                "hourlyRateProjectsWriteUpDown": {
                    "type": "boolean"
                },
                "showRecentlyClosedProjectsOnSupplierInvoice": {
                    "type": "boolean"
                },
                "defaultProjectContractComment": {
                    "type": "string"
                },
                "defaultProjectInvoicingComment": {
                    "type": "string"
                },
                "resourcePlanning": {
                    "type": "boolean"
                },
                "resourceGroups": {
                    "type": "boolean"
                },
                "holidayPlan": {
                    "type": "boolean"
                },
                "resourcePlanPeriod": {
                    "type": "string",
                    "enum": [
                        "PERIOD_MONTH",
                        "PERIOD_WEEK",
                        "PERIOD_DAY"
                    ]
                },
                "controlFormsRequiredForInvoicing": {
                    "type": "array",
                    "description": "Control forms required for invoicing",
                    "items": {
                        "$ref": "#/definitions/ProjectControlFormType"
                    }
                },
                "controlFormsRequiredForHourTracking": {
                    "type": "array",
                    "description": "Control forms required for hour tracking",
                    "items": {
                        "$ref": "#/definitions/ProjectControlFormType"
                    }
                },
                "useLoggedInUserEmailOnProjectBudget": {
                    "type": "boolean"
                },
                "emailOnProjectBudget": {
                    "type": "string"
                },
                "useLoggedInUserEmailOnProjectContract": {
                    "type": "boolean"
                },
                "emailOnProjectContract": {
                    "type": "string"
                },
                "useLoggedInUserEmailOnDocuments": {
                    "type": "boolean"
                },
                "emailOnDocuments": {
                    "type": "string"
                },
                "useProductNetPrice": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperProjectSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectSettings"
                }
            }
        },
        "ListResponseTask": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Task"
                    }
                }
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ProjectHourlyRateTemplate": {
            "type": "object",
            "properties": {
                "startDate": {
                    "type": "string"
                },
                "showInProjectOrder": {
                    "type": "boolean",
                    "description": "Show on contract confirmation/offers"
                },
                "hourlyRateModel": {
                    "type": "string",
                    "description": "Defines the model used for the hourly rate.",
                    "enum": [
                        "TYPE_PREDEFINED_HOURLY_RATES",
                        "TYPE_PROJECT_SPECIFIC_HOURLY_RATES",
                        "TYPE_FIXED_HOURLY_RATE"
                    ]
                },
                "projectSpecificRates": {
                    "type": "array",
                    "description": "Project specific rates if hourlyRateModel is TYPE_PROJECT_SPECIFIC_HOURLY_RATES. ",
                    "items": {
                        "$ref": "#/definitions/ProjectSpecificRateTemplate"
                    }
                },
                "fixedRate": {
                    "type": "number",
                    "description": "Fixed Hourly rates if hourlyRateModel is TYPE_FIXED_HOURLY_RATE."
                }
            }
        },
        "ProjectSpecificRateTemplate": {
            "type": "object",
            "properties": {
                "hourlyRate": {
                    "type": "number"
                },
                "hourlyCostPercentage": {
                    "type": "number"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "activity": {
                    "$ref": "#/definitions/Activity"
                }
            }
        },
        "ProjectTemplate": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "isInternal": {
                    "type": "boolean"
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                },
                "displayNameFormat": {
                    "type": "string",
                    "enum": [
                        "NAME_STANDARD",
                        "NAME_INCL_CUSTOMER_NAME",
                        "NAME_INCL_PARENT_NAME",
                        "NAME_INCL_PARENT_NUMBER",
                        "NAME_INCL_PARENT_NAME_AND_NUMBER"
                    ]
                },
                "projectManager": {
                    "$ref": "#/definitions/Employee"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "mainProject": {
                    "$ref": "#/definitions/Project"
                },
                "projectCategory": {
                    "$ref": "#/definitions/ProjectCategory"
                },
                "reference": {
                    "type": "string",
                    "maxLength": 255
                },
                "externalAccountsNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "description": {
                    "type": "string"
                },
                "invoiceComment": {
                    "type": "string",
                    "description": "Comment for project invoices"
                },
                "attention": {
                    "description": "Customer in attention of person",
                    "$ref": "#/definitions/Contact"
                },
                "contact": {
                    "description": "Customer contact person.",
                    "$ref": "#/definitions/Contact"
                },
                "customer": {
                    "description": "The project's customer",
                    "$ref": "#/definitions/Customer"
                },
                "deliveryAddress": {
                    "$ref": "#/definitions/DeliveryAddress"
                },
                "vatType": {
                    "description": "The default vat type for this project.",
                    "$ref": "#/definitions/VatType"
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "markUpOrderLines": {
                    "type": "number",
                    "description": "Set mark-up (%) for order lines."
                },
                "markUpFeesEarned": {
                    "type": "number",
                    "description": "Set mark-up (%) for fees earned."
                },
                "isFixedPrice": {
                    "type": "boolean",
                    "description": "Project is fixed price if set to true, hourly rate if set to false."
                },
                "fixedprice": {
                    "type": "number",
                    "description": "Fixed price amount, in the project's currency."
                },
                "isPriceCeiling": {
                    "type": "boolean",
                    "description": "Set to true if an hourly rate project has a price ceiling."
                },
                "priceCeilingAmount": {
                    "type": "number",
                    "description": "Price ceiling amount, in the project's currency."
                },
                "generalProjectActivitiesPerProjectOnly": {
                    "type": "boolean",
                    "description": "Set to true if a general project activity must be linked to project to allow time tracking."
                },
                "forParticipantsOnly": {
                    "type": "boolean",
                    "description": "Set to true if only project participants can register information on the project"
                },
                "projectHourlyRates": {
                    "type": "array",
                    "description": "Project Rate Types tied to the project.",
                    "items": {
                        "$ref": "#/definitions/ProjectHourlyRateTemplate"
                    }
                }
            }
        },
        "ResponseWrapperProjectTemplate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProjectTemplate"
                }
            }
        },
        "Prospect": {
            "type": "object",
            "required": [
                "createdDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "description": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "customer": {
                    "$ref": "#/definitions/Customer"
                },
                "salesEmployee": {
                    "$ref": "#/definitions/Employee"
                },
                "isClosed": {
                    "type": "boolean"
                },
                "closedReason": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "closedDate": {
                    "type": "string"
                },
                "competitor": {
                    "type": "string",
                    "maxLength": 255
                },
                "prospectType": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "project": {
                    "description": "The project connected to this prospect.",
                    "$ref": "#/definitions/Project"
                },
                "projectOffer": {
                    "description": "The project offer connected to this prospect.",
                    "$ref": "#/definitions/Project"
                },
                "finalIncomeDate": {
                    "type": "string",
                    "description": "The estimated start date for income on the prospect."
                },
                "finalInitialValue": {
                    "type": "number",
                    "description": "The estimated startup fee on this prospect."
                },
                "finalMonthlyValue": {
                    "type": "number",
                    "description": "The estimated monthly fee on this prospect."
                },
                "finalAdditionalServicesValue": {
                    "type": "number",
                    "description": "Tripletex specific."
                },
                "totalValue": {
                    "type": "number",
                    "description": "The estimated total fee on this prospect.",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperProspect": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Prospect"
                }
            }
        },
        "ListResponseProspect": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Prospect"
                    }
                }
            }
        },
        "PickupPoint": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "code": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "name": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 100
                },
                "transportType": {
                    "readOnly": true,
                    "$ref": "#/definitions/TransportType"
                }
            }
        },
        "ResponseWrapperPickupPoint": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PickupPoint"
                }
            }
        },
        "TransportType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "nameKey": {
                    "type": "string",
                    "readOnly": true
                },
                "code": {
                    "type": "string",
                    "readOnly": true
                },
                "isPickUp": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "ListResponsePickupPoint": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PickupPoint"
                    }
                }
            }
        },
        "PurchaseOrder": {
            "type": "object",
            "required": [
                "deliveryDate",
                "ourContact",
                "supplier"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "description": "Purchase order number",
                    "readOnly": true,
                    "maxLength": 100
                },
                "receiverEmail": {
                    "type": "string",
                    "description": "Email when purchase order is send by email.",
                    "maxLength": 100
                },
                "discount": {
                    "type": "number",
                    "description": "Discount Percentage"
                },
                "internalComment": {
                    "type": "string"
                },
                "packingNoteMessage": {
                    "type": "string",
                    "description": "Message on packing note.Wholesaler specific.",
                    "maxLength": 50
                },
                "transporterMessage": {
                    "type": "string",
                    "description": "Message to transporter.Wholesaler specific.",
                    "maxLength": 255
                },
                "comments": {
                    "type": "string",
                    "description": "Delivery information and invoice comments"
                },
                "supplier": {
                    "$ref": "#/definitions/Supplier"
                },
                "deliveryDate": {
                    "type": "string"
                },
                "receivedDate": {
                    "type": "string"
                },
                "orderLines": {
                    "type": "array",
                    "description": "Order lines tied to the purchase order",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderline"
                    }
                },
                "project": {
                    "description": "Project/order",
                    "$ref": "#/definitions/Project"
                },
                "department": {
                    "description": "Department/order",
                    "$ref": "#/definitions/Department"
                },
                "deliveryAddress": {
                    "description": "Delivery address",
                    "$ref": "#/definitions/Address"
                },
                "creationDate": {
                    "type": "string"
                },
                "isClosed": {
                    "type": "boolean"
                },
                "ourContact": {
                    "$ref": "#/definitions/Employee"
                },
                "supplierContact": {
                    "description": "Recipient when purchase order is send by email.",
                    "$ref": "#/definitions/Employee"
                },
                "attention": {
                    "description": "Attention",
                    "$ref": "#/definitions/Employee"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "STATUS_OPEN",
                        "STATUS_SENT",
                        "STATUS_RECEIVING",
                        "STATUS_CONFIRMED_DEVIATION_DETECTED",
                        "STATUS_DEVIATION_OPEN",
                        "STATUS_DEVIATION_CONFIRMED",
                        "STATUS_CLOSED",
                        "STATUS_CANCELLED",
                        "STATUS_CONFIRMED"
                    ]
                },
                "currency": {
                    "description": "Company currency",
                    "$ref": "#/definitions/Currency"
                },
                "restorder": {
                    "readOnly": true,
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "transportType": {
                    "description": "Transport type",
                    "$ref": "#/definitions/TransportType"
                },
                "pickupPoint": {
                    "description": "Pickup point, wholesaler specific",
                    "$ref": "#/definitions/PickupPoint"
                },
                "document": {
                    "description": "The PDF representing this PurchaseOrder",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "attachment": {
                    "description": "The attachments on this PurchaseOrder (if any)",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "ediDocument": {
                    "description": "The machine readable document (such as EHF or EFO/NELFO) this PurchaseOrder is based on (if any)",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "lastSentTimestamp": {
                    "type": "string"
                },
                "lastSentEmployeeName": {
                    "type": "string"
                }
            }
        },
        "PurchaseOrderline": {
            "type": "object",
            "required": [
                "purchaseOrder"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "purchaseOrder": {
                    "description": "The purchase order to attach the orderline.",
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "supplierProduct": {
                    "$ref": "#/definitions/SupplierProduct"
                },
                "resaleProduct": {
                    "$ref": "#/definitions/Product"
                },
                "description": {
                    "type": "string"
                },
                "count": {
                    "type": "number"
                },
                "quantityReceived": {
                    "type": "number",
                    "description": "Used if the Purchase Order has a Goods received."
                },
                "unitCostCurrency": {
                    "type": "number",
                    "description": "Unit price purchase (cost) excluding VAT in the order's currency"
                },
                "unitPriceExcludingVatCurrency": {
                    "type": "number",
                    "description": "Unit price of purchase excluding VAT in the order's currency.If it's not specified,it takes the value from purchase price in productDTO"
                },
                "unitListPriceCurrency": {
                    "type": "number",
                    "description": "Unit list price of purchase excluding VAT in the order's currency.If it's not specified,it takes the value from purchase price in productDTO"
                },
                "unitPriceIncVatCurrency": {
                    "type": "number",
                    "description": "Unit  price including VAT in the order's currency.If it's not specified,it takes the value from purchase price in productDTO"
                },
                "currency": {
                    "description": "The order line's currency. Determined by the order's currency.",
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "discount": {
                    "type": "number",
                    "description": "Discount given as a percentage (%)"
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line excluding VAT in the order's currency"
                },
                "amountIncludingVatCurrency": {
                    "type": "number",
                    "description": "Total amount on order line including VAT in the order's currency",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperPurchaseOrder": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PurchaseOrder"
                }
            }
        },
        "ListResponsePurchaseOrder": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrder"
                    }
                }
            }
        },
        "BodyPart": {
            "type": "object",
            "properties": {
                "contentDisposition": {
                    "$ref": "#/definitions/ContentDisposition"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "messageBodyWorkers": {
                    "$ref": "#/definitions/MessageBodyWorkers"
                },
                "parent": {
                    "$ref": "#/definitions/MultiPart"
                },
                "providers": {
                    "$ref": "#/definitions/Providers"
                },
                "parameterizedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ParameterizedHeader"
                        }
                    }
                }
            }
        },
        "ContentDisposition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fileName": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "readDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "FormDataBodyPart": {
            "type": "object",
            "properties": {
                "contentDisposition": {
                    "$ref": "#/definitions/ContentDisposition"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "messageBodyWorkers": {
                    "$ref": "#/definitions/MessageBodyWorkers"
                },
                "parent": {
                    "$ref": "#/definitions/MultiPart"
                },
                "providers": {
                    "$ref": "#/definitions/Providers"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "formDataContentDisposition": {
                    "$ref": "#/definitions/FormDataContentDisposition"
                },
                "simple": {
                    "type": "boolean"
                },
                "parameterizedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ParameterizedHeader"
                        }
                    }
                }
            }
        },
        "FormDataContentDisposition": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "fileName": {
                    "type": "string"
                },
                "creationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "modificationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "readDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "FormDataMultiPart": {
            "type": "object",
            "properties": {
                "contentDisposition": {
                    "$ref": "#/definitions/ContentDisposition"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "messageBodyWorkers": {
                    "$ref": "#/definitions/MessageBodyWorkers"
                },
                "parent": {
                    "$ref": "#/definitions/MultiPart"
                },
                "providers": {
                    "$ref": "#/definitions/Providers"
                },
                "bodyParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BodyPart"
                    }
                },
                "fields": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/FormDataBodyPart"
                        }
                    }
                },
                "parameterizedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ParameterizedHeader"
                        }
                    }
                }
            }
        },
        "MediaType": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "subtype": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "wildcardType": {
                    "type": "boolean"
                },
                "wildcardSubtype": {
                    "type": "boolean"
                }
            }
        },
        "MessageBodyWorkers": {
            "type": "object"
        },
        "MultiPart": {
            "type": "object",
            "properties": {
                "contentDisposition": {
                    "$ref": "#/definitions/ContentDisposition"
                },
                "entity": {
                    "type": "object"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "mediaType": {
                    "$ref": "#/definitions/MediaType"
                },
                "messageBodyWorkers": {
                    "$ref": "#/definitions/MessageBodyWorkers"
                },
                "parent": {
                    "$ref": "#/definitions/MultiPart"
                },
                "providers": {
                    "$ref": "#/definitions/Providers"
                },
                "bodyParts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BodyPart"
                    }
                },
                "parameterizedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ParameterizedHeader"
                        }
                    }
                }
            }
        },
        "ParameterizedHeader": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "Providers": {
            "type": "object"
        },
        "PurchaseOrderEmail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "email": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "PurchaseOrderAddress": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "addressLine1": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "addressLine2": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "postalCode": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "city": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "displayName": {
                    "type": "string"
                },
                "displayNameInklMatrikkel": {
                    "type": "string",
                    "readOnly": true
                },
                "knr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "gnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "bnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "fnr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "snr": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "unitNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 255
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "customerVendor": {
                    "$ref": "#/definitions/Customer"
                }
            }
        },
        "ResponseWrapperPurchaseOrderAddress": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PurchaseOrderAddress"
                }
            }
        },
        "ListResponsePurchaseOrderAddress": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderAddress"
                    }
                }
            }
        },
        "ListResponsePurchaseOrderInternal": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderInternal"
                    }
                }
            }
        },
        "PurchaseOrderInternal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "totalAmount": {
                    "type": "number",
                    "description": "totalAmount"
                }
            }
        },
        "ResponseWrapperTransportType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TransportType"
                }
            }
        },
        "ListResponseTransportType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TransportType"
                    }
                }
            }
        },
        "Deviation": {
            "type": "object",
            "required": [
                "date",
                "purchaseOrderLine"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "purchaseOrderLine": {
                    "$ref": "#/definitions/PurchaseOrderline"
                },
                "date": {
                    "type": "string"
                },
                "cause": {
                    "type": "string",
                    "enum": [
                        "CAUSE_DEFECT",
                        "CAUSE_TOO_FEW",
                        "CAUSE_TOO_MANY",
                        "CAUSE_REPLACEMENT"
                    ]
                },
                "action": {
                    "type": "string",
                    "enum": [
                        "ACTION_IGNORE",
                        "ACTION_GENERATE_RESTORDER",
                        "ACTION_RETURN",
                        "ACTION_RETURN_GENERATE_RESTORDER"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "receivedBy": {
                    "type": "string",
                    "readOnly": true
                },
                "quantityOrdered": {
                    "type": "number",
                    "readOnly": true
                },
                "quantityReceived": {
                    "type": "number",
                    "readOnly": true
                },
                "deviation": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperDeviation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Deviation"
                }
            }
        },
        "ListResponseDeviation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Deviation"
                    }
                }
            }
        },
        "GoodsReceipt": {
            "type": "object",
            "required": [
                "goodsReceiptLines",
                "registrationDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "purchaseOrder": {
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "registrationDate": {
                    "type": "string"
                },
                "receivedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "status": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "STATUS_OPEN",
                        "STATUS_CONFIRMED"
                    ]
                },
                "comment": {
                    "type": "string"
                },
                "goodsReceiptLines": {
                    "type": "array",
                    "description": "Purchase Order lines tied to the goods receipt",
                    "items": {
                        "$ref": "#/definitions/GoodsReceiptLine"
                    }
                }
            }
        },
        "GoodsReceiptLine": {
            "type": "object",
            "required": [
                "product",
                "quantityReceived"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "purchaseOrder": {
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "resaleProduct": {
                    "$ref": "#/definitions/Product"
                },
                "inventory": {
                    "description": "If not entered, the default warehouse will be used",
                    "$ref": "#/definitions/Inventory"
                },
                "inventoryLocation": {
                    "description": "Inventory location field -- pilot program",
                    "$ref": "#/definitions/InventoryLocation"
                },
                "quantityOrdered": {
                    "type": "number",
                    "readOnly": true
                },
                "quantityReceived": {
                    "type": "number"
                },
                "quantityRest": {
                    "type": "number",
                    "readOnly": true
                },
                "deviation": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperGoodsReceipt": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/GoodsReceipt"
                }
            }
        },
        "ListResponseGoodsReceipt": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/GoodsReceipt"
                    }
                }
            }
        },
        "ResponseWrapperGoodsReceiptLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/GoodsReceiptLine"
                }
            }
        },
        "ListResponseGoodsReceiptLine": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/GoodsReceiptLine"
                    }
                }
            }
        },
        "PurchaseOrderIncomingInvoiceRelation": {
            "type": "object",
            "required": [
                "orderOut",
                "voucher"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "orderOut": {
                    "$ref": "#/definitions/PurchaseOrder"
                },
                "voucher": {
                    "$ref": "#/definitions/Voucher"
                }
            }
        },
        "ResponseWrapperPurchaseOrderIncomingInvoiceRelation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PurchaseOrderIncomingInvoiceRelation"
                }
            }
        },
        "ListResponsePurchaseOrderIncomingInvoiceRelation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderIncomingInvoiceRelation"
                    }
                }
            }
        },
        "ResponseWrapperPurchaseOrderline": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PurchaseOrderline"
                }
            }
        },
        "ListResponsePurchaseOrderline": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PurchaseOrderline"
                    }
                }
            }
        },
        "ResponseWrapperReminder": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Reminder"
                }
            }
        },
        "ListResponseReminder": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Reminder"
                    }
                }
            }
        },
        "CellBlueprintV1": {
            "type": "object",
            "properties": {
                "columnReference": {
                    "type": "string"
                },
                "rowReference": {
                    "type": "string"
                },
                "defaultAxis": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "ROW",
                        "COL"
                    ]
                },
                "expression": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                },
                "valueFormat": {
                    "type": "string"
                },
                "cellFormat": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "HeaderBlueprintV1": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "hideSelf": {
                    "type": "boolean"
                },
                "removeEmpty": {
                    "type": "boolean"
                },
                "expression": {
                    "type": "string"
                },
                "variableName": {
                    "type": "string"
                },
                "valueFormat": {
                    "type": "string"
                },
                "cellFormat": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "initialExpansionState": {
                    "type": "integer",
                    "format": "int32"
                },
                "filter": {
                    "$ref": "#/definitions/ReportGroupFilter"
                },
                "autoGroup": {
                    "$ref": "#/definitions/ReportGroupAutoGroup"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HeaderBlueprintV1"
                    }
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Report": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "description": "Shortcut for Report name",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "Shortcut for Report description",
                    "readOnly": true
                },
                "helpComponent": {
                    "type": "integer",
                    "format": "int32",
                    "description": "helpComponent",
                    "minimum": 0
                },
                "blueprint": {
                    "description": "blueprint",
                    "$ref": "#/definitions/ReportBlueprintV1"
                }
            }
        },
        "ReportBlueprintV1": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/ReportSettings"
                },
                "columns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HeaderBlueprintV1"
                    }
                },
                "rows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HeaderBlueprintV1"
                    }
                },
                "cells": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CellBlueprintV1"
                    }
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFeedbackSettings": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "team": {
                    "type": "string"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterAccountV3": {
            "type": "object",
            "properties": {
                "rangeFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterRange"
                    }
                },
                "singularFilters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterSingular"
                    }
                },
                "complementSingularFilters": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterActivity": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterSingular"
                    }
                },
                "complement": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterCustomer": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterSingular"
                    }
                },
                "complement": {
                    "type": "boolean"
                },
                "excludeEmptyElement": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterDepartment": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterSingular"
                    }
                },
                "complement": {
                    "type": "boolean"
                },
                "excludeEmptyElement": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterEmployee": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterSingular"
                    }
                },
                "complement": {
                    "type": "boolean"
                },
                "excludeEmptyElement": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterGeneral": {
            "type": "object",
            "properties": {
                "expression": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer",
                    "format": "int64"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterPeriod": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "integer",
                    "format": "int32"
                },
                "start": {
                    "type": "string",
                    "format": "date"
                },
                "end": {
                    "type": "string",
                    "format": "date"
                },
                "duration": {
                    "$ref": "#/definitions/ReportFilterPeriodDatum"
                },
                "offset": {
                    "$ref": "#/definitions/ReportFilterPeriodDatum"
                },
                "constrainEndToInterval": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterPeriodDatum": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer",
                    "format": "int32"
                },
                "unit": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterProduct": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterSingular"
                    }
                },
                "complement": {
                    "type": "boolean"
                },
                "excludeEmptyElement": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterProject": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterSingular"
                    }
                },
                "complement": {
                    "type": "boolean"
                },
                "excludeEmptyElement": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterRange": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "integer",
                    "format": "int32"
                },
                "to": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterSingular": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportFilterSupplier": {
            "type": "object",
            "properties": {
                "filters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportFilterSingular"
                    }
                },
                "complement": {
                    "type": "boolean"
                },
                "excludeEmptyElement": {
                    "type": "boolean"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportGroupAutoGroup": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "integer",
                    "format": "int32"
                },
                "defaultOrder": {
                    "type": "string",
                    "enum": [
                        "Ascending",
                        "Descending"
                    ]
                },
                "orderBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportGroupAutoGroupOrderBy"
                    }
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportGroupAutoGroupOrderBy": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "string",
                    "enum": [
                        "Ascending",
                        "Descending"
                    ]
                },
                "expression": {
                    "type": "string"
                }
            }
        },
        "ReportGroupFilter": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/ReportFilterAccountV3"
                },
                "customer": {
                    "$ref": "#/definitions/ReportFilterCustomer"
                },
                "department": {
                    "$ref": "#/definitions/ReportFilterDepartment"
                },
                "employee": {
                    "$ref": "#/definitions/ReportFilterEmployee"
                },
                "period": {
                    "$ref": "#/definitions/ReportFilterPeriod"
                },
                "product": {
                    "$ref": "#/definitions/ReportFilterProduct"
                },
                "project": {
                    "$ref": "#/definitions/ReportFilterProject"
                },
                "activity": {
                    "$ref": "#/definitions/ReportFilterActivity"
                },
                "supplier": {
                    "$ref": "#/definitions/ReportFilterSupplier"
                },
                "general": {
                    "$ref": "#/definitions/ReportFilterGeneral"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportSettings": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/definitions/ReportSettingsFilters"
                },
                "feedback": {
                    "$ref": "#/definitions/ReportFeedbackSettings"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportSettingsFilters": {
            "type": "object",
            "properties": {
                "order": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "period",
                            "account",
                            "customer",
                            "supplier",
                            "employee",
                            "department",
                            "project",
                            "product",
                            "activity"
                        ]
                    }
                },
                "options": {
                    "$ref": "#/definitions/ReportSettingsFilters"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportSettingsFiltersOptionsPeriod": {
            "type": "object",
            "properties": {
                "divisions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "shortcuts": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "stepSize": {
                    "type": "string",
                    "enum": [
                        "Day",
                        "Week",
                        "Month",
                        "WageTerm",
                        "VatTerm",
                        "Year"
                    ]
                },
                "initialValueProvider": {
                    "type": "string",
                    "enum": [
                        "All",
                        "ThisDay",
                        "ThisWeek",
                        "NextSevenDays",
                        "NextThirtyDays",
                        "ThisMonth",
                        "ThisYear",
                        "SoFarThisWeek",
                        "SoFarThisMonth",
                        "SoFarThisYear"
                    ]
                },
                "start": {
                    "type": "string",
                    "format": "date"
                },
                "end": {
                    "type": "string",
                    "format": "date"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ResponseWrapperReport": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Report"
                }
            }
        },
        "ListResponseReport": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Report"
                    }
                }
            }
        },
        "ListResponseReportAccess": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ReportAccess"
                    }
                }
            }
        },
        "ReportAccess": {
            "type": "object",
            "properties": {
                "report": {
                    "description": "The Report that this access description is for",
                    "readOnly": true,
                    "$ref": "#/definitions/Report"
                },
                "grant": {
                    "description": "The relevant grant of permission, if applicable",
                    "readOnly": true,
                    "$ref": "#/definitions/ReportAuthorization"
                },
                "reason": {
                    "type": "string",
                    "description": "The reason for having access",
                    "readOnly": true,
                    "enum": [
                        "Global",
                        "Owner",
                        "Administrator",
                        "Shared",
                        "None"
                    ]
                }
            }
        },
        "ReportAuthorization": {
            "type": "object",
            "required": [
                "permission",
                "report",
                "status",
                "subject"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "granter": {
                    "description": "The one granting permission",
                    "$ref": "#/definitions/Employee"
                },
                "granterDelegatorId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "If set specifies the delegator to the granter proxy employee.",
                    "minimum": 0
                },
                "subject": {
                    "description": "The one receiving permission",
                    "$ref": "#/definitions/Employee"
                },
                "subjectDelegatorId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "If set specifies the delegator to the subject proxy employee.",
                    "minimum": 0
                },
                "report": {
                    "description": "The target resource to be granted permissions for",
                    "$ref": "#/definitions/Report"
                },
                "status": {
                    "type": "string",
                    "description": "The status of this grant of authorization",
                    "enum": [
                        "Rejected",
                        "Granted"
                    ]
                },
                "permission": {
                    "type": "string",
                    "description": "The specific permission this grant of authorization is for",
                    "enum": [
                        "Invalid",
                        "ViewResult",
                        "Owner"
                    ]
                }
            }
        },
        "ResponseWrapperReportAccess": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReportAccess"
                }
            }
        },
        "ListResponseReportClientAccess": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ReportClientAccess"
                    }
                }
            }
        },
        "ReportClientAccess": {
            "type": "object",
            "properties": {
                "reportAccess": {
                    "type": "array",
                    "description": "All ReportAccess for this client",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ReportAccess"
                    }
                },
                "clientName": {
                    "type": "string",
                    "description": "The name of the client these ReportAccess are for",
                    "readOnly": true
                },
                "clientId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The id of the client these ReportAccess are for",
                    "readOnly": true
                }
            }
        },
        "ReportResult": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "columnHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportResultColumnHeader"
                    }
                },
                "rowHeaders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportResultRowHeader"
                    }
                },
                "tableContent": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/ReportResultCell"
                        }
                    }
                },
                "rowDepth": {
                    "type": "integer",
                    "format": "int32"
                },
                "height": {
                    "type": "integer",
                    "format": "int32"
                },
                "width": {
                    "type": "integer",
                    "format": "int32"
                },
                "columnDepth": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ReportResultCell": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReportResultCellValue"
                },
                "formatted": {
                    "type": "string"
                },
                "style": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "link": {
                    "type": "string"
                }
            }
        },
        "ReportResultCellValue": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NULL",
                        "NUMBER",
                        "STRING",
                        "BOOLEAN",
                        "DATE",
                        "ERROR",
                        "REFERENCE",
                        "ARRAY",
                        "OBJECT"
                    ]
                }
            }
        },
        "ReportResultColumnHeader": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReportResultCellValue"
                },
                "formatted": {
                    "type": "string"
                },
                "style": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportResultColumnHeader"
                    }
                },
                "initiallyExpanded": {
                    "type": "boolean"
                },
                "autoGroupType": {
                    "type": "integer",
                    "format": "int32"
                },
                "leafCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "depth": {
                    "type": "integer",
                    "format": "int32"
                },
                "link": {
                    "type": "string"
                }
            }
        },
        "ReportResultEnvelope": {
            "type": "object",
            "properties": {
                "result": {
                    "description": "The Report result",
                    "readOnly": true,
                    "$ref": "#/definitions/ReportResult"
                },
                "access": {
                    "description": "Metadata of what Report this render is for and how it is accessible",
                    "readOnly": true,
                    "$ref": "#/definitions/ReportAccess"
                },
                "settings": {
                    "description": "Metadata describing the report settings",
                    "readOnly": true,
                    "$ref": "#/definitions/ReportSettings"
                }
            }
        },
        "ReportResultRowHeader": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReportResultCellValue"
                },
                "formatted": {
                    "type": "string"
                },
                "style": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportResultRowHeader"
                    }
                },
                "initiallyExpanded": {
                    "type": "boolean"
                },
                "autoGroupType": {
                    "type": "integer",
                    "format": "int32"
                },
                "leafCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "depth": {
                    "type": "integer",
                    "format": "int32"
                },
                "link": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperReportResultEnvelope": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReportResultEnvelope"
                }
            }
        },
        "ResponseWrapperReportAuthorization": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReportAuthorization"
                }
            }
        },
        "ListResponseReportAuthorization": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ReportAuthorization"
                    }
                }
            }
        },
        "ReelDocumentationDTO": {
            "type": "object",
            "properties": {
                "summaryKey": {
                    "type": "string",
                    "description": "The summary text key"
                },
                "descriptionKey": {
                    "type": "string",
                    "description": "The description text key"
                }
            }
        },
        "ReelDomainDTO": {
            "type": "object",
            "properties": {
                "namespace": {
                    "type": "string",
                    "description": "The namespace of the domain"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the domain"
                },
                "functions": {
                    "type": "array",
                    "description": "The functions of the domain",
                    "items": {
                        "$ref": "#/definitions/ReelFunctionDTO"
                    }
                },
                "documentation": {
                    "description": "The documentation for this domain",
                    "$ref": "#/definitions/ReelDocumentationDTO"
                }
            }
        },
        "ReelFunctionDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the function"
                },
                "namespace": {
                    "type": "string",
                    "description": "The domain namespace of the function"
                },
                "documentation": {
                    "description": "The documentation for this function",
                    "$ref": "#/definitions/ReelDocumentationDTO"
                }
            }
        },
        "ResponseWrapperReelDomainDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReelDomainDTO"
                }
            }
        },
        "ListResponseReelDomainDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ReelDomainDTO"
                    }
                }
            }
        },
        "ListResponseReelFunctionDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ReelFunctionDTO"
                    }
                }
            }
        },
        "ReportResultParameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "$ref": "#/definitions/ReportGroupFilter"
                },
                "expandState": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                }
            }
        },
        "ListResponseSystemReportCategoryDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SystemReportCategoryDTO"
                    }
                }
            }
        },
        "SystemReportCategoryDTO": {
            "type": "object",
            "properties": {
                "textKey": {
                    "type": "string",
                    "description": "The text key for the name of the report category"
                },
                "theme": {
                    "type": "string",
                    "description": "The theme of the report category"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon for the report category"
                },
                "reports": {
                    "type": "array",
                    "description": "The reports in this report category",
                    "items": {
                        "$ref": "#/definitions/SystemReportDTO"
                    }
                },
                "subCategories": {
                    "type": "array",
                    "description": "The report categories in this report category",
                    "items": {
                        "$ref": "#/definitions/SystemReportCategoryDTO"
                    }
                }
            }
        },
        "SystemReportDTO": {
            "type": "object",
            "properties": {
                "textKey": {
                    "type": "string",
                    "description": "The text key for the name of the report"
                },
                "text": {
                    "type": "string",
                    "description": "The name of the report"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the report"
                }
            }
        },
        "ResourceMessages": {
            "type": "object",
            "properties": {
                "no": {
                    "type": "object",
                    "description": "Map of key value pairs for Norwegian text",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "en": {
                    "type": "object",
                    "description": "Map of key value pairs for English text",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "ResponseWrapperResourceMessages": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ResourceMessages"
                }
            }
        },
        "ResourceMessagesArgs": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "RP2PermissionsDTO": {
            "type": "object",
            "properties": {
                "canViewEmployees": {
                    "type": "boolean"
                },
                "canViewProjects": {
                    "type": "boolean"
                },
                "canSeeOtherEmployees": {
                    "type": "boolean"
                },
                "canOpenJobs": {
                    "type": "boolean"
                },
                "canEdit": {
                    "type": "boolean"
                },
                "canCreate": {
                    "type": "boolean"
                },
                "canDelete": {
                    "type": "boolean"
                },
                "canFilter": {
                    "type": "boolean"
                },
                "canBatchEdit": {
                    "type": "boolean"
                },
                "canBatchSelect": {
                    "type": "boolean"
                },
                "canBatchDelete": {
                    "type": "boolean"
                },
                "canAssignOwnProjects": {
                    "type": "boolean"
                },
                "canAssignAllProjects": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperRP2PermissionsDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/RP2PermissionsDTO"
                }
            }
        },
        "RP2ModalPermissionsDTO": {
            "type": "object",
            "properties": {
                "readonly": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperRP2ModalPermissionsDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/RP2ModalPermissionsDTO"
                }
            }
        },
        "ListResponseRP2EmployeeAvailableTime": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RP2EmployeeAvailableTime"
                    }
                }
            }
        },
        "RP2EmployeeAvailableTime": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "periodId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "duration": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "durationUnit": {
                    "type": "string"
                }
            }
        },
        "ListResponseRP2EmployeeBookedTime": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RP2EmployeeBookedTime"
                    }
                }
            }
        },
        "RP2EmployeeBookedTime": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "periodId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "duration": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "durationUnit": {
                    "type": "string"
                }
            }
        },
        "ListResponseRP2EmployeeJob": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RP2EmployeeJob"
                    }
                }
            }
        },
        "RP2EmployeeJob": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "type": "string"
                },
                "subLabel": {
                    "type": "string"
                },
                "duration": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "durationUnit": {
                    "type": "string"
                },
                "periodId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "subPeriodId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "startDate": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                }
            }
        },
        "RP2EmployeeJobMoveResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employeeIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "ResponseWrapperRP2EmployeeJobMoveResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/RP2EmployeeJobMoveResponse"
                }
            }
        },
        "RP2JobTemplate": {
            "type": "object",
            "properties": {
                "employeeIds": {
                    "type": "array",
                    "description": "List of employeeIds assigned to the job",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "activityId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "projectId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "date": {
                    "type": "string"
                },
                "durationAmount": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "durationUnit": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "periodCount": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "startTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperRP2JobTemplate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/RP2JobTemplate"
                }
            }
        },
        "RP2JobPatchTemplate": {
            "type": "object",
            "properties": {
                "employeeIds": {
                    "type": "array",
                    "description": "List of employeeIds assigned to the job",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "activityId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "projectId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "date": {
                    "type": "string"
                },
                "durationAmount": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "durationUnit": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                }
            }
        },
        "ListResponseRP2ProjectBookedTime": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RP2ProjectBookedTime"
                    }
                }
            }
        },
        "RP2ProjectBookedTime": {
            "type": "object",
            "properties": {
                "projectId": {
                    "type": "integer",
                    "format": "int32"
                },
                "periodId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "duration": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "durationUnit": {
                    "type": "string"
                }
            }
        },
        "ListResponseRP2ProjectJob": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RP2ProjectJob"
                    }
                }
            }
        },
        "RP2ProjectJob": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "label": {
                    "type": "string"
                },
                "subLabel": {
                    "type": "string"
                },
                "duration": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "durationUnit": {
                    "type": "string"
                },
                "periodId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "subPeriodId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                },
                "startDate": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                }
            }
        },
        "RP2ProjectJobMoveResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "type": "integer",
                    "format": "int32"
                },
                "projectId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ResponseWrapperRP2ProjectJobMoveResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/RP2ProjectJobMoveResponse"
                }
            }
        },
        "ListResponseRP2TotalTime": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RP2TotalTime"
                    }
                }
            }
        },
        "RP2TotalTime": {
            "type": "object",
            "properties": {
                "periodId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 7
                },
                "duration": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "durationUnit": {
                    "type": "string"
                }
            }
        },
        "ListResponseResultBudget": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ResultBudget"
                    }
                }
            }
        },
        "ResultBudget": {
            "type": "object",
            "required": [
                "account",
                "accountingPeriod"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "accountingPeriod": {
                    "$ref": "#/definitions/AccountingPeriod"
                },
                "amount": {
                    "type": "number"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "product": {
                    "$ref": "#/definitions/Product"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "resultBudgetType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "COMPANY",
                        "DEPARTMENT",
                        "EMPLOYEE",
                        "PROJECT",
                        "PRODUCT"
                    ]
                }
            }
        },
        "ResponseWrapperResultBudget": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ResultBudget"
                }
            }
        },
        "ResponseWrapperSalaryType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryType"
                }
            }
        },
        "ListResponseSalaryType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryType"
                    }
                }
            }
        },
        "ResponseWrapperTskInternalContextDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TskInternalContextDTO"
                }
            }
        },
        "TskInternalContextDTO": {
            "type": "object",
            "properties": {
                "companyName": {
                    "type": "string"
                }
            }
        },
        "CreateSalaryEmployee": {
            "type": "object",
            "required": [
                "firstName",
                "lastName"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "employeeNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "employments": {
                    "type": "array",
                    "description": "Employments tied to the employee",
                    "items": {
                        "$ref": "#/definitions/Employment"
                    }
                },
                "employeeCategory": {
                    "$ref": "#/definitions/EmployeeCategory"
                },
                "pictureId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperCreateSalaryEmployee": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CreateSalaryEmployee"
                }
            }
        },
        "ResponseWrapperSalaryV2Employee": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Employee"
                }
            }
        },
        "SalaryV2Employee": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "firstName": {
                    "type": "string",
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 100
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "employeeNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "pictureId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "phoneNumberSmsCertified": {
                    "type": "string",
                    "readOnly": true
                },
                "nameAndNumber": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperSalaryV2Payment": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Payment"
                }
            }
        },
        "SalaryV2Payment": {
            "type": "object",
            "required": [
                "employee",
                "employment"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "transaction": {
                    "$ref": "#/definitions/SalaryV2Transaction"
                },
                "employee": {
                    "$ref": "#/definitions/SalaryV2Employee"
                },
                "employment": {
                    "$ref": "#/definitions/Employment"
                },
                "date": {
                    "type": "string",
                    "description": "Voucher date."
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "vacationAllowanceAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "grossAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "sumAmountTaxDeductions": {
                    "type": "number",
                    "readOnly": true
                },
                "payrollTaxAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "payrollTaxBasis": {
                    "type": "number",
                    "readOnly": true
                },
                "payrollTaxMunicipality": {
                    "readOnly": true,
                    "$ref": "#/definitions/Municipality"
                },
                "division": {
                    "readOnly": true,
                    "$ref": "#/definitions/Company"
                },
                "holidayAllowanceRate": {
                    "type": "number",
                    "readOnly": true
                },
                "bankAccountOrIban": {
                    "type": "string",
                    "readOnly": true
                },
                "payrollTaxPercentage": {
                    "type": "number",
                    "readOnly": true
                },
                "deliveryMethodPaySlip": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "MANUAL",
                        "EBOKS",
                        "PRINT",
                        "EMAIL",
                        "APP"
                    ]
                },
                "isTaxCardMissing": {
                    "type": "boolean",
                    "readOnly": true
                },
                "comment": {
                    "type": "string"
                },
                "specifications": {
                    "type": "array",
                    "description": "Link to salary specifications.",
                    "items": {
                        "$ref": "#/definitions/SalaryV2Specification"
                    }
                },
                "travelExpenses": {
                    "type": "array",
                    "description": "Link to salary specifications.",
                    "items": {
                        "$ref": "#/definitions/SalaryV2TravelExpense"
                    }
                },
                "employeeHourlyWage": {
                    "type": "number",
                    "readOnly": true
                },
                "taxDescription": {
                    "type": "string",
                    "readOnly": true
                },
                "grossAmountDescription": {
                    "type": "string",
                    "readOnly": true
                },
                "seamenDaysOnBoard": {
                    "type": "integer",
                    "format": "int32"
                },
                "lastMonthPaidAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "employeeSalaryDate": {
                    "type": "string",
                    "readOnly": true
                },
                "suggestAddReadjustment": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isEmploymentInfoAmeldinger": {
                    "type": "boolean",
                    "readOnly": true
                },
                "seamenDeduction": {
                    "type": "boolean"
                },
                "validationResults": {
                    "readOnly": true,
                    "$ref": "#/definitions/SalaryV2PaymentValidationResult"
                }
            }
        },
        "SalaryV2PaymentType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "typeOfPayment": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "NONE",
                        "NOT_PAID",
                        "NETS",
                        "AUTOPAY",
                        "POSTING_RULE",
                        "ZTL"
                    ]
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "SalaryV2PaymentValidationResult": {
            "type": "object",
            "properties": {
                "warnings": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "validations": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "poisonPills": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "SalaryV2Specification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "specificationType": {
                    "type": "string",
                    "description": "Type of specification; only TYPE_MANUAL are user create- and editable",
                    "enum": [
                        "TYPE_MONTHLY_PAY",
                        "TYPE_HOURLIST",
                        "TYPE_HOURS",
                        "TYPE_TRAVEL_REPORT",
                        "TYPE_TAX",
                        "TYPE_MANUAL",
                        "TYPE_VACATION_ALLOWANCE",
                        "TYPE_VACATION_ALLOWANCE_EXTRA",
                        "TYPE_VACATION_CORRECTION",
                        "TYPE_VACATION_FULL_MONTH_DEDUCTION",
                        "TYPE_LEDGER",
                        "TYPE_FLEXI_ADJUSTMENT",
                        "TYPE_VACATION_ADJUSTMENT",
                        "TYPE_MESAN_BONUS",
                        "TYPE_REGULAR",
                        "TYPE_ABSENCE",
                        "TYPE_READJUSTMENT"
                    ]
                },
                "rate": {
                    "type": "number"
                },
                "count": {
                    "type": "number"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "department": {
                    "$ref": "#/definitions/Department"
                },
                "salaryType": {
                    "$ref": "#/definitions/SalaryV2Type"
                },
                "salaryPayment": {
                    "$ref": "#/definitions/SalaryV2Payment"
                },
                "employee": {
                    "$ref": "#/definitions/SalaryV2Employee"
                },
                "description": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "description": "date"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number"
                },
                "paymentAmount": {
                    "type": "number"
                },
                "supplement": {
                    "description": "Salary specification supplement. Required if the salaryType requires supplementary information.",
                    "$ref": "#/definitions/SalaryV2Supplement"
                },
                "externalChangesSinceLastTime": {
                    "type": "boolean"
                },
                "costCarrierEditable": {
                    "type": "boolean"
                },
                "countAndRateEditable": {
                    "type": "boolean"
                },
                "salaryTypeEditable": {
                    "type": "boolean"
                },
                "templateIncrement": {
                    "type": "boolean"
                },
                "refYear": {
                    "type": "integer",
                    "format": "int32"
                },
                "freeCarSpec": {
                    "type": "boolean"
                },
                "unionSpec": {
                    "type": "boolean"
                },
                "validations": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ApiValidationMessage"
                    }
                }
            }
        },
        "SalaryV2Supplement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "salarySpecification": {
                    "$ref": "#/definitions/SalaryV2Specification"
                },
                "country": {
                    "$ref": "#/definitions/Country"
                },
                "taxCountry": {
                    "$ref": "#/definitions/Country"
                },
                "carNumberOfKm": {
                    "type": "number"
                },
                "carNumberOfKmToHomeOrWork": {
                    "type": "number"
                },
                "carListPrice": {
                    "type": "number"
                },
                "carRegistrationNumber": {
                    "type": "string",
                    "maxLength": 20
                },
                "numberOfJourneys": {
                    "type": "integer",
                    "format": "int32"
                },
                "upgrossingBasis": {
                    "type": "number"
                },
                "upgrossingTableNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "yearOfIncome": {
                    "type": "integer",
                    "format": "int32"
                },
                "deductedArtistTax": {
                    "type": "integer",
                    "format": "int32"
                },
                "taxPaidAbroad": {
                    "type": "number"
                },
                "continentalShaft": {
                    "type": "boolean"
                },
                "startDate": {
                    "type": "string",
                    "description": "start date, currently only for Norwegian Continental Shaft"
                },
                "endDate": {
                    "type": "string",
                    "description": "end date, currently only for Norwegian Continental Shaft"
                },
                "numberOfDays": {
                    "type": "integer",
                    "format": "int32"
                },
                "validations": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ApiValidationMessage"
                    }
                }
            }
        },
        "SalaryV2Transaction": {
            "type": "object",
            "required": [
                "month",
                "salaryPayments",
                "year"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "description": "Voucher date."
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "periodAsString": {
                    "type": "string"
                },
                "isHistorical": {
                    "type": "boolean",
                    "description": "With historical wage vouchers you can update the wage system with information dated before the opening balance."
                },
                "payrollTaxCalcMethod": {
                    "type": "string",
                    "description": "Employee National Insurance calculation method",
                    "maxLength": 2
                },
                "voucherComment": {
                    "type": "string",
                    "description": "Comment on voucher"
                },
                "payslipGeneralComment": {
                    "type": "string",
                    "description": "Comment to be shown on all payslips"
                },
                "completed": {
                    "type": "boolean"
                },
                "reversed": {
                    "type": "boolean"
                },
                "reverser": {
                    "type": "boolean"
                },
                "okAllowReverseDifferentDate": {
                    "type": "boolean"
                },
                "paySlipsAvailableDate": {
                    "type": "string",
                    "description": "The date payslips are made available to the employee. Defaults to voucherDate."
                },
                "salaryPayments": {
                    "type": "array",
                    "description": "Link to individual payslip objects.",
                    "items": {
                        "$ref": "#/definitions/SalaryV2Payment"
                    }
                },
                "paymentDate": {
                    "type": "string",
                    "description": "The date payslips are paid"
                },
                "notDeletableMessage": {
                    "type": "string"
                },
                "hasBankTransfers": {
                    "type": "boolean"
                },
                "voucher": {
                    "description": "Link to the voucher object",
                    "$ref": "#/definitions/SalaryV2Voucher"
                },
                "allowDeletePayments": {
                    "type": "boolean",
                    "description": "True if bank payments are deletable"
                },
                "payrollTaxBasisAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "sumPaidAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "sumTotalVacationAllowanceAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "sumTaxDeductionAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "sumPayrollTaxAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "anyExternalChangesOnThisTransaction": {
                    "type": "boolean"
                },
                "attachment": {
                    "description": "If the documentation for the voucher has been provided from an external source (e.g. another system via API or a user upload) then this is a reference to the document. This is always a PDF. Note that a voucher may have both a document, an attachment and an ediDocument.",
                    "readOnly": true,
                    "$ref": "#/definitions/Document"
                },
                "ameldingWageId": {
                    "type": "integer",
                    "format": "int32"
                },
                "hourlyWageCodeIds": {
                    "type": "array",
                    "description": "List of wage code ids that are hourly wage code",
                    "readOnly": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "containsNegativeWps": {
                    "type": "boolean"
                },
                "useLandscapeForBankList": {
                    "type": "boolean"
                },
                "paymentType": {
                    "description": "Payment type in use, or default payment type",
                    "readOnly": true,
                    "$ref": "#/definitions/SalaryV2PaymentType"
                }
            }
        },
        "SalaryV2TravelExpense": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string"
                },
                "isExpense": {
                    "type": "boolean"
                },
                "specifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryV2Specification"
                    }
                },
                "title": {
                    "type": "string"
                },
                "salaryDescription": {
                    "type": "string"
                }
            }
        },
        "SalaryV2Type": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string",
                    "maxLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "displayName": {
                    "type": "string"
                },
                "payStatementCode": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "showInTimesheet": {
                    "type": "boolean",
                    "readOnly": true
                },
                "taxable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "payrollTaxable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "vacationPayable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "sickPayable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "payment": {
                    "type": "boolean",
                    "readOnly": true
                },
                "vacationAllowance": {
                    "type": "boolean",
                    "readOnly": true
                },
                "requiresAdditionalInfo": {
                    "type": "boolean",
                    "readOnly": true
                },
                "requiresSupplement": {
                    "type": "boolean",
                    "readOnly": true
                },
                "requiredSupplementFields": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "string",
                        "enum": [
                            "COUNTRY",
                            "TAX_COUNTRY",
                            "CAR_NUMBER_OF_KM",
                            "CAR_NUMBER_OF_KM_TO_HOME_OR_WORK",
                            "CAR_LIST_PRICE",
                            "CAR_REGISTRATION_NUMBER",
                            "NUMBER_OF_JOURNEYS",
                            "UPGROSSING_BASIS",
                            "UPGROSSING_TABLE_NUMBER",
                            "YEAR_OF_INCOME",
                            "DEDUCTED_ARTIST_TAX",
                            "TAX_PAID_ABROAD",
                            "SUPPORT_VESSEL",
                            "IS_CONTINENTAL_SHAFT",
                            "NORWEGIAN_SHAFT_PERIOD",
                            "NORWEGIAN_SHAFT_FIRST_60_DAYS",
                            "NUMBER_OF_DAYS"
                        ]
                    }
                },
                "rate": {
                    "type": "number",
                    "readOnly": true
                },
                "percentIncrease": {
                    "type": "number",
                    "readOnly": true
                },
                "maxRate": {
                    "type": "number",
                    "readOnly": true
                },
                "minRate": {
                    "type": "number",
                    "readOnly": true
                },
                "calcType": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "SalaryV2Voucher": {
            "type": "object",
            "required": [
                "date"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "number": {
                    "type": "integer",
                    "format": "int32",
                    "description": "System generated number that cannot be changed.",
                    "readOnly": true,
                    "minimum": 0
                },
                "reverseVoucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/SalaryV2Voucher"
                },
                "numberAsString": {
                    "type": "string"
                },
                "urlDetails": {
                    "type": "string"
                },
                "deletable": {
                    "type": "boolean"
                },
                "reversible": {
                    "type": "boolean"
                },
                "notDeletableMessage": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "attachmentId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ResponseWrapperSalaryV2Specification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Specification"
                }
            }
        },
        "ResponseWrapperSalaryV2Settings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Settings"
                }
            }
        },
        "SalaryV2Settings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "prefersOtherPayrollTaxCalculationMethod": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperSalaryV2Supplement": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Supplement"
                }
            }
        },
        "PreviousSalaryAggregates": {
            "type": "object",
            "properties": {
                "salaryTransactionId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "wagePaymentIdOfEmployee": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperMapIntegerListPreviousSalaryAggregates": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/PreviousSalaryAggregates"
                        }
                    }
                }
            }
        },
        "ResponseWrapperSalaryV2Transaction": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Transaction"
                }
            }
        },
        "ResponseWrapperSalaryV2Modules": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Modules"
                }
            }
        },
        "SalaryV2Modules": {
            "type": "object",
            "properties": {
                "moduleDepartment": {
                    "type": "boolean",
                    "description": "Module department",
                    "readOnly": true
                },
                "moduleNets": {
                    "type": "boolean",
                    "description": "Module Nets",
                    "readOnly": true
                },
                "moduleAutopay": {
                    "type": "boolean",
                    "description": "Module Autopay",
                    "readOnly": true
                },
                "moduleAgro": {
                    "type": "boolean",
                    "description": "Module Agro",
                    "readOnly": true
                },
                "moduleMamut": {
                    "type": "boolean",
                    "description": "Module Mamut",
                    "readOnly": true
                },
                "moduleEncryptedPayslip": {
                    "type": "boolean",
                    "description": "Module Encrypted Payslip",
                    "readOnly": true
                },
                "moduleUnionDeduction": {
                    "type": "boolean",
                    "description": "Module Union Deduction",
                    "readOnly": true
                },
                "moduleFreeCompanyCar": {
                    "type": "boolean",
                    "description": "Module Free Company Car",
                    "readOnly": true
                },
                "moduleMesan": {
                    "type": "boolean",
                    "description": "Module Mesan",
                    "readOnly": true
                },
                "moduleDepartmentAccounting": {
                    "type": "boolean",
                    "description": "Module department accounting",
                    "readOnly": true
                },
                "moduleWageProjectAccounting": {
                    "type": "boolean",
                    "description": "Module wage project accounting",
                    "readOnly": true
                },
                "moduleElectronicVoucher": {
                    "type": "boolean",
                    "description": "Module Electronic vouchers",
                    "readOnly": true
                },
                "moduleSeamenDeduction": {
                    "type": "boolean",
                    "description": "Module seamen deduction",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperListSalaryV2Employee": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryV2Employee"
                    }
                }
            }
        },
        "ResponseWrapperListSalaryV2PaymentType": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryV2PaymentType"
                    }
                }
            }
        },
        "ResponseWrapperListSalaryV2Voucher": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryV2Voucher"
                    }
                }
            }
        },
        "ResponseWrapperListEmployment": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Employment"
                    }
                }
            }
        },
        "ListResponseCreateSalaryEmployee": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CreateSalaryEmployee"
                    }
                }
            }
        },
        "ResponseWrapperSalaryV2Overview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Overview"
                }
            }
        },
        "SalaryV2Overview": {
            "type": "object",
            "properties": {
                "salaryTypesInUse": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryV2Type"
                    }
                },
                "rows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryV2OverviewRow"
                    }
                }
            }
        },
        "SalaryV2OverviewRow": {
            "type": "object",
            "properties": {
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "displayName": {
                    "type": "string"
                },
                "paymentSum": {
                    "type": "number"
                },
                "payrollTaxBasisSum": {
                    "type": "number"
                },
                "wageCodeBreakdown": {
                    "type": "object",
                    "description": "A map of all the wage code ids used for one employee and their respective amount",
                    "additionalProperties": {
                        "$ref": "#/definitions/TlxNumber"
                    }
                }
            }
        },
        "ResponseWrapperSalaryV2OverviewData": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2OverviewData"
                }
            }
        },
        "SalaryV2OverviewData": {
            "type": "object",
            "properties": {
                "salaryPayments": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryV2OverviewDataSalaryPayment"
                    }
                },
                "rows": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryV2OverviewDataWageCodeRow"
                    }
                }
            }
        },
        "SalaryV2OverviewDataSalaryPayment": {
            "type": "object",
            "properties": {
                "salaryPaymentId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "paymentAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "payrollTaxBasisAmount": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "SalaryV2OverviewDataWageCodeColumn": {
            "type": "object",
            "properties": {
                "salaryPaymentId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "count": {
                    "type": "number",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                },
                "isHours": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "SalaryV2OverviewDataWageCodeRow": {
            "type": "object",
            "properties": {
                "salaryTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "totalCount": {
                    "type": "number",
                    "readOnly": true
                },
                "totalAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "isPayrollTaxable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "columns": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryV2OverviewDataWageCodeColumn"
                    }
                }
            }
        },
        "ResponseWrapperListSalaryV2EmployeeToEmploymentsRelationship": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryV2EmployeeToEmploymentsRelationship"
                    }
                }
            }
        },
        "SalaryV2EmployeeToEmploymentsRelationship": {
            "type": "object",
            "properties": {
                "employee": {
                    "description": "Employee",
                    "readOnly": true,
                    "$ref": "#/definitions/SalaryV2Employee"
                },
                "employments": {
                    "type": "array",
                    "description": "Employments",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Employment"
                    }
                }
            }
        },
        "ResponseWrapperSalaryV2TravelExpense": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2TravelExpense"
                }
            }
        },
        "ResponseWrapperSalaryV2Type": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Type"
                }
            }
        },
        "ListResponseSalaryV2Type": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryV2Type"
                    }
                }
            }
        },
        "ResponseWrapperSalaryV2Voucher": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryV2Voucher"
                }
            }
        },
        "ResponseWrapperSalaryTaxcardInternal": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryTaxcardInternal"
                }
            }
        },
        "SalaryAdvanceTaxcardInternal": {
            "type": "object",
            "required": [
                "altinnTaxDeductionCardId"
            ],
            "properties": {
                "altinnTaxDeductionCardId": {
                    "$ref": "#/definitions/SalaryTaxcardInternal"
                },
                "trekkode": {
                    "type": "string",
                    "maxLength": 100
                },
                "trekkodeDescription": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "typeDescription": {
                    "type": "string"
                },
                "tabelltype": {
                    "type": "string",
                    "maxLength": 100
                },
                "tabellnummer": {
                    "type": "string",
                    "maxLength": 20
                },
                "prosentsats": {
                    "type": "number"
                },
                "antallMndForTrekk": {
                    "type": "number"
                },
                "frikortbelop": {
                    "type": "number"
                },
                "remainingFreeCardAmount": {
                    "type": "number"
                }
            }
        },
        "SalaryTaxcardInternal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "advanceTaxcards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalaryAdvanceTaxcardInternal"
                    }
                },
                "additionalInfo": {
                    "type": "string",
                    "maxLength": 250
                },
                "date": {
                    "type": "string"
                },
                "utstedtDato": {
                    "type": "string"
                },
                "arbeidstakerIdentifikator": {
                    "type": "string",
                    "maxLength": 20
                },
                "status": {
                    "type": "string"
                },
                "statusDescription": {
                    "type": "string"
                },
                "orderId": {
                    "type": "integer",
                    "format": "int32"
                },
                "yearOfIncome": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "skattekortIdentifikator": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0
                },
                "deductionPeriod": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "payrollTaxMunicipalityId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                }
            }
        },
        "ListResponseTaxcardEmployeeInternal": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TaxcardEmployeeInternal"
                    }
                }
            }
        },
        "TaxcardEmployeeInternal": {
            "type": "object",
            "properties": {
                "taxcard": {
                    "$ref": "#/definitions/SalaryTaxcardInternal"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "displayName": {
                    "type": "string"
                },
                "number": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "PrepareTaxcardsArgsInternal": {
            "type": "object",
            "properties": {
                "employeeIds": {
                    "type": "string"
                },
                "contactEmployeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "contactEmail": {
                    "type": "string"
                },
                "taxcardYear": {
                    "type": "integer",
                    "format": "int32"
                },
                "mobilePhone": {
                    "type": "string"
                },
                "mobilePhoneCountryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "notificationType": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListString": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PhonePrefixCountryInternal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperPhonePrefixCountryInternal": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PhonePrefixCountryInternal"
                }
            }
        },
        "ListResponsePhonePrefixCountryInternal": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PhonePrefixCountryInternal"
                    }
                }
            }
        },
        "ListResponseReportingCompanyInternal": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ReportingCompanyInternal"
                    }
                }
            }
        },
        "ReportingCompanyInternal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperTaxcardContactInternal": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TaxcardContactInternal"
                }
            }
        },
        "TaxcardContactInternal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                },
                "phoneNumberMobileCountry": {
                    "description": "The country of the mobile phone number. If not set, the country is derived as best as possible from phoneNumberMobile. NB! 8 digit numbers are assumed to be Norwegian.",
                    "$ref": "#/definitions/Country"
                },
                "phoneNumberMobile": {
                    "type": "string",
                    "maxLength": 100
                },
                "email": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "ListResponseTaxcardContactInternal": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TaxcardContactInternal"
                    }
                }
            }
        },
        "ResponseWrapperSalaryCompilation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryCompilation"
                }
            }
        },
        "SalaryCompilation": {
            "type": "object",
            "properties": {
                "employee": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "vacationPayBasis": {
                    "type": "number",
                    "readOnly": true
                },
                "wages": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryCompilationLine"
                    }
                },
                "expenses": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryCompilationLine"
                    }
                },
                "taxDeductions": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryCompilationLine"
                    }
                },
                "mandatoryTaxDeductions": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryCompilationLine"
                    }
                }
            }
        },
        "SalaryCompilationLine": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                },
                "taxable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "taxableDescription": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperPayslip": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Payslip"
                }
            }
        },
        "ListResponsePayslip": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Payslip"
                    }
                }
            }
        },
        "ResponseWrapperSalarySettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalarySettings"
                }
            }
        },
        "SalarySettings": {
            "type": "object",
            "required": [
                "payrollTaxCalcMethod"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "municipality": {
                    "$ref": "#/definitions/Municipality"
                },
                "payrollTaxCalcMethod": {
                    "type": "string",
                    "description": "Define the Payroll Tax Calculation Method. AA General industries,BB Central government administration and health trusts, CC Exempted business sectors (and undertakings in economic difficulty),DD Agriculture and forestry, fisheries etc., EE Reporting of payroll withholding tax only,GG Road freight transport",
                    "enum": [
                        "AA",
                        "BB",
                        "CC",
                        "C2",
                        "DD",
                        "EE",
                        "GG",
                        "JJ",
                        "EMPTY"
                    ]
                }
            }
        },
        "CompanyHoliday": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "days": {
                    "type": "number"
                },
                "vacationPayPercentage1": {
                    "type": "number"
                },
                "vacationPayPercentage2": {
                    "type": "number"
                },
                "isMaxPercentage2Amount6G": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperCompanyHoliday": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CompanyHoliday"
                }
            }
        },
        "ListResponseCompanyHoliday": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CompanyHoliday"
                    }
                }
            }
        },
        "PensionScheme": {
            "type": "object",
            "required": [
                "number",
                "startDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "number": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperPensionScheme": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PensionScheme"
                }
            }
        },
        "ListResponsePensionScheme": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PensionScheme"
                    }
                }
            }
        },
        "CompanyStandardTime": {
            "type": "object",
            "required": [
                "fromDate",
                "hoursPerDay"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "fromDate": {
                    "type": "string"
                },
                "hoursPerDay": {
                    "type": "number"
                }
            }
        },
        "ResponseWrapperCompanyStandardTime": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CompanyStandardTime"
                }
            }
        },
        "ListResponseCompanyStandardTime": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CompanyStandardTime"
                    }
                }
            }
        },
        "ResponseWrapperSalarySpecification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalarySpecification"
                }
            }
        },
        "ListResponseSalarySpecification": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalarySpecification"
                    }
                }
            }
        },
        "ResponseWrapperSalaryTransaction": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalaryTransaction"
                }
            }
        },
        "ListResponseSalaryTransaction": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalaryTransaction"
                    }
                }
            }
        },
        "ListResponseSignatureCombinationDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SignatureCombinationDTO"
                    }
                }
            }
        },
        "SignatureCombinationDTO": {
            "type": "object",
            "properties": {
                "signatureCombinationDescription": {
                    "type": "string"
                },
                "uniqueKey": {
                    "type": "string"
                },
                "companyRepresentativeDTOList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyRepresentative"
                    }
                }
            }
        },
        "ResponseWrapperSignatureStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "enum": [
                        "NOT_SIGNED",
                        "PENDING_SIGNATURE",
                        "SIGNED",
                        "NOT_A_SIGNER"
                    ]
                }
            }
        },
        "ResponseWrapperMapStringBoolean": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "ResponseWrapperCompanyVerificationType": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "enum": [
                        "UNVERIFIED",
                        "VERIFIED_ACCOUNTANT",
                        "VERIFIED_CLIENT_OF_ACCOUNTANT",
                        "VERIFIED_CUSTOMER_BANKID",
                        "VERIFIED_BY_ALTINN_MESSAGE",
                        "VERIFIED_BY_TRIPLETEX_SUPPORT",
                        "VERIFIED_BANK_AGREEMENT",
                        "VERIFIED_TRIPLETEX"
                    ]
                }
            }
        },
        "ResponseWrapperSnowplowContextSnowplowGlobalCompany": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SnowplowContextSnowplowGlobalCompany"
                }
            }
        },
        "SnowplowContext": {
            "type": "object",
            "properties": {
                "schema": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                }
            }
        },
        "SnowplowContextSnowplowGlobalCompany": {
            "type": "object",
            "properties": {
                "schema": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/SnowplowGlobalCompany"
                }
            }
        },
        "SnowplowGlobalCompany": {
            "type": "object",
            "properties": {
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isPaying": {
                    "type": "boolean"
                },
                "customerType": {
                    "type": "string",
                    "enum": [
                        "Mamut",
                        "Agro",
                        "Paying",
                        "Free",
                        "Test"
                    ]
                },
                "pilotFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "registrationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "startDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "isAccountant": {
                    "type": "boolean"
                },
                "organizationNumber": {
                    "type": "integer",
                    "format": "int64"
                },
                "package": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperSnowplowContextSnowplowGlobalEmployee": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SnowplowContextSnowplowGlobalEmployee"
                }
            }
        },
        "SnowplowContextSnowplowGlobalEmployee": {
            "type": "object",
            "properties": {
                "schema": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/SnowplowGlobalEmployee"
                }
            }
        },
        "SnowplowGlobalEmployee": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tripletexEmployeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isAccountant": {
                    "type": "boolean"
                },
                "roleIds": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            }
        },
        "ResponseWrapperSseInitializationResultDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SseInitializationResultDTO"
                }
            }
        },
        "SseInitializationResultDTO": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The contextId of the employee",
                    "readOnly": true
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The companyId of the employee",
                    "readOnly": true
                },
                "currentHiddenCursor": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The current hidden cursor",
                    "readOnly": true
                },
                "currentReadCursor": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The current read cursor",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperStorebrandPensionOnboarding": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/StorebrandPensionOnboarding"
                }
            }
        },
        "StorebrandPensionOnboarding": {
            "type": "object",
            "required": [
                "currentPensionProvider",
                "hasActivePensionContracts",
                "role"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "hasActivePensionContracts": {
                    "type": "boolean"
                },
                "currentPensionProvider": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "firstName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "lastName": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "CEO",
                        "CHAIRMAN",
                        "INSURANCE",
                        "ACCOUNTANT_EXTERNAL",
                        "HR",
                        "FINANCE",
                        "ACCOUNTANT_INTERNAL",
                        "OTHER"
                    ]
                },
                "phoneNumber": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 25
                },
                "email": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 100
                }
            }
        },
        "ResponseWrapperStorebrandPensionOnboardingQualify": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/StorebrandPensionOnboardingQualify"
                }
            }
        },
        "StorebrandPensionOnboardingQualify": {
            "type": "object",
            "properties": {
                "employee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "validEmployees": {
                    "type": "boolean",
                    "readOnly": true
                },
                "requiredModules": {
                    "type": "boolean",
                    "readOnly": true
                },
                "socialSecurityNumberWarning": {
                    "type": "string",
                    "readOnly": true
                },
                "yearlyWagesWarning": {
                    "type": "string",
                    "readOnly": true
                },
                "partTimePercentageWarning": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperSupplier": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Supplier"
                }
            }
        },
        "ListResponseSupplier": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Supplier"
                    }
                }
            }
        },
        "ResponseWrapperSupplierInvoice": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SupplierInvoice"
                }
            }
        },
        "SupplierInvoice": {
            "type": "object",
            "required": [
                "invoiceDate",
                "invoiceDueDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "invoiceNumber": {
                    "type": "string",
                    "description": "Invoice number",
                    "maxLength": 100
                },
                "invoiceDate": {
                    "type": "string"
                },
                "supplier": {
                    "description": "The invoice supplier",
                    "$ref": "#/definitions/Supplier"
                },
                "invoiceDueDate": {
                    "type": "string"
                },
                "kidOrReceiverReference": {
                    "type": "string",
                    "description": "KID or message"
                },
                "voucher": {
                    "description": "The invoice voucher.",
                    "$ref": "#/definitions/Voucher"
                },
                "amount": {
                    "type": "number",
                    "description": "In the company’s currency, typically NOK. Is 0 if value is missing.",
                    "readOnly": true
                },
                "amountCurrency": {
                    "type": "number",
                    "description": "In the specified currency."
                },
                "amountExcludingVat": {
                    "type": "number",
                    "description": "Amount excluding VAT (NOK). Is 0 if value is missing.",
                    "readOnly": true
                },
                "amountExcludingVatCurrency": {
                    "type": "number",
                    "description": "Amount excluding VAT in the specified currency. Is 0 if value is missing.",
                    "readOnly": true
                },
                "currency": {
                    "$ref": "#/definitions/Currency"
                },
                "isCreditNote": {
                    "type": "boolean",
                    "readOnly": true
                },
                "orderLines": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/OrderLine"
                    }
                },
                "payments": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Posting"
                    }
                },
                "originalInvoiceDocumentId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "approvalListElements": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VoucherApprovalListElement"
                    }
                },
                "outstandingAmount": {
                    "type": "number",
                    "description": "The amount outstanding on the invoice, in the invoice currency.",
                    "readOnly": true
                }
            }
        },
        "VoucherApprovalListElement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "voucher": {
                    "description": "The voucher.",
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "employee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "status": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "organisationLevel": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "department": {
                    "readOnly": true,
                    "$ref": "#/definitions/Department"
                },
                "project": {
                    "readOnly": true,
                    "$ref": "#/definitions/Project"
                },
                "comment": {
                    "type": "string"
                },
                "commentFromOriginator": {
                    "type": "string"
                },
                "actionDate": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ListResponseSupplierInvoice": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SupplierInvoice"
                    }
                }
            }
        },
        "OrderLinePostingDTO": {
            "type": "object",
            "required": [
                "posting"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "posting": {
                    "$ref": "#/definitions/Posting"
                },
                "orderLine": {
                    "$ref": "#/definitions/OrderLine"
                }
            }
        },
        "ResponseWrapperVoucherApprovalListElement": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherApprovalListElement"
                }
            }
        },
        "AutomationRuleDetails": {
            "type": "object",
            "properties": {
                "automationRuleId": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32"
                },
                "vatTypeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "amountMax": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "amountMaxMonthly": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int32"
                },
                "autoPayBankAgreementId": {
                    "type": "integer",
                    "format": "int32"
                },
                "selectedPaymentType": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0
                },
                "enabled": {
                    "type": "boolean"
                },
                "distributionKeyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "accountName": {
                    "type": "string"
                },
                "departmentName": {
                    "type": "string"
                },
                "paymentType": {
                    "type": "string"
                }
            }
        },
        "ListResponseSupplierAutomation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SupplierAutomation"
                    }
                }
            }
        },
        "SupplierAutomation": {
            "type": "object",
            "required": [
                "canSendEhf",
                "email",
                "name",
                "number",
                "vendorAccountNumber",
                "vendorId"
            ],
            "properties": {
                "vendorId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "automaticallyPostedInvoicesLast10Count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number automatically of the latest 10 posted invoices",
                    "readOnly": true,
                    "minimum": 0
                },
                "automaticallyPostedInvoicesLast10CountAutomation": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number automatically of the latest 10 posted invoices",
                    "minimum": 0
                },
                "automaticallyPostedInvoicesLast10CountAutomationRule": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number automatically of the latest 10 posted invoices",
                    "minimum": 0
                },
                "notAutomaticallyPostedInvoicesLast10Count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of not automatically of the latest 10 posted invoices",
                    "readOnly": true,
                    "minimum": 0
                },
                "vendorAccountNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "activated": {
                    "type": "boolean",
                    "description": "Is automation activated?"
                },
                "category": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Automation category. 0-3.",
                    "minimum": 0
                },
                "automatedCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of automated vouchers",
                    "minimum": 0
                },
                "voucherCountLast90DaysEhf": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of EHF vouchers last 90 days.",
                    "minimum": 0
                },
                "voucherCountLast90DaysNonEhf": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of non-EHF vouchers last 90 days.",
                    "minimum": 0
                },
                "voucherCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of EHF vouchers send from this supplier regardless of time.",
                    "readOnly": true,
                    "minimum": 0
                },
                "completedInvoices": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of invoices with status completed based on the last 10 invoices.",
                    "minimum": 0
                },
                "notCompletedInvoices": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of invoices with status not completed based on the last 10 invoices.",
                    "minimum": 0
                },
                "canSendEhf": {
                    "type": "boolean",
                    "description": "Whether the vendor can send EHF"
                },
                "email": {
                    "type": "string",
                    "description": "email of the vendor"
                },
                "automationRulesDetails": {
                    "description": "The vendor rule details of the vendor if he/she has chosen to have his own rules on the automation instead of FabricAi.",
                    "$ref": "#/definitions/AutomationRuleDetails"
                },
                "paymentTypeFabricAi": {
                    "type": "integer",
                    "format": "int64",
                    "description": "If set, the payment type to be used when automating an invoice from this vendor.",
                    "minimum": 0
                },
                "amountMaxFabricAiVendorInvoice": {
                    "type": "integer",
                    "format": "int32",
                    "description": "If set, gives the amount limit for automating invoices for this vendor, it the total invoice amount is above the limit, the invoice is not automated."
                },
                "dateRequestEhfSent": {
                    "type": "string",
                    "description": "The date the user has sent the request to a supplier to receive EHF."
                }
            }
        },
        "ResponseWrapperTrialInfoAutomationDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TrialInfoAutomationDTO"
                }
            }
        },
        "TrialInfoAutomationDTO": {
            "type": "object",
            "properties": {
                "totalCouldBeAutomated90days": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalCouldBeAutomated365days": {
                    "type": "integer",
                    "format": "int32"
                },
                "percentSuggestionsEHF": {
                    "type": "integer",
                    "format": "int32"
                },
                "percentAutomatedEHF": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalEHFinvoices": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalCorrectSuggestions": {
                    "type": "integer",
                    "format": "int32"
                },
                "correctSuggestions90days": {
                    "type": "integer",
                    "format": "int32"
                },
                "correctSuggestions365days": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalAutomated90days": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalAutomated365days": {
                    "type": "integer",
                    "format": "int32"
                },
                "countDeactivatedVendors": {
                    "type": "integer",
                    "format": "int32"
                },
                "countActivatedVendors": {
                    "type": "integer",
                    "format": "int32"
                },
                "getvendorsCouldBeAutomated": {
                    "type": "integer",
                    "format": "int32"
                },
                "vendorsNotSendingEhf": {
                    "type": "integer",
                    "format": "int32"
                },
                "voucherCountNonEhf": {
                    "type": "integer",
                    "format": "int32"
                },
                "percentVendorsNotSendingEhf": {
                    "type": "integer",
                    "format": "int32"
                },
                "percentInvoicesNonEhf": {
                    "type": "integer",
                    "format": "int32"
                },
                "showProjectHint": {
                    "type": "boolean"
                }
            }
        },
        "AutomationSettingsDTO": {
            "type": "object",
            "properties": {
                "canAccessAutoPay": {
                    "type": "boolean"
                },
                "canAccessFabricAi": {
                    "type": "boolean"
                },
                "canAccessFabricAiTraining": {
                    "type": "boolean"
                },
                "canAddAutoPayPayments": {
                    "type": "boolean"
                },
                "canAccessWelcomeBanner": {
                    "type": "boolean"
                },
                "hasAutomation2022ToolbarPilot": {
                    "type": "boolean"
                },
                "hasBookkeepingBeforeAttestationSetting": {
                    "type": "boolean"
                },
                "hasVoucherApprovalModule": {
                    "type": "boolean"
                },
                "testAccount": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperAutomationSettingsDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AutomationSettingsDTO"
                }
            }
        },
        "ResponseWrapperTimesheetAllocated": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimesheetAllocated"
                }
            }
        },
        "TimesheetAllocated": {
            "type": "object",
            "required": [
                "date",
                "hours"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "activity": {
                    "$ref": "#/definitions/Activity"
                },
                "date": {
                    "type": "string"
                },
                "hours": {
                    "type": "number"
                },
                "isApproved": {
                    "type": "boolean"
                },
                "managerComment": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "ListResponseTimesheetAllocated": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimesheetAllocated"
                    }
                }
            }
        },
        "CompanyHolidays": {
            "type": "object",
            "required": [
                "date",
                "percentage"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number"
                }
            }
        },
        "ResponseWrapperCompanyHolidays": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CompanyHolidays"
                }
            }
        },
        "ListResponseCompanyHolidays": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CompanyHolidays"
                    }
                }
            }
        },
        "ResponseWrapperTimesheetEntry": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimesheetEntry"
                }
            }
        },
        "TimeClock": {
            "type": "object",
            "required": [
                "date",
                "employee",
                "timeStart",
                "timeStop",
                "timesheetEntry"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "activity": {
                    "$ref": "#/definitions/Activity"
                },
                "timesheetEntry": {
                    "$ref": "#/definitions/TimesheetEntry"
                },
                "date": {
                    "type": "string"
                },
                "timeStart": {
                    "type": "string"
                },
                "timeStop": {
                    "type": "string"
                },
                "hoursStart": {
                    "type": "number",
                    "minimum": 0
                },
                "lunchBreakDuration": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "TimesheetEntry": {
            "type": "object",
            "required": [
                "activity",
                "date",
                "employee",
                "hours"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "activity": {
                    "$ref": "#/definitions/Activity"
                },
                "date": {
                    "type": "string"
                },
                "hours": {
                    "type": "number"
                },
                "chargeableHours": {
                    "type": "number",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "timeClocks": {
                    "type": "array",
                    "description": "Link to stop watches on this hour.",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimeClock"
                    }
                },
                "comment": {
                    "type": "string"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Indicates if the hour can be changed.",
                    "readOnly": true
                },
                "chargeable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "invoice": {
                    "readOnly": true,
                    "$ref": "#/definitions/Invoice"
                },
                "hourlyRate": {
                    "type": "number",
                    "readOnly": true
                },
                "hourlyCost": {
                    "type": "number",
                    "readOnly": true
                },
                "hourlyCostPercentage": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "TimesheetEntrySearchResponse": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimesheetEntry"
                    }
                },
                "sumAllHours": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ListResponseTimesheetEntry": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimesheetEntry"
                    }
                }
            }
        },
        "ResponseWrapperBigDecimal": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "number"
                }
            }
        },
        "FlexSummary": {
            "type": "object",
            "properties": {
                "incomingHourBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "outgoingHourBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "change": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "HourSummary": {
            "type": "object",
            "properties": {
                "sumHours": {
                    "type": "number",
                    "readOnly": true
                },
                "hoursWithPay": {
                    "type": "number",
                    "readOnly": true
                },
                "hourlyWageHoursWithPay": {
                    "type": "number",
                    "readOnly": true
                },
                "standardTime": {
                    "type": "number",
                    "readOnly": true
                },
                "nonChargeableHours": {
                    "type": "number",
                    "readOnly": true
                },
                "chargeableHours": {
                    "type": "number",
                    "readOnly": true
                },
                "nonChargeableHoursWithPay": {
                    "type": "number",
                    "readOnly": true
                },
                "budgetChargeableHours": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "MonthlyStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "timesheetEntries": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimesheetEntry"
                    }
                },
                "approvedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "completed": {
                    "type": "boolean",
                    "readOnly": true
                },
                "approvedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "approved": {
                    "type": "boolean",
                    "readOnly": true
                },
                "approvedUntilDate": {
                    "type": "string",
                    "readOnly": true
                },
                "monthYear": {
                    "type": "string",
                    "readOnly": true
                },
                "hoursPayout": {
                    "type": "number"
                },
                "vacationPayout": {
                    "type": "number"
                },
                "hourSummary": {
                    "readOnly": true,
                    "$ref": "#/definitions/HourSummary"
                },
                "flexSummary": {
                    "readOnly": true,
                    "$ref": "#/definitions/FlexSummary"
                },
                "vacationSummary": {
                    "readOnly": true,
                    "$ref": "#/definitions/VacationSummary"
                }
            }
        },
        "ResponseWrapperMonthlyStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/MonthlyStatus"
                }
            }
        },
        "VacationSummary": {
            "type": "object",
            "properties": {
                "incomingVacationBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "outgoingVacationBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "vacationTakenInPeriod": {
                    "type": "number",
                    "readOnly": true
                },
                "vacationTakenThisYear": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ListResponseMonthlyStatus": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/MonthlyStatus"
                    }
                }
            }
        },
        "ResponseWrapperTimesheetProjectSalaryTypeSpecification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimesheetProjectSalaryTypeSpecification"
                }
            }
        },
        "TimesheetProjectSalaryTypeSpecification": {
            "type": "object",
            "required": [
                "count",
                "date",
                "employee",
                "salaryType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "project": {
                    "$ref": "#/definitions/Project"
                },
                "salaryType": {
                    "$ref": "#/definitions/SalaryType"
                },
                "description": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "count": {
                    "type": "number"
                },
                "wagePayment": {
                    "$ref": "#/definitions/Payslip"
                }
            }
        },
        "ListResponseTimesheetProjectSalaryTypeSpecification": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimesheetProjectSalaryTypeSpecification"
                    }
                }
            }
        },
        "ResponseWrapperTimesheetSalaryTypeSpecification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimesheetSalaryTypeSpecification"
                }
            }
        },
        "TimesheetSalaryTypeSpecification": {
            "type": "object",
            "required": [
                "count",
                "date",
                "employee",
                "salaryType"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "salaryType": {
                    "$ref": "#/definitions/SalaryType"
                },
                "description": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "count": {
                    "type": "number"
                }
            }
        },
        "ListResponseTimesheetSalaryTypeSpecification": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimesheetSalaryTypeSpecification"
                    }
                }
            }
        },
        "ResponseWrapperTimesheetSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimesheetSettings"
                }
            }
        },
        "TimesheetSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "timeClock": {
                    "type": "boolean"
                },
                "timesheetCompleted": {
                    "type": "boolean"
                },
                "flexBalance": {
                    "type": "boolean"
                },
                "vacationBalance": {
                    "type": "boolean"
                },
                "defaultProjectActivity": {
                    "$ref": "#/definitions/Activity"
                }
            }
        },
        "ResponseWrapperTimeClock": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TimeClock"
                }
            }
        },
        "ListResponseTimeClock": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimeClock"
                    }
                }
            }
        },
        "ListResponseWeek": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Week"
                    }
                }
            }
        },
        "Week": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "employee": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "timesheetEntries": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TimesheetEntry"
                    }
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "week": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "completed": {
                    "type": "boolean",
                    "readOnly": true
                },
                "approved": {
                    "type": "boolean",
                    "readOnly": true
                },
                "approvedBy": {
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "approvedDate": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperWeek": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Week"
                }
            }
        },
        "ResponseWrapperAccommodationAllowance": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AccommodationAllowance"
                }
            }
        },
        "ListResponseAccommodationAllowance": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/AccommodationAllowance"
                    }
                }
            }
        },
        "ResponseWrapperCost": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Cost"
                }
            }
        },
        "ListResponseCost": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Cost"
                    }
                }
            }
        },
        "ResponseWrapperTravelExpenseParticipant": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseParticipant"
                }
            }
        },
        "ListResponseTravelExpenseParticipant": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelExpenseParticipant"
                    }
                }
            }
        },
        "ResponseWrapperDrivingStop": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DrivingStop"
                }
            }
        },
        "ResponseWrapperMileageAllowance": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/MileageAllowance"
                }
            }
        },
        "ListResponseMileageAllowance": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/MileageAllowance"
                    }
                }
            }
        },
        "ResponseWrapperMapIntegerTlxNumber": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/TlxNumber"
                    }
                }
            }
        },
        "ResponseWrapperPassenger": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Passenger"
                }
            }
        },
        "ListResponsePassenger": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Passenger"
                    }
                }
            }
        },
        "ResponseWrapperPerDiemCompensation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PerDiemCompensation"
                }
            }
        },
        "ListResponsePerDiemCompensation": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PerDiemCompensation"
                    }
                }
            }
        },
        "ListResponsePerDiemCompensationTransientDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/PerDiemCompensationTransientDTO"
                    }
                }
            }
        },
        "PerDiemCompensationTransientDTO": {
            "type": "object",
            "properties": {
                "travelExpense": {
                    "$ref": "#/definitions/TravelExpense"
                },
                "rateType": {
                    "$ref": "#/definitions/TravelExpenseRate"
                },
                "rateCategory": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                },
                "countryCode": {
                    "type": "string"
                },
                "travelExpenseZoneId": {
                    "type": "integer",
                    "format": "int32"
                },
                "overnightAccommodation": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "HOTEL",
                        "BOARDING_HOUSE_WITHOUT_COOKING",
                        "BOARDING_HOUSE_WITH_COOKING"
                    ]
                },
                "location": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "rate": {
                    "type": "number"
                },
                "amount": {
                    "type": "number"
                },
                "isDeductionForBreakfast": {
                    "type": "boolean"
                },
                "isDeductionForLunch": {
                    "type": "boolean"
                },
                "isDeductionForDinner": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperTravelExpense": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpense"
                }
            }
        },
        "ListResponseTravelExpense": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelExpense"
                    }
                }
            }
        },
        "ResponseWrapperTravelExpenseRate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseRate"
                }
            }
        },
        "ListResponseTravelExpenseRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelExpenseRate"
                    }
                }
            }
        },
        "ResponseWrapperTravelExpenseRateCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseRateCategory"
                }
            }
        },
        "ListResponseTravelExpenseRateCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelExpenseRateCategory"
                    }
                }
            }
        },
        "ResponseWrapperTravelExpenseRateCategoryGroup": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseRateCategoryGroup"
                }
            }
        },
        "TravelExpenseRateCategoryGroup": {
            "type": "object",
            "required": [
                "fromDate",
                "toDate"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "isForeignTravel": {
                    "type": "boolean"
                },
                "fromDate": {
                    "type": "string"
                },
                "toDate": {
                    "type": "string"
                }
            }
        },
        "ListResponseTravelExpenseRateCategoryGroup": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelExpenseRateCategoryGroup"
                    }
                }
            }
        },
        "ResponseWrapperTravelCostCategory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelCostCategory"
                }
            }
        },
        "ListResponseTravelCostCategory": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelCostCategory"
                    }
                }
            }
        },
        "ResponseWrapperTravelPaymentType": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelPaymentType"
                }
            }
        },
        "ListResponseTravelPaymentType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelPaymentType"
                    }
                }
            }
        },
        "ResponseWrapperTravelExpenseSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseSettings"
                }
            }
        },
        "TravelExpenseSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "useRates": {
                    "type": "boolean"
                },
                "approvalRequired": {
                    "type": "boolean"
                },
                "taxFreePerDiemRates": {
                    "type": "boolean"
                },
                "taxFreeMileageRates": {
                    "type": "boolean"
                },
                "perDiemNotCompensated": {
                    "type": "boolean"
                },
                "accommodationNotCompensated": {
                    "type": "boolean"
                },
                "mileageNotCompensated": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperTravelExpenseZone": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TravelExpenseZone"
                }
            }
        },
        "TravelExpenseZone": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "countryCode": {
                    "type": "string",
                    "description": "The ISO 3166-1 Alpha2 code of the country (2 letters). https://en.wikipedia.org/wiki/ISO_3166-1",
                    "readOnly": true
                },
                "zoneName": {
                    "type": "string",
                    "readOnly": true
                },
                "isDisabled": {
                    "type": "boolean",
                    "readOnly": true
                },
                "governmentName": {
                    "type": "string",
                    "description": "The Government name ",
                    "readOnly": true
                },
                "continent": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ListResponseTravelExpenseZone": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TravelExpenseZone"
                    }
                }
            }
        },
        "TripletexAccountReturn": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/Company"
                },
                "administrator": {
                    "$ref": "#/definitions/Employee"
                },
                "administratorApiToken": {
                    "$ref": "#/definitions/EmployeeToken"
                },
                "companyOwnedApiToken": {
                    "$ref": "#/definitions/EmployeeToken"
                },
                "companyOwnedApiTokenRobotId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "TripletexAccount": {
            "type": "object",
            "required": [
                "accountType",
                "modules"
            ],
            "properties": {
                "company": {
                    "description": "Information about the company to create. Supply as much info as you have, but at least name, type and address.",
                    "$ref": "#/definitions/Company"
                },
                "administrator": {
                    "description": "Employee to create. Department on this object will also be created if supplied. If null a dummy user and department will be created instead",
                    "$ref": "#/definitions/Employee"
                },
                "accountType": {
                    "type": "string",
                    "description": "Is this a test account or a paying account?",
                    "enum": [
                        "TEST",
                        "PAYING",
                        "FREE"
                    ]
                },
                "modules": {
                    "type": "array",
                    "description": "Sales modules (functionality in the application) to activate for the newly created account. Some modules have extra costs.",
                    "items": {
                        "$ref": "#/definitions/SalesModuleDTO"
                    }
                },
                "administratorPassword": {
                    "type": "string",
                    "description": "Password for the administrator user to create. Not a part of the administrator employee object since this is a value that never can be read (it is salted and hashed before storing)"
                },
                "sendEmails": {
                    "type": "boolean",
                    "description": "Should the regular creation emails be sent to the company created and its users? If false you probably want to set autoValidateUserLogin to true"
                },
                "autoValidateUserLogin": {
                    "type": "boolean",
                    "description": "If true, the users created will be allowed to log in without validating their email address. ONLY USE THIS IF YOU ALREADY HAVE VALIDATED THE USER EMAILS."
                },
                "createAdministratorApiToken": {
                    "type": "boolean",
                    "description": "Create an API token for the administrator user for the consumer token used during this call. The token will be returned in the response."
                },
                "createCompanyOwnedApiToken": {
                    "type": "boolean",
                    "description": "Create an API token for the company to use to call their clients, only possible for accounting and auditor accounts. The token will be returned in the response."
                },
                "mayCreateTripletexAccounts": {
                    "type": "boolean",
                    "description": "Should the company we are creating be able to create new Tripletex accounts?"
                },
                "numberOfVouchers": {
                    "type": "string",
                    "description": "Used to calculate prices.",
                    "enum": [
                        "INTERVAL_0_100",
                        "INTERVAL_101_500",
                        "INTERVAL_0_500",
                        "INTERVAL_501_1000",
                        "INTERVAL_1001_2000",
                        "INTERVAL_2001_3500",
                        "INTERVAL_3501_5000",
                        "INTERVAL_5001_10000",
                        "INTERVAL_UNLIMITED"
                    ]
                },
                "chartOfAccountsType": {
                    "type": "string",
                    "description": "The chart of accounts to use for the new company",
                    "enum": [
                        "DEFAULT",
                        "MAMUT_STD_PAYROLL",
                        "MAMUT_NARF_PAYROLL",
                        "AGRO_FORRETNING_PAYROLL",
                        "AGRO_LANDBRUK_PAYROLL",
                        "AGRO_FISKE_PAYROLL",
                        "AGRO_FORSOKSRING_PAYROLL",
                        "AGRO_IDRETTSLAG_PAYROLL",
                        "AGRO_FORENING_PAYROLL"
                    ]
                },
                "vatStatusType": {
                    "type": "string",
                    "description": "VAT type",
                    "enum": [
                        "VAT_REGISTERED",
                        "VAT_NOT_REGISTERED",
                        "VAT_APPLICANT"
                    ]
                },
                "vatTermType": {
                    "type": "string",
                    "description": "VAT period",
                    "enum": [
                        "ONE_MONTH",
                        "TWO_MONTHS",
                        "THREE_MONTHS",
                        "FOUR_MONTHS",
                        "SIX_MONTHS",
                        "YEAR"
                    ]
                },
                "bankAccount": {
                    "type": "string",
                    "description": "Main bank account"
                },
                "postAccount": {
                    "type": "string",
                    "description": "Swedish post account number (PlusGirot)"
                },
                "numberOfPrepaidUsers": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of users Prepaid. Only available for some consumers."
                },
                "customerCategoryId2": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Customer category id used to indicate that the customer is created by Salesforce"
                },
                "marketingConsent": {
                    "type": "string",
                    "description": "Marketing consent",
                    "enum": [
                        "DEFAULT",
                        "GRANTED",
                        "DENIED"
                    ]
                },
                "invoiceStartDate": {
                    "type": "string",
                    "description": "Start date for invoicing"
                },
                "invoiceEmail": {
                    "type": "string",
                    "description": "Email address used for invoices/reminders"
                },
                "customerCardId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Customer card id is used to indicate what customer account to use when creating the TripletexCompany object. 0 means customer account does not already exist."
                },
                "signedTC": {
                    "type": "string",
                    "description": "Terms and conditions",
                    "enum": [
                        "DEFAULT",
                        "GRANTED",
                        "DENIED"
                    ]
                },
                "auditor": {
                    "type": "boolean"
                },
                "reseller": {
                    "type": "boolean"
                },
                "accountingOffice": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperTripletexAccountReturn": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TripletexAccountReturn"
                }
            }
        },
        "CustomerTripletexAccount2": {
            "type": "object",
            "required": [
                "accountType",
                "modules",
                "type"
            ],
            "properties": {
                "administrator": {
                    "description": "Administrator user to create in the new company. Leave empty if calling this enpoint as an auditor og accountant company",
                    "$ref": "#/definitions/Employee"
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The customer id to an already created customer to create a Tripletex account for."
                },
                "accountType": {
                    "type": "string",
                    "enum": [
                        "TEST",
                        "PAYING",
                        "FREE"
                    ]
                },
                "accessRequestType": {
                    "type": "string",
                    "description": "If the accounting office is both an accounatant and an auditor",
                    "enum": [
                        "DEFAULT",
                        "ACCOUNTANT",
                        "AUDITOR"
                    ]
                },
                "modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SalesModuleDTO"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "ENK",
                        "AS",
                        "NUF",
                        "ANS",
                        "DA",
                        "PRE",
                        "KS",
                        "ASA",
                        "BBL",
                        "BRL",
                        "GFS",
                        "SPA",
                        "SF",
                        "IKS",
                        "KF_FKF",
                        "FCD",
                        "EOFG",
                        "BA",
                        "STI",
                        "ORG",
                        "ESEK",
                        "SA",
                        "SAM",
                        "BO",
                        "VPFO",
                        "OS",
                        "FLI",
                        "Other"
                    ]
                },
                "sendEmails": {
                    "type": "boolean",
                    "description": "Should the emails normally sent during creation be sent in this case?"
                },
                "autoValidateUserLogin": {
                    "type": "boolean",
                    "description": "Should the user be automatically validated?"
                },
                "createApiToken": {
                    "type": "boolean",
                    "description": "Creates a token for the admin user. The accounting office could also use their tokens so you might not need this."
                },
                "sendInvoiceToCustomer": {
                    "type": "boolean",
                    "description": "Should the invoices for this account be sent to the customer?"
                },
                "customerInvoiceEmail": {
                    "type": "string",
                    "description": "The address to send the invoice to at the customer."
                },
                "creatorReceivingReceipt": {
                    "type": "boolean",
                    "description": "Should the receipt for this order be sent to the user creating the account?"
                },
                "numberOfEmployees": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of employees in the customer company. Is used for calculating prices and setting some default settings, i.e. approval settings for timesheet.",
                    "minimum": 0
                },
                "administratorPassword": {
                    "type": "string",
                    "description": "The password of the administrator user."
                },
                "chartOfAccountsType": {
                    "type": "string",
                    "description": "The chart of accounts to use for the new company",
                    "enum": [
                        "DEFAULT",
                        "MAMUT_STD_PAYROLL",
                        "MAMUT_NARF_PAYROLL",
                        "AGRO_FORRETNING_PAYROLL",
                        "AGRO_LANDBRUK_PAYROLL",
                        "AGRO_FISKE_PAYROLL",
                        "AGRO_FORSOKSRING_PAYROLL",
                        "AGRO_IDRETTSLAG_PAYROLL",
                        "AGRO_FORENING_PAYROLL"
                    ]
                },
                "vatStatusType": {
                    "type": "string",
                    "description": "VAT type",
                    "enum": [
                        "VAT_REGISTERED",
                        "VAT_NOT_REGISTERED",
                        "VAT_APPLICANT"
                    ]
                },
                "vatTermType": {
                    "type": "string",
                    "description": "VAT period",
                    "enum": [
                        "ONE_MONTH",
                        "TWO_MONTHS",
                        "THREE_MONTHS",
                        "FOUR_MONTHS",
                        "SIX_MONTHS",
                        "YEAR"
                    ]
                }
            }
        },
        "OnboardAccountDTO": {
            "type": "object",
            "properties": {
                "companyName": {
                    "type": "string"
                },
                "orgNumber": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "postalCode": {
                    "type": "string"
                },
                "municipality": {
                    "type": "string"
                },
                "startDateMunicipality": {
                    "type": "string",
                    "format": "date"
                },
                "registrationDate": {
                    "type": "string",
                    "format": "date"
                },
                "vatRegistered": {
                    "type": "boolean"
                },
                "logisticsModule": {
                    "type": "boolean"
                },
                "salaryModule": {
                    "type": "boolean"
                },
                "enterprises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EnterpriseDTO"
                    }
                },
                "packageId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AgroToTripletexDTO": {
            "type": "object",
            "properties": {
                "userEmail": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperTripletexAccountPricesReturnDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TripletexAccountPricesReturnDTO"
                }
            }
        },
        "TripletexAccountPricesReturnDTO": {
            "type": "object",
            "properties": {
                "allPrices": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/definitions/TlxNumber"
                        }
                    }
                },
                "sumStartupCategory1Users": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "sumServiceCategory1Users": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "listPriceCategory1UserStartup": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "listPriceCategory1UserService": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "sumStartup": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "sumService": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "sumYearlyService": {
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "ResponseWrapperSalesForceAccountInfo": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceAccountInfo"
                }
            }
        },
        "SalesForceAccountInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "customerCompanyId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "creatorCompanyId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Represents the companyId of the creator of the account",
                    "readOnly": true
                },
                "isReseller": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isAccountant": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isAuditor": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isSuspended": {
                    "type": "boolean",
                    "readOnly": true
                },
                "moduleAccountantConnectClient": {
                    "type": "boolean",
                    "readOnly": true
                },
                "registerDate": {
                    "type": "string",
                    "description": "Tripletex account register Date",
                    "readOnly": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Tripletex account start Date",
                    "readOnly": true
                },
                "endDate": {
                    "type": "string",
                    "description": "Tripletex account end Date",
                    "readOnly": true
                },
                "invoiceStartDate": {
                    "type": "string",
                    "description": "Tripletex account invoice start date",
                    "readOnly": true
                },
                "invoicePostponeDate": {
                    "type": "string",
                    "description": "Tripletex account invoice postpone date",
                    "readOnly": true
                },
                "activeMainModule": {
                    "type": "string",
                    "description": "Active main module",
                    "readOnly": true,
                    "enum": [
                        "ACCOUNTING",
                        "INVOICE",
                        "CRM",
                        "PROJECT",
                        "WAGE",
                        "NETS_PRINT",
                        "NETS_PRINT_SALARY",
                        "OCR",
                        "REMIT",
                        "SMS_NOTIFICATION",
                        "VOUCHER_SCANNING",
                        "TIME_TRACKING",
                        "VVS_ELECTRO",
                        "UBEGRENSET_BILAG_VVS_ELEKTRO",
                        "INVOICE_OPTION_VIPPS",
                        "INVOICE_OPTION_EFAKTURA",
                        "INVOICE_OPTION_AVTALEGIRO",
                        "INVOICE_OPTION_PAPER",
                        "FACTORING_APRILA",
                        "INVOICE_OPTION_AUTOINVOICE_OUTBOUND_EHF",
                        "API_V2",
                        "SMART_SCAN",
                        "BILAG_0_100_mikro",
                        "BILAG_0_500_vanlig_legacy",
                        "BILAG_501_1000_vanlig_legacy",
                        "BILAG_1001_2000_vanlig_legacy",
                        "BILAG_2001_3500_vanlig_legacy",
                        "BILAG_3501_5000_vanlig_legacy",
                        "BILAG_5001_10001_vanlig_legacy",
                        "UBEGRENSET_BILAG_vanlig_legacy",
                        "BILAG_0_500_prosjekt_legacy",
                        "BILAG_501_1000_prosjekt_legacy",
                        "BILAG_1001_2000_prosjekt_legacy",
                        "BILAG_2001_3500_prosjekt_legacy",
                        "BILAG_3501_5000_prosjekt_legacy",
                        "BILAG_5001_10001_prosjekt_legacy",
                        "UBEGRENSET_BILAG_prosjekt_legacy",
                        "MIKRO",
                        "MINI",
                        "MEDIUM",
                        "TOTAL",
                        "BASIS",
                        "SMART",
                        "AGRO_CLIENT",
                        "MAMUT",
                        "KOMPLETT",
                        "SMART_WAGE",
                        "SMART_TIME_TRACKING",
                        "BILAG_0_500",
                        "BILAG_501_1000",
                        "BILAG_1001_2000",
                        "BILAG_2001_3500",
                        "BILAG_3501_5000",
                        "BILAG_5001_10001",
                        "UBEGRENSET_BILAG",
                        "READ_ONLY_ACCESS",
                        "READ_ONLY_ACCESS_FREE",
                        "AUTOPAY",
                        "VOUCHER_APPROVAL",
                        "SMART_PROJECT",
                        "ACCOUNT_OFFICE",
                        "UNLIMITED_VOUCHER_ACCOUNT_OFFICE",
                        "COMPANY_SERVICE_FOR_PAYING_ACCOUNT_OFFICES",
                        "AGRO_WAGE",
                        "INVOICE_OPTION_AUTOINVOICE_INCOMING_EHF",
                        "MAMUT_PROJECT",
                        "MAMUT_WITH_WAGE",
                        "USER_SERVICE_HISTORIC_CUSTOMERS_NON_STANDARD",
                        "ENCRYPTED_PAYSLIP",
                        "AGRO_LICENCE",
                        "AGRO_DOCUMENT_CENTER",
                        "AGRO_INVOICE",
                        "FIVE_EMPLOYEES",
                        "AUTOPLUS_MINI",
                        "AUTOPLUS_MEDIUM",
                        "AUTOPLUS_STOR",
                        "CASH_CREDIT_APRILA",
                        "NO1TS",
                        "NO1TS_TRAVELREPORT",
                        "NO1TS_ACCOUNTING",
                        "AGRO_INVOICE_MIGRATED",
                        "USER_CATEGORY_1_LICENSE",
                        "USER_CATEGORY_2_LICENSE",
                        "USER_CATEGORY_3_LICENSE",
                        "VOUCHER_FACTORY",
                        "OCR_AUTOPAY",
                        "CLOSED_ACCOUNT",
                        "LOGISTICS",
                        "INTEGRATION_PARTNER",
                        "CREDIT_SCORING",
                        "ZTL",
                        "PLUSS",
                        "YEAR_END_REPORTING_ENK",
                        "FACTORING_VISMA_FINANCE",
                        "YEAR_END_REPORTING_AS",
                        "BILAG_0_100_MIKRO_AUTOMATION",
                        "BILAG_0_500_AUTOMATION",
                        "BILAG_501_1000_AUTOMATION",
                        "BILAG_1001_2000_AUTOMATION",
                        "BILAG_2001_3500_AUTOMATION",
                        "BILAG_3501_5000_AUTOMATION",
                        "BILAG_5001_10001_AUTOMATION",
                        "UBEGRENSET_BILAG_AUTOMATION",
                        "CMA_SHOPIFY",
                        "CMA_MYSTORE",
                        "CMA_WOOCOMMERCE",
                        "RACKBEAT",
                        "DIYPACKAGE"
                    ]
                },
                "salesForceOpportunityDTO": {
                    "description": "Company opportunity",
                    "readOnly": true,
                    "$ref": "#/definitions/SalesForceOpportunity"
                }
            }
        },
        "SalesForceOpportunity": {
            "type": "object",
            "properties": {
                "allPrices": {
                    "type": "object",
                    "description": "A nested map of all active sales modules. The key in the outer map is the sales module, whilst the inner map contains the different pricing types for the given sales module. A pricing type could be PER_USE(10).",
                    "readOnly": true,
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number"
                        }
                    }
                },
                "sumStartupCategory1Users": {
                    "type": "number",
                    "description": "The total startup price for users of category 1.",
                    "readOnly": true
                },
                "sumServiceCategory1Users": {
                    "type": "number",
                    "description": "The total price per monthly price for users of category 1.",
                    "readOnly": true
                },
                "listPriceCategory1UserStartup": {
                    "type": "number",
                    "description": "The startup list price per user.",
                    "readOnly": true
                },
                "listPriceCategory1UserService": {
                    "type": "number",
                    "description": "The monthly list price per user.",
                    "readOnly": true
                },
                "sumStartup": {
                    "type": "number",
                    "description": "The startup price for the company.",
                    "readOnly": true
                },
                "sumService": {
                    "type": "number",
                    "description": "The monthly price for the company.",
                    "readOnly": true
                },
                "sumYearlyService": {
                    "type": "number",
                    "description": "The monthly price for the company.",
                    "readOnly": true
                },
                "sumAdditionalServices": {
                    "type": "number",
                    "description": "The total startup price for additional services.",
                    "readOnly": true
                },
                "accountantStartupProvision": {
                    "type": "number",
                    "description": "The initial provision for the accountant of the startup price (percentage)",
                    "readOnly": true
                },
                "accountantMonthlyProvision": {
                    "type": "number",
                    "description": "The monthly provision for the accountant of the monthly price (percentage)",
                    "readOnly": true
                },
                "noOfUsersPrepaid": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of users prepaid when creating the company.",
                    "readOnly": true
                },
                "noOfUsersIncluded": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of users included for free in the purchased module.",
                    "readOnly": true
                }
            }
        },
        "ListResponseSalesForceAccountInfo": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalesForceAccountInfo"
                    }
                }
            }
        },
        "ListResponseSalesForceAccountantConnection": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/SalesForceAccountantConnection"
                    }
                }
            }
        },
        "SalesForceAccountantConnection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "aoCustomerId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "clientCustomerId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperSalesForceEmployeeRole": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceEmployeeRole"
                }
            }
        },
        "SalesForceEmployeeRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "roleId": {
                    "type": "integer",
                    "format": "int32"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tripletexCustomerId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ResponseWrapperSalesForceTripletexSalesModulePurchase": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceTripletexSalesModulePurchase"
                }
            }
        },
        "SalesForceTripletexSalesModulePurchase": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "tripletexCompanyId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "tripletexPriceList": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "TRIPLETEX_OLD_MODEL",
                        "TRIPLETEX_STANDARD",
                        "AGRO",
                        "MAMUT",
                        "BASIS",
                        "SMART",
                        "KOMPLETT",
                        "VVS_ELEKTRO",
                        "AUTOPLUS",
                        "MIKRO",
                        "INTEGRATION_PARTNER",
                        "PLUSS"
                    ]
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "purchaseDate": {
                    "type": "string",
                    "description": "Purchase date",
                    "readOnly": true
                },
                "endDate": {
                    "type": "string",
                    "description": "Purchase end date",
                    "readOnly": true
                },
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "tripletexSalesModuleName": {
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Type upSale or newSales",
                    "readOnly": true
                },
                "salesForceOpportunityDTO": {
                    "description": "Company opportunity",
                    "readOnly": true,
                    "$ref": "#/definitions/SalesForceOpportunity"
                }
            }
        },
        "ResponseWrapperSalesForceEmployee": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceEmployee"
                }
            }
        },
        "ResponseWrapperSalesForceUserOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalesForceUserOverview"
                }
            }
        },
        "SalesForceUserOverview": {
            "type": "object",
            "properties": {
                "customerId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Customer Id",
                    "readOnly": true
                },
                "numberOfUsers": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of users",
                    "readOnly": true
                },
                "numberOfPayslipOnlyUsers": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of payslip only users",
                    "readOnly": true
                }
            }
        },
        "DashboardContextDTO": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32"
                },
                "loginEmployeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "tripletexEmployeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "companyName": {
                    "type": "string"
                },
                "companyCurrency": {
                    "type": "string"
                },
                "companyStartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "language": {
                    "type": "string"
                },
                "trialAccount": {
                    "type": "boolean"
                },
                "showTourMe": {
                    "type": "boolean"
                },
                "showYearEndTourMe": {
                    "type": "boolean"
                },
                "showAgroTourMe": {
                    "type": "boolean"
                },
                "showMamutTourMe": {
                    "type": "boolean"
                },
                "authYearEndReport": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperDashboardContextDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DashboardContextDTO"
                }
            }
        },
        "Widgets": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "APP",
                            "BANKING",
                            "EASY_ONBOARDING",
                            "GET_STARTED_SUMMARY",
                            "HELP_CENTER",
                            "INCOME_AND_COST_CHART",
                            "INVOICE_SUMMARY",
                            "REMINDER",
                            "SALARY_SUMMARY",
                            "TASKS",
                            "TRIAL",
                            "UPSALE",
                            "VOUCHER_SUMMARY"
                        ]
                    }
                },
                "sidebar": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "APP",
                            "BANKING",
                            "EASY_ONBOARDING",
                            "GET_STARTED_SUMMARY",
                            "HELP_CENTER",
                            "INCOME_AND_COST_CHART",
                            "INVOICE_SUMMARY",
                            "REMINDER",
                            "SALARY_SUMMARY",
                            "TASKS",
                            "TRIAL",
                            "UPSALE",
                            "VOUCHER_SUMMARY"
                        ]
                    }
                }
            }
        },
        "ResponseWrapperRequestlogModel": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/RequestlogModel"
                }
            }
        },
        "BankBalance": {
            "type": "object",
            "properties": {
                "moneyAmount": {
                    "type": "number",
                    "description": "Bank balance amount"
                },
                "currency": {
                    "type": "string",
                    "description": "Currency"
                },
                "bankBalanceDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Bank balance date"
                }
            }
        },
        "BankingSummaryDTO": {
            "type": "object",
            "properties": {
                "moneyIn": {
                    "description": "Amount of money coming in the account",
                    "$ref": "#/definitions/MoneyAmount"
                },
                "moneyOut": {
                    "description": "Amount of money going out of the account",
                    "$ref": "#/definitions/MoneyAmount"
                },
                "bankBalance": {
                    "description": "Bank balance",
                    "$ref": "#/definitions/BankBalance"
                }
            }
        },
        "MoneyAmount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "description": "Amount of money"
                },
                "currency": {
                    "type": "string",
                    "description": "Currency"
                },
                "percentageChange": {
                    "type": "number",
                    "description": "Percentage change compared to previous 30 days"
                }
            }
        },
        "ResponseWrapperBankingSummaryDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BankingSummaryDTO"
                }
            }
        },
        "GetStartedSummaryDTO": {
            "type": "object",
            "properties": {
                "numberOfCompletedTasks": {
                    "type": "integer",
                    "format": "int32"
                },
                "totalNumberOfTasks": {
                    "type": "integer",
                    "format": "int32"
                },
                "daysRemaining": {
                    "type": "integer",
                    "format": "int32"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GetStartedTaskWidgetDTO"
                    }
                }
            }
        },
        "GetStartedTaskWidgetDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "icon": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "INITIAL",
                        "UNAVAILABLE",
                        "PENDING",
                        "DONE"
                    ]
                },
                "actionUrl": {
                    "type": "string"
                },
                "watchVideoUrl": {
                    "type": "string"
                },
                "articleUrl": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperGetStartedSummaryDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/GetStartedSummaryDTO"
                }
            }
        },
        "IncomeAndCostSummaryDTO": {
            "type": "object",
            "properties": {
                "incomeValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TlxNumber"
                    }
                },
                "costValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TlxNumber"
                    }
                },
                "accumulatedSurplusValues": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TlxNumber"
                    }
                }
            }
        },
        "ResponseWrapperIncomeAndCostSummaryDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/IncomeAndCostSummaryDTO"
                }
            }
        },
        "ResponseWrapperInvoiceSummaryDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/InvoiceSummaryDTO"
                }
            }
        },
        "ReminderDTO": {
            "type": "object",
            "properties": {
                "reminders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReminderWidgetDTO"
                    }
                }
            }
        },
        "ReminderWidgetDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "deadline": {
                    "type": "string",
                    "format": "date"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperReminderDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReminderDTO"
                }
            }
        },
        "ResponseWrapperSalarySummaryDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SalarySummaryDTO"
                }
            }
        },
        "SalarySummaryDTO": {
            "type": "object",
            "properties": {
                "numberOfActiveEmployees": {
                    "type": "integer",
                    "format": "int32"
                },
                "salaryPaymentSum": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "currency": {
                    "type": "string"
                },
                "salaryPercentage": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "employersPaymentPercentage": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "taxesPercentage": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "salaryPeriodMonthFirstDay": {
                    "type": "string",
                    "format": "date"
                },
                "salaryPeriodMonthLastDay": {
                    "type": "string",
                    "format": "date"
                },
                "validAltInnConfig": {
                    "type": "boolean"
                },
                "salaryVoucherPresent": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperTaskDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TaskDTO"
                }
            }
        },
        "TaskDTO": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaskWidgetDTO"
                    }
                }
            }
        },
        "TaskWidgetDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "title": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperTrialDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TrialDTO"
                }
            }
        },
        "TrialDTO": {
            "type": "object",
            "properties": {
                "packageName": {
                    "type": "string"
                },
                "packageNameTranslated": {
                    "type": "string"
                },
                "companyEndDate": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ResponseWrapperVoucherSummaryDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherSummaryDTO"
                }
            }
        },
        "VoucherDetailsDTO": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "format": "int32"
                },
                "baseLink": {
                    "type": "string"
                }
            }
        },
        "VoucherSummaryDTO": {
            "type": "object",
            "properties": {
                "voucherReceptionData": {
                    "$ref": "#/definitions/VoucherDetailsDTO"
                },
                "attestationVouchersData": {
                    "$ref": "#/definitions/VoucherDetailsDTO"
                },
                "nonPostedVouchersData": {
                    "$ref": "#/definitions/VoucherDetailsDTO"
                },
                "automatedVouchersData": {
                    "$ref": "#/definitions/VoucherDetailsDTO"
                }
            }
        },
        "ResponseWrapperVatReturns2022": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VatReturns2022"
                }
            }
        },
        "VatReturns2022": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "start": {
                    "type": "string"
                },
                "closedDate": {
                    "type": "string"
                },
                "end": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "The current instance status of the vatReturns.",
                    "enum": [
                        "NOT_STARTED",
                        "INSTANCE_CREATED",
                        "VAT_ENVELOPE_DELIVERED",
                        "VAT_RETURNS_DELIVERED",
                        "ATTACHMENTS_DELIVERED",
                        "FILLING_COMPLETE",
                        "SENDING_COMPLETE",
                        "FEEDBACK_RECEIVED",
                        "MANUAL_DELIVERY",
                        "USER_FORBIDDEN",
                        "SENDING_FAILED"
                    ]
                },
                "userComment": {
                    "type": "string"
                },
                "structuredComment": {
                    "type": "string",
                    "maxLength": 255
                },
                "vatGroups": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VatSpecificationGroup"
                    }
                },
                "voucher": {
                    "readOnly": true,
                    "$ref": "#/definitions/Voucher"
                },
                "altinnMetadata": {
                    "description": "Metadata about the sending in altinn",
                    "$ref": "#/definitions/AltinnInstance"
                },
                "receiptId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Attachment for vat return",
                    "readOnly": true
                },
                "totalAmountVatToPay": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "remainingAmountVatToPay": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "isPaid": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "VatSpecificationGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the group",
                    "readOnly": true
                },
                "lines": {
                    "type": "array",
                    "description": "The vat lines",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VatSpecificationLine"
                    }
                },
                "totalAmountVat": {
                    "description": "Total vat amount on the group",
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "totalAmountVatBasis": {
                    "description": "Total vat basis amount on the group",
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "VatSpecificationLine": {
            "type": "object",
            "properties": {
                "vatReturns2022DTO": {
                    "readOnly": true,
                    "$ref": "#/definitions/VatReturns2022"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "standardCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The SAF-T code"
                },
                "userComment": {
                    "type": "string",
                    "description": "User comment"
                },
                "structuredComment": {
                    "type": "string",
                    "description": "Pre-generated structured comment",
                    "maxLength": 255
                },
                "rate": {
                    "description": "Rate",
                    "$ref": "#/definitions/TlxNumber"
                },
                "basis": {
                    "description": "Basis",
                    "$ref": "#/definitions/TlxNumber"
                },
                "vatAmount": {
                    "description": "Vat amount",
                    "$ref": "#/definitions/TlxNumber"
                },
                "isReversable": {
                    "type": "boolean",
                    "description": "Is Reversable"
                },
                "expectedSign": {
                    "type": "string",
                    "description": "Expected delivery sign",
                    "enum": [
                        "ZERO",
                        "POSITIVE",
                        "NEGATIVE"
                    ]
                },
                "specificationType": {
                    "type": "string",
                    "description": "Vat specificationType",
                    "enum": [
                        "DEFAULT",
                        "LOSS_OF_CLAIM",
                        "WITHDRAWAL",
                        "ADJUSTMENT",
                        "REVERSAL",
                        "COMPENSATION"
                    ]
                },
                "vatType": {
                    "description": "The vat type used for this line",
                    "$ref": "#/definitions/VatType"
                }
            }
        },
        "ResponseWrapperVatReturnsValidationResult": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VatReturnsValidationResult"
                }
            }
        },
        "ValidationError": {
            "type": "object",
            "properties": {
                "vatCode": {
                    "type": "string",
                    "description": "The vatCode connected to this error",
                    "readOnly": true
                },
                "vatSpecificationLineId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The vatSpecificationLine id the error is connected to",
                    "readOnly": true
                },
                "reasons": {
                    "type": "array",
                    "description": "The list of reasons of this error",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ValidationReasonDTO"
                    }
                }
            }
        },
        "ValidationReasonDTO": {
            "type": "object",
            "properties": {
                "statusType": {
                    "type": "string",
                    "description": "The status of the reason",
                    "readOnly": true,
                    "enum": [
                        "SUCCESS",
                        "INVALID",
                        "WARNING",
                        "MISSING_INFORMATION"
                    ]
                },
                "errorCode": {
                    "type": "string",
                    "description": "Skatteetatens errorCode",
                    "readOnly": true
                },
                "reason": {
                    "type": "string",
                    "description": "The actual reason for the validation error",
                    "readOnly": true
                },
                "developerReason": {
                    "type": "string",
                    "description": "Developer message for the error. In some cases it could be a xml error, then more info will be here.",
                    "readOnly": true
                }
            }
        },
        "VatReturnsValidationResult": {
            "type": "object",
            "properties": {
                "validationStatus": {
                    "type": "string",
                    "description": "The status of general validation",
                    "readOnly": true,
                    "enum": [
                        "SUCCESS",
                        "INVALID",
                        "WARNING",
                        "MISSING_INFORMATION"
                    ]
                },
                "generalMessage": {
                    "type": "array",
                    "description": "The general error messages the validation has",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "errors": {
                    "type": "array",
                    "description": "The general error messages the validation has",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ValidationError"
                    }
                }
            }
        },
        "VatReturns2022Creation": {
            "type": "object",
            "required": [
                "term",
                "year"
            ],
            "properties": {
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The year of creating the vatReturns",
                    "minimum": 0
                },
                "term": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The term of the vatReturns. Must be according to the terms the company have.",
                    "minimum": 0
                }
            }
        },
        "ListResponseVatTermPeriod": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VatTermPeriod"
                    }
                }
            }
        },
        "VatTermPeriod": {
            "type": "object",
            "properties": {
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Term year",
                    "readOnly": true
                },
                "term": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Term",
                    "readOnly": true
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date",
                    "readOnly": true
                },
                "endDate": {
                    "type": "string",
                    "description": "End date",
                    "readOnly": true
                },
                "dueDate": {
                    "type": "string",
                    "description": "Due date",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name",
                    "readOnly": true
                },
                "defaultTerm": {
                    "type": "boolean",
                    "description": "Default term",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperVatSpecificationLine": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VatSpecificationLine"
                }
            }
        },
        "CommentInput": {
            "type": "object",
            "required": [
                "comment"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "The comment"
                },
                "isStructured": {
                    "type": "boolean",
                    "description": "Is this comment a structured comment? It must be in a predefined list from Skatteetaten"
                },
                "vatReturnsId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The id of the vatReturns"
                }
            }
        },
        "ListResponseDocument": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Document"
                    }
                }
            }
        },
        "IncomingInvoicePaymentHistory": {
            "type": "object",
            "properties": {
                "baseVoucherId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "transactions": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/IncomingInvoicePaymentHistoryTransaction"
                    }
                },
                "remainingAmountToPay": {
                    "type": "number",
                    "readOnly": true
                },
                "remainingAmountToPayCurrency": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "IncomingInvoicePaymentHistoryTransaction": {
            "type": "object",
            "properties": {
                "paymentType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "NONE",
                        "NOT_PAID",
                        "NETS",
                        "AUTOPAY",
                        "POSTING_RULE",
                        "ZTL"
                    ]
                },
                "baseVoucherId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "postingId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "voucherId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "voucherNumberAsString": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "readOnly": true
                },
                "text1": {
                    "type": "string",
                    "readOnly": true
                },
                "text2": {
                    "type": "string",
                    "readOnly": true
                },
                "text3": {
                    "type": "string",
                    "readOnly": true
                },
                "amountNegative": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "amountCurrencyNegative": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "currencyId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "currencyCode": {
                    "type": "string",
                    "readOnly": true
                },
                "isDeletable": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isReversed": {
                    "type": "boolean",
                    "readOnly": true
                },
                "deleteMessage": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperIncomingInvoicePaymentHistory": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/IncomingInvoicePaymentHistory"
                }
            }
        },
        "ResponseWrapperVatReturns2022ValidateCreate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VatReturns2022ValidateCreate"
                }
            }
        },
        "VatReturns2022ValidateCreate": {
            "type": "object",
            "properties": {
                "incompleteVouchers": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "accountingPeriodClosed": {
                    "type": "boolean",
                    "readOnly": true
                },
                "beforeStartBalance": {
                    "type": "boolean",
                    "readOnly": true
                },
                "invalidDate": {
                    "type": "boolean",
                    "readOnly": true
                },
                "accountsRequiringHarmonization": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                },
                "helpAccountPostedOn": {
                    "readOnly": true,
                    "$ref": "#/definitions/Account"
                },
                "alreadyExists": {
                    "type": "boolean",
                    "readOnly": true
                },
                "success": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperVatReturnsPaymentInfo": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VatReturnsPaymentInfo"
                }
            }
        },
        "VatReturnsPaymentInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "vatReturns": {
                    "readOnly": true,
                    "$ref": "#/definitions/VatReturns2022"
                },
                "kid": {
                    "type": "string",
                    "description": "The KID number from Skatteetaten",
                    "maxLength": 100
                },
                "account": {
                    "type": "string",
                    "description": "The bank account number of Skatteetaten",
                    "maxLength": 20
                },
                "amount": {
                    "description": "Amount to pay or receive",
                    "$ref": "#/definitions/TlxNumber"
                },
                "dueDate": {
                    "type": "string"
                }
            }
        },
        "ListResponseVatReturnsVatCodeComment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VatReturnsVatCodeComment"
                    }
                }
            }
        },
        "VatReturnsComment": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "Title of the comment",
                    "readOnly": true
                },
                "technicalName": {
                    "type": "string",
                    "description": "Technical name of the comment",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the comment",
                    "readOnly": true
                },
                "vatSpecificationType": {
                    "type": "string",
                    "description": "Detailed description of the comment",
                    "readOnly": true,
                    "enum": [
                        "DEFAULT",
                        "LOSS_OF_CLAIM",
                        "WITHDRAWAL",
                        "ADJUSTMENT",
                        "REVERSAL",
                        "COMPENSATION"
                    ]
                },
                "expectedSign": {
                    "type": "string",
                    "description": "The sign expected on the structured comment",
                    "readOnly": true,
                    "enum": [
                        "ZERO",
                        "POSITIVE",
                        "NEGATIVE"
                    ]
                },
                "deliveredSign": {
                    "type": "string",
                    "description": "The sign delivered on the structured comment",
                    "readOnly": true,
                    "enum": [
                        "ZERO",
                        "POSITIVE",
                        "NEGATIVE"
                    ]
                }
            }
        },
        "VatReturnsVatCodeComment": {
            "type": "object",
            "properties": {
                "vatCode": {
                    "type": "string",
                    "description": "The vatCode"
                },
                "comments": {
                    "type": "array",
                    "description": "List of comments for the given vatCode",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VatReturnsComment"
                    }
                }
            }
        },
        "ListResponseVatReturnsComment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VatReturnsComment"
                    }
                }
            }
        },
        "Comment": {
            "type": "object",
            "required": [
                "employee"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "comment": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 1024
                },
                "createdAt": {
                    "type": "string",
                    "readOnly": true
                },
                "editedAt": {
                    "type": "string",
                    "readOnly": true
                },
                "voucherId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                }
            }
        },
        "ListResponseComment": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Comment"
                    }
                }
            }
        },
        "ResponseWrapperComment": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Comment"
                }
            }
        },
        "CommentCreation": {
            "type": "object",
            "required": [
                "commentText"
            ],
            "properties": {
                "commentText": {
                    "type": "string",
                    "description": "The text of the comment to be created"
                }
            }
        },
        "ArchiveModelTypes": {
            "type": "object",
            "properties": {
                "supplier": {
                    "type": "boolean",
                    "readOnly": true
                },
                "customer": {
                    "type": "boolean",
                    "readOnly": true
                },
                "project": {
                    "type": "boolean",
                    "readOnly": true
                },
                "product": {
                    "type": "boolean",
                    "readOnly": true
                },
                "employee": {
                    "type": "boolean",
                    "readOnly": true
                },
                "account": {
                    "type": "boolean",
                    "readOnly": true
                },
                "asset": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperArchiveModelTypes": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ArchiveModelTypes"
                }
            }
        },
        "VoucherInboxArchive": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "string",
                    "description": "List of voucherInboxIds to move to archive"
                },
                "pathId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Target path in archive"
                },
                "archiveDate": {
                    "type": "string"
                },
                "filename": {
                    "type": "string",
                    "description": "Override filename"
                },
                "modelType": {
                    "type": "string",
                    "description": "Add to specific archive",
                    "enum": [
                        "NONE",
                        "CUSTOMER",
                        "SUPPLIER",
                        "PROJECT",
                        "PRODUCT",
                        "INVOICE",
                        "EMPLOYEE",
                        "ACCOUNT",
                        "ASSET"
                    ]
                },
                "modelId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ArchiveTargetPath": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "displayName": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ListResponseArchiveTargetPath": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ArchiveTargetPath"
                    }
                }
            }
        },
        "ResponseWrapperVoucherInboxContext": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherInboxContext"
                }
            }
        },
        "VoucherInboxContext": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "locale": {
                    "type": "string",
                    "readOnly": true
                },
                "companyName": {
                    "type": "string",
                    "readOnly": true
                },
                "showInbox": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showAttestation": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showFollowUp": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showLastUpdated": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showGoToPayment": {
                    "type": "boolean",
                    "readOnly": true
                },
                "hasDepartment": {
                    "type": "boolean",
                    "readOnly": true
                },
                "hasProject": {
                    "type": "boolean",
                    "readOnly": true
                },
                "hasAutomation": {
                    "type": "boolean",
                    "readOnly": true
                },
                "hasEfoNelfoInvoices": {
                    "type": "boolean",
                    "readOnly": true
                },
                "hasBankAgreement": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserUpload": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserEdit": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserDelete": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserRegisterIncomingInvoice": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserRegisterBankReconciliation": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserRegisterAdvancedVoucher": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserRegisterPaymentIn": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserRegisterIncome": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canUserRegisterCustomsDeclaration": {
                    "type": "boolean",
                    "readOnly": true
                },
                "inDeveloperMode": {
                    "type": "boolean",
                    "readOnly": true
                },
                "incomePilotActive": {
                    "type": "boolean",
                    "readOnly": true
                },
                "voucherScanningEmail": {
                    "type": "string",
                    "readOnly": true
                },
                "mainBankAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "automatedVouchersLast30Days": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "tripletexStartDate": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ListResponseVoucherInboxItem": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VoucherInboxItem"
                    }
                }
            }
        },
        "VoucherInboxItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "companyId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "companyName": {
                    "type": "string",
                    "readOnly": true
                },
                "description": {
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "UNKNOWN",
                        "INVOICE",
                        "ERROR_EHF_IMPORT",
                        "REPLAYABLE_VOUCHER",
                        "REMINDER_SPECIFICATION",
                        "CREDITNOTE",
                        "RECEIPT"
                    ]
                },
                "receivedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "voucherId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "invoiceId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "invoiceType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "UNKNOWN",
                        "PDF",
                        "EHF",
                        "EFO_NELFO"
                    ]
                },
                "bankAccount": {
                    "type": "string",
                    "readOnly": true
                },
                "kid": {
                    "type": "string",
                    "readOnly": true
                },
                "merchantName": {
                    "type": "string",
                    "readOnly": true
                },
                "orderNumberCustomer": {
                    "type": "string",
                    "readOnly": true
                },
                "orderNumberBuyer": {
                    "type": "string",
                    "readOnly": true
                },
                "projectRef": {
                    "type": "string",
                    "readOnly": true
                },
                "vendorRef": {
                    "type": "string",
                    "readOnly": true
                },
                "buyersRef": {
                    "type": "string",
                    "readOnly": true
                },
                "buyersContact": {
                    "type": "string",
                    "readOnly": true
                },
                "lastComment": {
                    "type": "string",
                    "readOnly": true
                },
                "invoiceNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "invoiceDate": {
                    "type": "string",
                    "readOnly": true
                },
                "dueDate": {
                    "type": "string",
                    "readOnly": true
                },
                "isDue": {
                    "type": "boolean",
                    "readOnly": true
                },
                "supplierName": {
                    "type": "string",
                    "readOnly": true
                },
                "invoiceAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "invoiceCurrency": {
                    "type": "string",
                    "readOnly": true
                },
                "documents": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "documentIds": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "accountId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "account": {
                    "type": "string",
                    "readOnly": true
                },
                "vatNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "vatAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "vatPercentage": {
                    "type": "number",
                    "readOnly": true
                },
                "departmentId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "projectId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "project": {
                    "type": "string",
                    "readOnly": true
                },
                "department": {
                    "type": "string",
                    "readOnly": true
                },
                "paymentTypeId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "paymentType": {
                    "type": "string",
                    "readOnly": true
                },
                "importFailureReason": {
                    "type": "string",
                    "readOnly": true
                },
                "accountingPeriod": {
                    "type": "string",
                    "readOnly": true
                },
                "filename": {
                    "type": "string",
                    "readOnly": true
                },
                "isTemporary": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isInvoiceSimple": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isInvoiceDetailed": {
                    "type": "boolean",
                    "readOnly": true
                },
                "hasPredictions": {
                    "type": "boolean",
                    "description": "Has one or more predictions from FabricAi",
                    "readOnly": true
                },
                "hasSmartScanSuggestions": {
                    "type": "boolean",
                    "description": "Has one or more suggestions from SmartScan",
                    "readOnly": true
                },
                "isLocked": {
                    "type": "boolean",
                    "description": "Is voucher locked for change by external integration",
                    "readOnly": true
                },
                "commentCount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "nonAutomationReason": {
                    "type": "string",
                    "readOnly": true
                },
                "canBeSentToLedger": {
                    "type": "boolean",
                    "description": "Possible to do one click 'Send to ledger'",
                    "readOnly": true
                },
                "canBeRegisteredAsChanged": {
                    "type": "boolean",
                    "description": "Possible to do one click 'Send to ledger'",
                    "readOnly": true
                },
                "canBeRegisteredAsSimpleInvoice": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeRegisteredAsDetailedInvoice": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeRegisteredAsBankReconciliation": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeRegisteredAsPaymentIn": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeRegisteredAsIncome": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeRegisteredAsCustomsDeclaration": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeRegisteredAsAdvanced": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeSentToAccountant": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeSentToArchive": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeDeleted": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeRegisteredInQueue": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeMerged": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeReclaimed": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canChangeDescription": {
                    "type": "boolean",
                    "readOnly": true
                },
                "preferDetailedInvoice": {
                    "type": "boolean",
                    "readOnly": true
                },
                "allowPostingBeforeVoucherApproved": {
                    "type": "boolean",
                    "readOnly": true
                },
                "senderEmailAddress": {
                    "type": "string",
                    "readOnly": true
                },
                "isSpam": {
                    "type": "boolean",
                    "readOnly": true
                },
                "emailArrivalTime": {
                    "type": "string",
                    "readOnly": true
                },
                "spamReportForDisplay": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperVoucherInboxItem": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherInboxItem"
                }
            }
        },
        "VoucherChangeDescription": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "voucherInboxId to rename"
                },
                "description": {
                    "type": "string",
                    "description": "New description"
                }
            }
        },
        "ResponseWrapperWootricDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/WootricDTO"
                }
            }
        },
        "WootricDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "external_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer",
                    "format": "int32"
                },
                "product_name": {
                    "type": "string"
                },
                "cesToken": {
                    "type": "string"
                },
                "npsToken": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "properties": {
                    "$ref": "#/definitions/WootricPropertiesDTO"
                },
                "thankYouMessageMain": {
                    "type": "string"
                },
                "thankYouMessageSetup": {
                    "type": "string"
                }
            }
        },
        "WootricPropertiesDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "company_type": {
                    "type": "string"
                },
                "mainModule": {
                    "type": "string"
                },
                "employees": {
                    "type": "string"
                },
                "isAccountant": {
                    "type": "boolean"
                },
                "gotAccountantRelationship": {
                    "type": "string"
                },
                "category1": {
                    "type": "string"
                },
                "category2": {
                    "type": "string"
                },
                "category3": {
                    "type": "string"
                },
                "age": {
                    "type": "string"
                },
                "ageMonths": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "moduleElectro": {
                    "type": "boolean"
                },
                "moduleNrf": {
                    "type": "boolean"
                },
                "moduleInvoice": {
                    "type": "boolean"
                },
                "modulehourlist": {
                    "type": "boolean"
                },
                "moduleproject": {
                    "type": "boolean"
                },
                "modulePayrollAccounting": {
                    "type": "boolean"
                },
                "moduleTravelExpense": {
                    "type": "boolean"
                },
                "moduleAccountingExternal": {
                    "type": "boolean"
                },
                "moduleLogistics": {
                    "type": "boolean"
                },
                "moduleRemit": {
                    "type": "boolean"
                },
                "moduleFabricAI": {
                    "type": "boolean"
                },
                "device": {
                    "type": "boolean"
                },
                "isadmin": {
                    "type": "boolean"
                }
            }
        },
        "ListResponseVoucherMessage": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VoucherMessage"
                    }
                }
            }
        },
        "VoucherMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "voucherId": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The voucher to connect the message to, only set on create"
                },
                "content": {
                    "type": "string",
                    "description": "The message"
                },
                "sender": {
                    "description": "The employee that sent this message",
                    "readOnly": true,
                    "$ref": "#/definitions/Employee"
                },
                "sendTime": {
                    "type": "string",
                    "description": "The timestamp of the message"
                }
            }
        },
        "ResponseWrapperVoucherMessage": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherMessage"
                }
            }
        },
        "ResponseWrapperVoucherStatus": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/VoucherStatus"
                }
            }
        },
        "VoucherStatus": {
            "type": "object",
            "required": [
                "voucher"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "voucher": {
                    "description": "The voucher.",
                    "$ref": "#/definitions/Voucher"
                },
                "type": {
                    "type": "string",
                    "description": "The type of process",
                    "readOnly": true,
                    "enum": [
                        "TRIPLETEX",
                        "SUPPLIERINVOICE_EXTERNAL",
                        "DEBT_COLLECTION"
                    ]
                },
                "status": {
                    "type": "string",
                    "description": "Process status",
                    "enum": [
                        "WAITING",
                        "DONE",
                        "SKIPPED",
                        "ERROR",
                        "NONE",
                        "PROCESSING",
                        "RECLAIMED"
                    ]
                },
                "timestamp": {
                    "type": "string",
                    "description": "Time of last update",
                    "readOnly": true
                },
                "message": {
                    "type": "string",
                    "description": "1 or 0 predefined status message",
                    "enum": [
                        "NONE",
                        "ONGOING",
                        "NEEDS_APPROVAL",
                        "WITHDRAWN",
                        "SETTLED"
                    ]
                },
                "externalObjectUrl": {
                    "type": "string",
                    "description": "Link to external object",
                    "maxLength": 255
                },
                "comment": {
                    "type": "string"
                },
                "referenceNumber": {
                    "type": "string",
                    "description": "reference number to external object",
                    "maxLength": 255
                }
            }
        },
        "ListResponseVoucherStatus": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/VoucherStatus"
                    }
                }
            }
        },
        "Banner": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "bannerType": {
                    "type": "string",
                    "readOnly": true
                },
                "title": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "message": {
                    "type": "string",
                    "readOnly": true
                },
                "button": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "link": {
                    "type": "string",
                    "readOnly": true
                },
                "tag": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 255
                },
                "done": {
                    "type": "boolean",
                    "readOnly": true
                },
                "cancellable": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperBanner": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Banner"
                }
            }
        },
        "ListResponseBanner": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Banner"
                    }
                }
            }
        },
        "CalloutDTO": {
            "type": "object",
            "properties": {
                "severity": {
                    "type": "string",
                    "enum": [
                        "INFO",
                        "WARNING",
                        "ERROR",
                        "CONFIRMATION"
                    ]
                },
                "message": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "pageSpecific": {
                    "type": "boolean"
                }
            }
        },
        "ListResponseCalloutDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CalloutDTO"
                    }
                }
            }
        },
        "Favorite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "rank": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "pageUrl": {
                    "type": "string"
                }
            }
        },
        "FavoriteMenu": {
            "type": "object",
            "properties": {
                "shouldShow": {
                    "type": "boolean"
                },
                "favoriteList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Favorite"
                    }
                }
            }
        },
        "ResponseWrapperFavoriteMenu": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/FavoriteMenu"
                }
            }
        },
        "Menu": {
            "type": "object",
            "properties": {
                "menuStyle": {
                    "type": "string",
                    "enum": [
                        "NORMAL",
                        "AGRO",
                        "AGRO_ON_PREMISE"
                    ]
                },
                "menuItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MenuItem"
                    }
                },
                "defaultContentUrl": {
                    "type": "string"
                },
                "showTrialWidget": {
                    "type": "boolean"
                },
                "packageName": {
                    "type": "string"
                },
                "purchaseUrl": {
                    "type": "string"
                },
                "trialExpiresDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "currentServerTime": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "MenuItem": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "theme": {
                    "type": "string"
                },
                "testId": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "subMenuItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MenuItem"
                    }
                }
            }
        },
        "ResponseWrapperMenu": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Menu"
                }
            }
        },
        "ListResponseMenuItemDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/MenuItemDTO"
                    }
                }
            }
        },
        "MenuItemDTO": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "child": {
                    "type": "boolean"
                }
            }
        },
        "ListResponseNews": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/News"
                    }
                }
            }
        },
        "News": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "publish_date": {
                    "type": "string"
                },
                "excerpt": {
                    "type": "string"
                },
                "permalink": {
                    "type": "string"
                }
            }
        },
        "PageOptions": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "key": {
                    "type": "string",
                    "description": "The lookup key for this PageOptions entry",
                    "maxLength": 255
                },
                "type": {
                    "type": "string",
                    "description": "The type that `data` is",
                    "enum": [
                        "IncomingInvoiceViewOptions",
                        "PurchaseOrderOverviewOptions",
                        "BankBalanceEstimationViewOptions",
                        "OrderFormViewOptions",
                        "BankAccountsOverviewViewOptions"
                    ]
                },
                "level": {
                    "type": "string",
                    "description": "The level that `data` is stored at",
                    "enum": [
                        "Employee",
                        "Company"
                    ]
                },
                "data": {
                    "type": "object",
                    "description": "The actual options as a JSON blob",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ResponseWrapperPageOptions": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PageOptions"
                }
            }
        },
        "CompanyChooserDTO": {
            "type": "object",
            "properties": {
                "currentCompany": {
                    "$ref": "#/definitions/CompanyDTO"
                },
                "hasAccessToMultipleCompanies": {
                    "type": "boolean"
                }
            }
        },
        "CompanyDTO": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "parent": {
                    "$ref": "#/definitions/CompanyDTO"
                },
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ResponseWrapperCompanyChooserDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CompanyChooserDTO"
                }
            }
        },
        "ResponseWrapperListCompanyDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CompanyDTO"
                    }
                }
            }
        },
        "LegacyProfileDTO": {
            "type": "object",
            "properties": {
                "employeeName": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "profileImageUrl": {
                    "type": "string"
                },
                "menuItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MenuItem"
                    }
                },
                "site": {
                    "type": "string"
                },
                "userLocale": {
                    "type": "string"
                },
                "loginCompanies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ProfileLoginCompany"
                    }
                }
            }
        },
        "ProfileLoginCompany": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "url": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "isClientCompany": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperLegacyProfileDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/LegacyProfileDTO"
                }
            }
        },
        "ProfileDTO": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "profileImageUrl": {
                    "type": "string"
                },
                "menuItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MenuItem"
                    }
                },
                "site": {
                    "type": "string"
                },
                "userLocale": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperProfileDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProfileDTO"
                }
            }
        },
        "Article": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "imageSrc": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                },
                "body": {
                    "type": "string"
                }
            }
        },
        "HelpCenterArticles": {
            "type": "object",
            "properties": {
                "mainArticle": {
                    "$ref": "#/definitions/Article"
                },
                "relevantArticles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Article"
                    }
                },
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Video"
                    }
                },
                "faqs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Article"
                    }
                },
                "salesforceSupportRequestsUrl": {
                    "type": "string"
                },
                "helpCenterUrl": {
                    "type": "string"
                },
                "keyboardShortcutsArticleUrl": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperHelpCenterArticles": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/HelpCenterArticles"
                }
            }
        },
        "Video": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string"
                },
                "href": {
                    "type": "string"
                }
            }
        },
        "ListResponseZendeskSearchResultDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ZendeskSearchResultDTO"
                    }
                }
            }
        },
        "ZendeskSearchResultDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperSegmentationData": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SegmentationData"
                }
            }
        },
        "SegmentationData": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "integer",
                    "format": "int32"
                },
                "orgNumber": {
                    "type": "string"
                },
                "isTrialAccount": {
                    "type": "boolean"
                },
                "isTestOrFreeCompany": {
                    "type": "boolean"
                },
                "employeeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "isAccountant": {
                    "type": "boolean"
                },
                "isReseller": {
                    "type": "boolean"
                },
                "employeeNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "packageName": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "outgoingInvoices": {
                    "type": "integer",
                    "format": "int32"
                },
                "incomingInvoices": {
                    "type": "integer",
                    "format": "int32"
                },
                "companyStartDateYear": {
                    "type": "string"
                },
                "companyType": {
                    "type": "string"
                },
                "companyName": {
                    "type": "string"
                },
                "mainAccountBank": {
                    "type": "string"
                },
                "modules": {
                    "$ref": "#/definitions/SegmentationModules"
                },
                "roles": {
                    "$ref": "#/definitions/SegmentationRoles"
                },
                "pilotFeatures": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "hackedOrSupportAccess": {
                    "type": "boolean"
                },
                "tripletexCustomerCategoryId3": {
                    "type": "integer",
                    "format": "int32"
                },
                "tripletexCustomerCategoryId2": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SegmentationModules": {
            "type": "object",
            "properties": {
                "moduleaccountinginternal": {
                    "type": "boolean"
                },
                "moduleaccountingexternal": {
                    "type": "boolean"
                },
                "moduledepartment": {
                    "type": "boolean"
                },
                "moduleprojectprognosis": {
                    "type": "boolean"
                },
                "moduleresourceallocation": {
                    "type": "boolean"
                },
                "moduleprojecteconomy": {
                    "type": "boolean"
                },
                "moduleinvoice": {
                    "type": "boolean"
                },
                "modulebudget": {
                    "type": "boolean"
                },
                "modulereferencefee": {
                    "type": "boolean"
                },
                "moduleHourCost": {
                    "type": "boolean"
                },
                "moduleemployee": {
                    "type": "boolean"
                },
                "moduleproject": {
                    "type": "boolean"
                },
                "moduleprojectcategory": {
                    "type": "boolean"
                },
                "moduleProjectBudget": {
                    "type": "boolean"
                },
                "moduletask": {
                    "type": "boolean"
                },
                "moduleTravelExpense": {
                    "type": "boolean"
                },
                "modulecustomer": {
                    "type": "boolean"
                },
                "modulenote": {
                    "type": "boolean"
                },
                "modulesubscription": {
                    "type": "boolean"
                },
                "moduleproduct": {
                    "type": "boolean"
                },
                "moduleVoucherExport": {
                    "type": "boolean"
                },
                "moduleaccountingreports": {
                    "type": "boolean"
                },
                "moduleCustomerCategories": {
                    "type": "boolean"
                },
                "moduleCustomerCategory1": {
                    "type": "boolean"
                },
                "moduleCustomerCategory2": {
                    "type": "boolean"
                },
                "moduleCustomerCategory3": {
                    "type": "boolean"
                },
                "moduleprojectsubcontract": {
                    "type": "boolean"
                },
                "approvehourlists": {
                    "type": "boolean"
                },
                "approveinvoices": {
                    "type": "boolean"
                },
                "approvetravelreports": {
                    "type": "boolean"
                },
                "completeweeklyhourlists": {
                    "type": "boolean"
                },
                "completemonthlyhourlists": {
                    "type": "boolean"
                },
                "approvemonthlyhourlists": {
                    "type": "boolean"
                },
                "invoiceapprovedhoursmandatory": {
                    "type": "boolean"
                },
                "modulePayrollAccounting": {
                    "type": "boolean"
                },
                "modulePayrollAccountingNO": {
                    "type": "boolean"
                },
                "modulehourlist": {
                    "type": "boolean"
                },
                "moduleTimeBalance": {
                    "type": "boolean"
                },
                "moduleVacationBalance": {
                    "type": "boolean"
                },
                "moduleWorkingHours": {
                    "type": "boolean"
                },
                "moduleCurrency": {
                    "type": "boolean"
                },
                "moduleContact": {
                    "type": "boolean"
                },
                "moduleAutoProjectNumber": {
                    "type": "boolean"
                },
                "moduleWageExport": {
                    "type": "boolean"
                },
                "approveWeeklyHourlists": {
                    "type": "boolean"
                },
                "moduleProvisionSalary": {
                    "type": "boolean"
                },
                "moduleOrderNumber": {
                    "type": "boolean"
                },
                "moduleOrderDiscount": {
                    "type": "boolean"
                },
                "moduleOrderMarkup": {
                    "type": "boolean"
                },
                "moduleOrderLineCost": {
                    "type": "boolean"
                },
                "moduleResourceGroups": {
                    "type": "boolean"
                },
                "moduleVendor": {
                    "type": "boolean"
                },
                "moduleAutoCustomerNumber": {
                    "type": "boolean"
                },
                "moduleAutoVendorNumber": {
                    "type": "boolean"
                },
                "moduleHistorical": {
                    "type": "boolean"
                },
                "showTravelReportLetterhead": {
                    "type": "boolean"
                },
                "moduleOcr": {
                    "type": "boolean"
                },
                "moduleRemit": {
                    "type": "boolean"
                },
                "moduleRemitNets": {
                    "type": "boolean"
                },
                "moduleRemitZtl": {
                    "type": "boolean"
                },
                "moduleRemitAutoPay": {
                    "type": "boolean"
                },
                "moduleTravelExpenseRates": {
                    "type": "boolean"
                },
                "moduleVoucherScanning": {
                    "type": "boolean"
                },
                "moduleInvoiceScanning": {
                    "type": "boolean"
                },
                "moduleHolydayPlan": {
                    "type": "boolean"
                },
                "moduleEmployeeCategory": {
                    "type": "boolean"
                },
                "multipleCustomerCategories": {
                    "type": "boolean"
                },
                "moduleProductInvoice": {
                    "type": "boolean"
                },
                "autoInvoicing": {
                    "type": "boolean"
                },
                "moduleFactoring": {
                    "type": "boolean"
                },
                "moduleEmployeeAccounting": {
                    "type": "boolean"
                },
                "moduleDepartmentAccounting": {
                    "type": "boolean"
                },
                "moduleProjectAccounting": {
                    "type": "boolean"
                },
                "moduleWageProjectAccounting": {
                    "type": "boolean"
                },
                "moduleProductAccounting": {
                    "type": "boolean"
                },
                "moduleElectro": {
                    "type": "boolean"
                },
                "moduleNrf": {
                    "type": "boolean"
                },
                "moduleResultBudget": {
                    "type": "boolean"
                },
                "moduleVoucherTypes": {
                    "type": "boolean"
                },
                "moduleWarehouse": {
                    "type": "boolean"
                },
                "moduleNetsEboks": {
                    "type": "boolean"
                },
                "moduleNetsPrintSalary": {
                    "type": "boolean"
                },
                "moduleNetsPrintInvoice": {
                    "type": "boolean"
                },
                "hourlyRateProjectsWriteUpDown": {
                    "type": "boolean"
                },
                "showRecentlyClosedProjectsOnSupplierInvoice": {
                    "type": "boolean"
                },
                "moduleEmail": {
                    "type": "boolean"
                },
                "sendPayslipsByEmail": {
                    "type": "boolean"
                },
                "moduleApproveVoucher": {
                    "type": "boolean"
                },
                "moduleApproveProjectVoucher": {
                    "type": "boolean"
                },
                "moduleApproveDepartmentVoucher": {
                    "type": "boolean"
                },
                "moduleArchive": {
                    "type": "boolean"
                },
                "moduleOrderOut": {
                    "type": "boolean"
                },
                "moduleMesan": {
                    "type": "boolean"
                },
                "moduleAccountantConnectClient": {
                    "type": "boolean"
                },
                "moduleDivisions": {
                    "type": "boolean"
                },
                "moduleBoligmappa": {
                    "type": "boolean"
                },
                "moduleAdditionProjectMarkup": {
                    "type": "boolean"
                },
                "tripletexSupportLoginAccessCompanyLevel": {
                    "type": "boolean"
                },
                "moduleCRM": {
                    "type": "boolean"
                },
                "modulePensionreport": {
                    "type": "boolean"
                },
                "moduleControlSchemaRequiredInvoicing": {
                    "type": "boolean"
                },
                "moduleControlSchemaRequiredHourTracking": {
                    "type": "boolean"
                },
                "moduleInvoiceOptionVipps": {
                    "type": "boolean"
                },
                "moduleInvoiceOptionEfaktura": {
                    "type": "boolean"
                },
                "moduleInvoiceOptionPaper": {
                    "type": "boolean"
                },
                "moduleInvoiceOptionAvtaleGiro": {
                    "type": "boolean"
                },
                "moduleInvoiceOptionEhfIncoming": {
                    "type": "boolean"
                },
                "moduleInvoiceOptionEhfOutbound": {
                    "type": "boolean"
                },
                "moduleAPI20": {
                    "type": "boolean"
                },
                "moduleAgro": {
                    "type": "boolean"
                },
                "moduleMamut": {
                    "type": "boolean"
                },
                "moduleFactoringAprila": {
                    "type": "boolean"
                },
                "moduleCashCreditAprila": {
                    "type": "boolean"
                },
                "moduleInvoiceOptionAutoinvoiceEhf": {
                    "type": "boolean"
                },
                "moduleSmartScan": {
                    "type": "boolean"
                },
                "moduleAutoBankReconciliation": {
                    "type": "boolean"
                },
                "moduleOffer": {
                    "type": "boolean"
                },
                "moduleVoucherAutomation": {
                    "type": "boolean"
                },
                "moduleAmortization": {
                    "type": "boolean"
                },
                "moduleEncryptedPaySlip": {
                    "type": "boolean"
                },
                "hourCostFactorProject": {
                    "type": "boolean"
                },
                "yearEndReport": {
                    "type": "boolean"
                },
                "moduleLogistics": {
                    "type": "boolean"
                },
                "moduleIndustry": {
                    "type": "boolean"
                }
            }
        },
        "SegmentationRoles": {
            "type": "object",
            "properties": {
                "roleAdministrator": {
                    "type": "boolean"
                },
                "roleAccountAdministrator": {
                    "type": "boolean"
                },
                "roleSystemAdministrator": {
                    "type": "boolean"
                },
                "isAuthInvoicing": {
                    "type": "boolean"
                },
                "isAuthCompanyAdmin": {
                    "type": "boolean"
                },
                "isAuthReadOnly": {
                    "type": "boolean"
                },
                "isAuthCreateOrder": {
                    "type": "boolean"
                },
                "isAuthAccountingSettings": {
                    "type": "boolean"
                },
                "isAuthCompanyWageAdmin": {
                    "type": "boolean"
                },
                "isAuthTravelsAndExpensesAdminSettings": {
                    "type": "boolean"
                },
                "isAuthInvoiceAdminSettings": {
                    "type": "boolean"
                },
                "isAuthInboxVoucher": {
                    "type": "boolean"
                },
                "isAutWageAdminSetting": {
                    "type": "boolean"
                },
                "isAuthWageSettings": {
                    "type": "boolean"
                }
            }
        },
        "ResponseWrapperSupportAPIMeta": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/SupportAPIMeta"
                }
            }
        },
        "SupportAPIMeta": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "sseUrl": {
                    "type": "string"
                },
                "alwaysShowChatButton": {
                    "type": "boolean"
                }
            }
        },
        "ChatResponseDTO": {
            "type": "object",
            "properties": {
                "messageId": {
                    "type": "integer",
                    "format": "int32"
                },
                "prompt": {
                    "type": "string"
                },
                "fullResponse": {
                    "type": "string"
                },
                "feedback": {
                    "type": "string",
                    "enum": [
                        "NO_FEEDBACK",
                        "THUMBS_UP",
                        "THUMBS_DOWN"
                    ]
                },
                "hasError": {
                    "type": "boolean"
                }
            }
        },
        "ListResponseChatResponseDTO": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ChatResponseDTO"
                    }
                }
            }
        },
        "ResponseWrapperChatResponseDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ChatResponseDTO"
                }
            }
        },
        "ResponseWrapperZendeskChatMetaDTO": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ZendeskChatMetaDTO"
                }
            }
        },
        "ZendeskChatMetaDTO": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "locale": {
                    "type": "string"
                },
                "departments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "AnnualAccountsSubTotalLine": {
            "type": "object",
            "properties": {
                "orid": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "technicalName": {
                    "type": "string",
                    "readOnly": true
                },
                "info": {
                    "type": "string",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "notes": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "AnnualAccountsSubTotalSection": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "sumOpeningBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "sumClosingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "subTotalLines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AnnualAccountsSubTotalLine"
                    }
                }
            }
        },
        "ResponseWrapperYearEndAnnualAccounts": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/YearEndAnnualAccounts"
                }
            }
        },
        "YearEndAnnualAccounts": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "sentDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "STARTED",
                        "UPDATED",
                        "RESTARTED",
                        "SUBMITTED_UNSIGNED",
                        "SUBMITTED_SIGNED",
                        "USER_MARKED_AS_SIGNEDBYALL",
                        "SYSTEM_MARKED_AS_SIGNEDBYALL"
                    ]
                },
                "submissionReceptionStatus": {
                    "type": "string",
                    "enum": [
                        "NotSet",
                        "Ok",
                        "UnExpectedError",
                        "ValidationFailed",
                        "Rejected",
                        "Unknown"
                    ]
                },
                "operatingProfitRevenues": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "operatingProfitExpenses": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "operatingProfit": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "netFinancialItemsIncome": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "netFinancialItemsExpenses": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "netFinancialItems": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "ordinaryResultBeforeTaxes": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "ordinaryResultAfterTaxes": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "netProfitOrLossForTheYear": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "netProfitOrLossForTheYearAfterMinoritiesShareOfProfit": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "transfers": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "fixedAssetsIntangible": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "fixedAssetsTangible": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "fixedAssetsFinancial": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "fixedAssets": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "currentAssetsStocks": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "currentAssetsReceivables": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "currentAssetsInvestments": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "currentAssetsBankDepositsCash": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "currentAssets": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "assets": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "equityPaidInCapital": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "equityRetainedEarnings": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "equity": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "longTermLiabilitiesProvisions": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "longTermLiabilitiesOther": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "longTermLiabilities": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "currentLiabilities": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "liabilities": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "equityAndLiabilities": {
                    "$ref": "#/definitions/AnnualAccountsSubTotalSection"
                },
                "sumOpeningBalance": {
                    "type": "number"
                },
                "sumClosingBalance": {
                    "type": "number"
                }
            }
        },
        "BasicData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "nationalIdentityNumber": {
                    "type": "string",
                    "maxLength": 100
                },
                "businessActivityType": {
                    "type": "string",
                    "enum": [
                        "OTHER_COMMERCIAL_ACTIVITIES",
                        "OTHER_COMMERCIAL_ACTIVITIES_2",
                        "OTHER_COMMERCIAL_ACTIVITIES_3",
                        "OTHER_COMMERCIAL_ACTIVITIES_4",
                        "AGRICULTURE_HORTICULTURE_FUR_FARMING",
                        "FISHING_AND_HUNTING_AT_SEA",
                        "REINDEER_HUSBANDRY",
                        "FAMILY_DAY_CARE_CENTRE_IN_OWN_HOME",
                        "SLATE_QUARRYING",
                        "FORESTRY"
                    ]
                },
                "businessActivityDescription": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "GenericData": {
            "type": "object",
            "required": [
                "postType",
                "postValue"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "groupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "genericDataType": {
                    "type": "string",
                    "enum": [
                        "MISC",
                        "TRANSPORT",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "PROFIT_AND_LOSS",
                        "CUSTOMER_RECEIVABLE",
                        "INVENTORIES",
                        "TANGIBLE_FIXED_ASSETS",
                        "RECONCILIATION_OF_EQUITY",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "DOCUMENT_DOWNLOADED",
                        "GROUP_CONTRIBUTIONS",
                        "TAX_RETURN",
                        "TAX_CALCULATIONS",
                        "DOCUMENTATION",
                        "SHARES_AND_SECURITIES",
                        "REAL_ESTATE"
                    ]
                },
                "genericDataSubType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "NOT_LICENSED",
                        "FREIGHT_TRANSPORT",
                        "TAXI",
                        "PRODUCT_TYPE_INVENTORY",
                        "CASH_REGISTER_SYSTEM",
                        "PRIVATE_WITHDRAWAL_OF_GOODS",
                        "ENTERTAINMENT",
                        "MULTI_UNIT_BUILDING_UNIT"
                    ]
                },
                "genericDataSubTypeGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "postType": {
                    "type": "string",
                    "enum": [
                        "REGISTRATION_NUMBER",
                        "DESCRIPTION",
                        "VEHICLE_TYPE",
                        "YEAR_OF_INITIAL_REGISTRATION",
                        "LIST_PRICE",
                        "DATE_FROM",
                        "DATE_TO",
                        "LICENCE",
                        "LICENCE_NUMBER",
                        "IS_ELECTRONIC_VEHICLE_LOGBOOK_LOGGED",
                        "NO_OF_KILOMETRES_TOTAL",
                        "OPERATING_EXPENSES",
                        "LEASING_RENT",
                        "IS_COMPANY_VEHICLE_USED_PRIVATE",
                        "NO_OF_KILOMETRES_PRIVATE",
                        "DEPRECIATION_PRIVATE_USE",
                        "REVERSED_VEHICLE_EXPENSES",
                        "FUEL_COST",
                        "MAINTENANCE_COST",
                        "COST_OF_INSURANCE_AND_TAX",
                        "NO_OF_LITER_FUEL",
                        "TAXIMETER_TYPE",
                        "INCOME_PERSONAL_TRANSPORT",
                        "INCOME_GOODS_TRANSPORT",
                        "DRIVING_INCOME_PAYED_IN_CASH",
                        "DRIVING_INCOME_INVOICED_PUBLIC_AGENCIES",
                        "TIP_PAYED_WITH_CARD_OR_INVOICE",
                        "TIP_PAYED_IN_CASH",
                        "NO_OF_KILOMETRES_SCHOOL_CHILDREN",
                        "NO_OF_KILOMETRES_WITH_PASSENGER",
                        "FLOP_TRIP_AMOUNT",
                        "IS_CONNECTED_TO_CENTRAL",
                        "ID_FOR_PROFIT_AND_LOSS_ACCOUNT",
                        "DESCRIPTION_PROFIT_AND_LOSS_ACCOUNT",
                        "MUNICIPALITY_NUMBER",
                        "OPENING_BALANCE",
                        "PROFIT_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "LOSS_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "PROFIT_REALIZATIONS_LIVESTOCK",
                        "VALUE_ACQUIRED_PROFIT_AND_LOSS_ACCOUNT",
                        "VALUE_REALIZED_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION_OR_DEDUCTION_BASIS",
                        "PERCENTAGE_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION",
                        "ANNUAL_DEDUCTION",
                        "CLOSING_BALANCE",
                        "IS_REGARDING_REALIZATION_SEPARATED_PLOT_AGRICULTURE_OR_FORESTRY",
                        "IS_REGARDING_REALIZATION_WHOLE_AGRICULTURE_OR_FORESTRY_BUSINESS",
                        "ID_FOR_ACCOMMODATION_AND_RESTAURANT",
                        "COVER_CHARGE_SUBJECT_TO_VAT",
                        "COVER_CHARGE_NOT_SUBJECT_TO_VAT",
                        "COVER_CHARGE",
                        "DESCRIPTION_ACCOMMODATION_AND_RESTAURANT",
                        "MUST_BE_CONFIRMED_BY_AUDITOR",
                        "PRODUCT_TYPE",
                        "OPENING_STOCK",
                        "CLOSING_STOCK",
                        "PURCHASE_OF_GOODS",
                        "COST_OF_GOODS_SOLD",
                        "SALES_REVENUE_AND_WITHDRAWALS",
                        "SALES_REVENUE_IN_CASH",
                        "CASH_REGISTER_SYSTEM_YEAR_OF_INITIAL_REGISTRATION",
                        "CASH_REGISTER_SYSTEM_TYPE",
                        "WITHDRAWAL_OF_PRODUCTS_VALUED_AT_TURNOVER",
                        "PRIVATE_WITHDRAWAL_ENTERED_ON_PRIVATE_ACCOUNT",
                        "TOTAL_WITHDRAWAL_PRODUCTS_ENTERED_AS_SALES_REVENUE",
                        "WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "WITHDRAWAL_VALUE_VALUED_AT_MARKET_VALUE",
                        "MARKUP_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "TOTAL_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "OPENING_BALANCE_CREDIT_SALES",
                        "CLOSING_BALANCE_CREDIT_SALES",
                        "OPENING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "CLOSING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "OPENING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "CLOSING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "OPENING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "CLOSING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "OPENING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "CLOSING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "OPENING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "CLOSING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "TANGIBLE_FIXED_ASSETS_TYPE",
                        "OPENING_BALANCE_TANGIBLE_FIXED_ASSETS",
                        "DEPRECIATION_PERCENTAGE",
                        "STRAIGHT_LINE_DEPRECIATION",
                        "PROFIT_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "LOSS_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "CASH_DEPOSITS",
                        "CONTRIBUTIONS_IN_KIND",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_CASH",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_OTHER_ASSETS",
                        "DEBT_WAVING",
                        "BUYING_OWN_SHARES",
                        "SELLING_OWN_SHARES",
                        "DEBT_CONVERSION_TO_EQUITY",
                        "POSITIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "NEGATIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "OTHER_POSITIVE_CHANGE_IN_EQUITY",
                        "OTHER_NEGATIVE_CHANGE_IN_EQUITY",
                        "NONE_DEDUCTIBLE_COST",
                        "POSITIVE_TAX_COST",
                        "INTEREST_EXPENSE_FIXED_TAX",
                        "SHARE_OF_LOSS_FROM_INVESTMENT",
                        "REVERSAL_OF_IMPAIRMENT",
                        "ACCOUNTING_IMPAIRMENT",
                        "ACCOUNTING_LOSS",
                        "ACCOUNTING_DEFICIT_NORWEGIAN_SDF",
                        "ACCOUNTING_DEFICIT_FOREIGN_SDF",
                        "ACCOUNTING_LOSS_NORWEGIAN_SDF",
                        "ACCOUNTING_LOSS_FOREIGN_SDF",
                        "RETURNED_DEBT_INTEREST",
                        "TAXABLE_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "TAXABLE_DIVIDEND_ON_SHARES",
                        "TAXABLE_PART_OF_DIVIDEND_AND_DISTRIBUTION",
                        "SHARE_OF_TAXABLE_PROFIT_NORWEGIAN_SDF",
                        "SHARE_OF_TAXABLE_PROFIT_FOREIGN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_NORWEGIAN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_FOREIGN_SDF",
                        "ADDITION_INTEREST_COST",
                        "CORRECTION_PURPOSED_DIVIDEND",
                        "TAXABLE_PROFIT_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "INCOME_SUPPLEMENT_FOR_CONVERSION_DIFFERENCE",
                        "OTHER_INCOME_SUPPLEMENT",
                        "RETURN_OF_INCOME_RELATED_DIVIDENDS",
                        "PROFIT_AND_LOSS_GROUP_CONTRIBUTION",
                        "ACCOUNTING_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "ACCOUNTING_PROFIT_SHARE_NORWEGIAN_SDF",
                        "ACCOUNTING_PROFIT_SHARE_FOREIGN_SDF",
                        "ACCOUNTING_GAIN_NORWEGIAN_SDF",
                        "ACCOUNTING_GAIN_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_NORWEGIAN_SDF",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_NORWEGIAN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "ISSUE_AND_ESTABLISHMENT_COST",
                        "INCOME_DEDUCTION_FROM_ACCOUNTING_CURRENCY_TO_NOK",
                        "OTHER_INCOME_DEDUCTION",
                        "TEMPORARY_DIFFERENCES_TYPE",
                        "OPENING_BALANCE_ACCOUNTABLE_VALUE",
                        "CLOSING_BALANCE_ACCOUNTABLE_VALUE",
                        "OPENING_BALANCE_TAX_VALUE",
                        "CLOSING_BALANCE_TAX_VALUE",
                        "OPENING_BALANCE_DIFFERENCES",
                        "CLOSING_BALANCE_DIFFERENCES",
                        "SHOW_PROFIT_AND_LOSS",
                        "SHOW_ACCOMMODATION_AND_RESTAURANT",
                        "IS_ACCOUNTABLE",
                        "USE_ACCOUNTING_VALUES_IN_INVENTORIES",
                        "USE_ACCOUNTING_VALUES_IN_CUSTOMER_RECEIVABLES",
                        "SHOW_TANGIBLE_FIXED_ASSET",
                        "SHOW_CAR",
                        "SHOW_INVENTORIES",
                        "SHOW_CUSTOMER_RECEIVABLES",
                        "SHOW_CONCERN_RELATION",
                        "OWN_BUSINESS_PROPERTIES",
                        "OWN_ASSET_PAPER",
                        "TRANSFERRED_BY",
                        "TRANSFERRED_DATE",
                        "SET_ACCOUNTANT_REVISED",
                        "IS_TAXABLE",
                        "AUDITING_OBLIGATION",
                        "VALIDATION_ONLY_ON_SUBMIT",
                        "DATE_OF_DETERMINATION",
                        "CONFIRMING_COMPANY_REPRESENTATIVE",
                        "CONTACT_PERSON",
                        "PARENT_COMPANY",
                        "SMALL_ENTERPRISES",
                        "PREPARED_BY_AUTHORIZED_ACCOUNTANT",
                        "SERVICE_ASSISTANCE_USED",
                        "ELECTRONIC_CASE_PROCESSING",
                        "SUBMIT_WITHOUT_BUSINESS_SPECIFICATION",
                        "SHOW_RESULT_AND_BALANCE_PREVIOUS_YEAR",
                        "DATE_START",
                        "DATE_END",
                        "INCLUDE_PREVIOUS_YEAR_IN_RESULT",
                        "DISTRIBUTE_INCOME_MODULE_INDUSTRY",
                        "YEAR_END_BRREG_DOC_ID",
                        "YEAR_END_BRREG_DOC_FETCHER_NAME",
                        "YEAR_END_DOCUMENTATION_ACCOMMODATION_AND_RESTAURANT",
                        "YEAR_END_DOCUMENTATION_PROFIT_AND_LOSS_ACCOUNT",
                        "YEAR_END_DOCUMENTATION_COMMERCIAL_VEHICLE",
                        "YEAR_END_DOCUMENTATION_TANGIBLE_FIXED_ASSETS",
                        "YEAR_END_DOCUMENTATION_INVENTORIES",
                        "YEAR_END_DOCUMENTATION_ACCOUNTS_RECEIVABLE_FROM_CUSTOMERS",
                        "YEAR_END_DOCUMENTATION_PROFIT_LOSS",
                        "YEAR_END_DOCUMENTATION_BALANCE",
                        "YEAR_END_DOCUMENTATION_PERSONAL_INCOME",
                        "YEAR_END_DOCUMENTATION_PERMANENT_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TEMPORARY_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TAX_RELATED_RESULT",
                        "YEAR_END_DOCUMENTATION_GROUP_CONTRIBUTIONS",
                        "YEAR_END_DOCUMENTATION_EQUITY_RECONCILIATION",
                        "YEAR_END_DOCUMENTATION_TAX_RETURN",
                        "YEAR_END_DOCUMENTATION_DIVIDEND",
                        "YEAR_END_DOCUMENTATION_DISPOSITIONS",
                        "YEAR_END_DOCUMENTATION_PROPERTIES",
                        "YEAR_END_DOCUMENTATION_SECURITIES",
                        "YEAR_END_DOCUMENTATION_TAX_CALCULATION",
                        "YEAR_END_DOCUMENTATION_AUDIT_REPORT",
                        "YEAR_END_DOCUMENTATION_ANNUAL_REPORT",
                        "YEAR_END_DOCUMENTATION_CASH_FLOW_STATEMENT",
                        "YEAR_END_DOCUMENTATION_ANNEXES_TO_THE_ANNUAL_ACCOUNTS",
                        "RECEIVER_ORG_NR",
                        "RECEIVER_NAME",
                        "CONCERN_CONNECTION",
                        "VOTING_LIMIT",
                        "DATE_OF_ACQUISITION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "APPLICATION_OF_LOSS_CARRY_FORWARDS",
                        "ACCUMULATED_LOSS_FROM_PREVIOUS_YEARS",
                        "CORRECTIONS_AND_OTHER_CAPITAL",
                        "CORRECTIONS_AND_OTHER_DEBT",
                        "NUMBER_OF_SHARES",
                        "IS_PART_OF_GROUP_COMPANY",
                        "IS_LISTED_ON_THE_STOCK_EXCHANGE",
                        "IS_REORGANIZED_ACROSS_BORDERS",
                        "HAS_RECEIVED_OR_TRANSFERRED_ASSETS",
                        "HEAD_OF_GROUP_NAME",
                        "HEAD_OF_GROUP_COUNTRY_CODE",
                        "HEAD_OF_GROUP_LAST_YEAR_NAME",
                        "HEAD_OF_GROUP_LAST_YEAR_COUNTRY_CODE",
                        "FOREIGN_OWNERSHIP_COMPANY_NAME",
                        "FOREIGN_OWNERSHIP_COMPANY_COUNTRY_CODE",
                        "OWNS_MIN_50_PERCENT_OF_FOREIGN_COMPANY",
                        "HAS_PERMANENT_ESTABLISHMENT_ABROAD",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_NAME",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_COUNTRY_CODE",
                        "HAS_PERFORMANCE_BETWEEN_SHAREHOLDERS_AND_OTHER",
                        "HAS_OUTSTANDING_PAYMENT_CLAIMS_RELATED_TO_ILLEGAL_STATE_AID",
                        "IS_SMALL_OR_MEDIUM_SIZED_BUSINESS",
                        "HAD_FINANCIAL_DIFFICULTIES_LAST_YEAR",
                        "IS_GROUP_COMPANY",
                        "HAS_RECEIVED_OTHER_PUBLIC_SUPPORT",
                        "AID_SCHEME_TONNAGE_TAX_REGIME",
                        "AID_SCHEME_RULES_FOR_ELECTRIC_DELIVERY_TRUCKS",
                        "AID_SCHEME_FOR_LONG_TERM_INVESTMENTS",
                        "AID_SCHEME_EMPLOYMENT_RELATED_OPTIONS_START_UP",
                        "AID_SCHEME_TAX_FUN",
                        "AID_SCHEME_FAVOURABLE_DEPRECIATION_RULES",
                        "AID_SCHEME_REGIONALLY_DIFFERENTIATED_INSURANCE_CONTRIBUTIONS",
                        "AID_SCHEME_FAVOURABLE_DETERMINED_LIST_PRICES_ELECTRIC_VEHICLES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_LEASING_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_BATTERIES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_NEWS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_INDUSTRIAL_SECTOR",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DISTRICT_HEATING",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_TARGET_ZONE",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DATA_CENTRES",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_COMMERCIAL_VESSELS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_ENERGY_PRODUCTS",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_WOOD_INDUSTRY",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_PIGMENT_INDUSTRY",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_MINERAL_OIL",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_GAS",
                        "AID_SCHEME_EXEMPTION_NOX_DUTY",
                        "AID_SCHEME_EXEMPTION_TRANSFER_FEE",
                        "AID_SCHEME_REDUCED_ROAD_TRAFFIC_INSURANCE_TAX",
                        "OTHER_CORRECTIONS",
                        "DEFERRED_TAX_ASSETS_IN_BALANCE",
                        "SHARES_AND_SECURITIES_NAME",
                        "SHARES_AND_SECURITIES_STOCK_TYPE",
                        "SHARES_AND_SECURITIES_VAT_NUMBER",
                        "SHARES_AND_SECURITIES_ISIN",
                        "SHARES_AND_SECURITIES_COUNTRY_CODE",
                        "SHARES_AND_SECURITIES_SHARE_CLASS",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_START_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_END_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_VALUE",
                        "SHARES_AND_SECURITIES_TOTAL_VALUE",
                        "SHARES_AND_SECURITIES_DIVIDEND",
                        "SHARES_AND_SECURITIES_INTEREST_INCOME",
                        "SHARES_AND_SECURITIES_PROFIT_REALISATION",
                        "SHARES_AND_SECURITIES_LOSS_REALISATION",
                        "SHARES_AND_SECURITIES_PROFIT_INTEREST",
                        "SHARES_AND_SECURITIES_LOSS_INTEREST",
                        "SHARES_AND_SECURITIES_EXEMPTION_METHOD",
                        "SHARES_AND_SECURITIES_FINANCIAL_PRODUCT",
                        "REAL_ESTATE_TYPE",
                        "REAL_ESTATE_DESCRIPTION",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "SHARE_OF_ASSET_VALUE",
                        "INTERNAL_PROPERTY_IDENTIFIER",
                        "ASSET_VALUE_FOR_ASSET_SHARE",
                        "VALUE_BEFORE_VALUATION_DISCOUNT_ASSET_SHARE",
                        "TOTAL_AREA",
                        "CALCULATED_RENTAL_VALUE",
                        "REAL_ESTATE_SERG_NO",
                        "REAL_ESTATE_ADDRESS",
                        "REAL_ESTATE_ZIP_CODE",
                        "REAL_ESTATE_POSTAL_PLACE_NAME",
                        "REAL_ESTATE_COUNTRY_CODE",
                        "REAL_ESTATE_MUNICIPALITY_NO",
                        "REAL_ESTATE_MUNICIPALITY_NAME",
                        "REAL_ESTATE_CADASTRAL_UNIT_NO",
                        "REAL_ESTATE_PROPERTY_UNIT_NO",
                        "REAL_ESTATE_LEASEHOLD_NO",
                        "REAL_ESTATE_SECTION_NO",
                        "REAL_ESTATE_OWNERSHIP_SHARE_PERCENTAGE",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE",
                        "REAL_ESTATE_EXPENSES_YEARLY",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY",
                        "REAL_ESTATE_DATE_DOCUMENTED",
                        "REAL_ESTATE_MARKET_VALUE_MANUAL",
                        "REAL_ESTATE_MARKET_VALUE_CALCULATED",
                        "REAL_ESTATE_USE_VALUE_MARKET",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_NAME",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_ORG_NO",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_SHARE_NO",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_SELF_OWNED_OR_COOPERATIVE_DWELLING_CALCULATED_MARKET_VALUE",
                        "REAL_ESTATE_RENTAL_AREA_TOTAL",
                        "REAL_ESTATE_RENTAL_PERIOD_MONTHS",
                        "REAL_ESTATE_RENTAL_INCOME_TOTAL_CALCULATED",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PREV_YEAR",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PRIOR_YEAR_TWO",
                        "REAL_ESTATE_RENTAL_ASSET_VALUE_BASE",
                        "REAL_ESTATE_RENTAL_GROSS_INCOME",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE_MANUAL",
                        "REAL_ESTATE_EXPENSES_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY_MANUAL",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_ROW_ID",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_NO",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_AREA",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_VALUE",
                        "YEARLY_DIVIDEND"
                    ]
                },
                "postValue": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "TangibleFixedAsset": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "objectIdentifier": {
                    "type": "string",
                    "readOnly": true
                },
                "objectGroup": {
                    "type": "string",
                    "readOnly": true
                },
                "accountNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "type": "string",
                    "readOnly": true
                },
                "openingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "newAcquisitions": {
                    "type": "number",
                    "readOnly": true
                },
                "acquisitionCost": {
                    "type": "number",
                    "readOnly": true
                },
                "improvements": {
                    "type": "number",
                    "readOnly": true
                },
                "publicSubsidies": {
                    "type": "number",
                    "readOnly": true
                },
                "salesAndOtherRealisation": {
                    "type": "number",
                    "readOnly": true
                },
                "salesAndOtherRealisationRecognition": {
                    "type": "number",
                    "readOnly": true
                },
                "subsidiesForRegionalInvestments": {
                    "type": "number",
                    "readOnly": true
                },
                "reversalOfSubsidiesForRegionalInvestments": {
                    "type": "number",
                    "readOnly": true
                },
                "adjustmentOfInputVat": {
                    "type": "number",
                    "readOnly": true
                },
                "obviousChangeOfValue": {
                    "type": "number",
                    "readOnly": true
                },
                "unknownTransactionType": {
                    "type": "number",
                    "readOnly": true
                },
                "depreciation": {
                    "type": "number",
                    "readOnly": true
                },
                "writeupsOrWritedowns": {
                    "type": "number",
                    "readOnly": true
                },
                "depreciationTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "depreciationPercentage": {
                    "type": "number",
                    "readOnly": true
                },
                "depreciationPercentageTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "depreciationDifference": {
                    "type": "number",
                    "readOnly": true
                },
                "incomeRecognitionOfNegativeBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "straightLineDepreciation": {
                    "type": "number",
                    "readOnly": true
                },
                "straightLineDepreciationTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "basisForDepreciationOrIncomeRecognition": {
                    "type": "number",
                    "readOnly": true
                },
                "basisForDepreciationOrIncomeRecognitionTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "profitTransferredToProfitAndLossAccount": {
                    "type": "number",
                    "readOnly": true
                },
                "lossTransferredToProfitAndLossAccount": {
                    "type": "number",
                    "readOnly": true
                },
                "accountingValueProfitAndLoss": {
                    "type": "string",
                    "readOnly": true
                },
                "warningTooHighPercentage": {
                    "type": "string",
                    "readOnly": true
                },
                "warningTooLowPercentage": {
                    "type": "string",
                    "readOnly": true
                },
                "infoResidualWriteOff": {
                    "type": "string",
                    "readOnly": true
                },
                "infoMessageDepreciation": {
                    "type": "string",
                    "readOnly": true
                },
                "infoMessageIncomeRecognition": {
                    "type": "string",
                    "readOnly": true
                },
                "infoTransferBalance": {
                    "type": "string",
                    "readOnly": true
                },
                "negate": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "YearEndReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "sentDate": {
                    "type": "string"
                },
                "yearEndReportBasicData": {
                    "$ref": "#/definitions/BasicData"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "STARTED",
                        "UPDATED",
                        "RESTARTED",
                        "COMPLEMENTARY_DATA_DOWNLOADED",
                        "COMPLEMENTARY_DATA_MODIFIED",
                        "PREVALIDATED_ACCEPTED",
                        "PREVALIDATED_DECLINED",
                        "ALTINN_INSTANCE_CREATED_AND_INITIATED",
                        "ALTINN_INSTANCE_MAIN_CONTENT_UPLOADED",
                        "ALTINN_INSTANCE_CLOSED",
                        "ALTINN_INSTANCE_APPROVED_FOR_TRANSFER",
                        "CONTENT_PROCESSING_AT_RECIPIENT",
                        "ALTINN_INSTANCE_HAS_FEEDBACK",
                        "FEEDBACK_ACCEPTED",
                        "FEEDBACK_DECLINED",
                        "USER_MARKED_AS_DELIVERED"
                    ]
                },
                "altinnMetadata": {
                    "readOnly": true,
                    "$ref": "#/definitions/AltinnInstance"
                },
                "submissionResult": {
                    "$ref": "#/definitions/YearEndSubmissionResult"
                },
                "submissionInProgress": {
                    "type": "boolean"
                },
                "submissionAttemptDate": {
                    "type": "string"
                },
                "annualResult": {
                    "type": "number"
                },
                "asset": {
                    "type": "number"
                },
                "equityAndDebt": {
                    "type": "number"
                },
                "operatingRevenue": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "operatingExpense": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "capitalIncome": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "capitalCost": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "extraordinaryCost": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "taxCost": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "fixedAsset": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "currentAsset": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "equity": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "debt": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "currentDebt": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "inventories": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "yearEndReportPosting": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "tangibleFixedAssets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TangibleFixedAsset"
                    }
                },
                "wealthFromBusinessActivity": {
                    "$ref": "#/definitions/YearEndReportType"
                },
                "showInfoSumDepreciation": {
                    "type": "boolean"
                },
                "showInfoSumRevenueRecognitionNegBalance": {
                    "type": "boolean"
                }
            }
        },
        "YearEndReportPost": {
            "type": "object",
            "properties": {
                "groupNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "subPost": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "technicalName": {
                    "type": "string",
                    "readOnly": true
                },
                "info": {
                    "type": "string",
                    "readOnly": true
                },
                "sumAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmountPreviousYear": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceIn": {
                    "type": "number",
                    "readOnly": true
                },
                "isExcludeFromTaxReturn": {
                    "type": "boolean"
                }
            }
        },
        "YearEndReportType": {
            "type": "object",
            "properties": {
                "sumAmount": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAmountPreviousYear": {
                    "type": "number",
                    "readOnly": true
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/YearEndReportPost"
                    }
                }
            }
        },
        "YearEndSubmissionResult": {
            "type": "object",
            "required": [
                "failureStep"
            ],
            "properties": {
                "failureStep": {
                    "type": "string",
                    "enum": [
                        "DOWNLOADING_COMPLEMENTARY_DATA",
                        "PREVALIDATING",
                        "EXCHANGING_ACCESS_TOKEN",
                        "CREATING_ALTINN_INSTANCE",
                        "UPLOADING_MAIN_CONTENT_TO_ALTINN_INSTANCE",
                        "CLOSING_ALTINN_INSTANCE",
                        "APPROVING_ALTINN_INSTANCE_FOR_TRANSFER",
                        "NONE"
                    ]
                },
                "failureCategory": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN",
                        "INTERNAL_VALIDATION_FAILED",
                        "EXTERNAL_SERVICE_UNREACHABLE",
                        "EXTERNAL_SERVICE_API_ERROR",
                        "UNEXPECTED_RESPONSE_CONTENT"
                    ]
                },
                "failureMessage": {
                    "type": "string",
                    "maxLength": 255
                },
                "validationResult": {
                    "readOnly": true,
                    "$ref": "#/definitions/YearEndValidationResult"
                }
            }
        },
        "YearEndValidationDeviation": {
            "type": "object",
            "properties": {
                "deviationType": {
                    "type": "string",
                    "readOnly": true
                },
                "occurrenceIdentifier": {
                    "type": "string",
                    "readOnly": true
                },
                "receivedValue": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedValue": {
                    "type": "number",
                    "readOnly": true
                },
                "deviationInValue": {
                    "type": "number",
                    "readOnly": true
                },
                "receivedText": {
                    "type": "string",
                    "readOnly": true
                },
                "calculatedText": {
                    "type": "string",
                    "readOnly": true
                },
                "path": {
                    "type": "string",
                    "readOnly": true
                },
                "otherInformation": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "YearEndValidationGuidance": {
            "type": "object",
            "properties": {
                "guidanceType": {
                    "type": "string",
                    "readOnly": true
                },
                "occurrenceIdentifier": {
                    "type": "string",
                    "readOnly": true
                },
                "helpText": {
                    "type": "string",
                    "readOnly": true
                },
                "strategyOfService": {
                    "type": "string",
                    "readOnly": true
                },
                "path": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "YearEndValidationResult": {
            "type": "object",
            "properties": {
                "resultFromValidation": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "validatedOK",
                        "validatedWithErrors"
                    ]
                },
                "causesOfValidatedWithError": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "type": "string"
                    }
                },
                "deviationsAtValidation": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/YearEndValidationDeviation"
                    }
                },
                "deviationsAfterCalculation": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/YearEndValidationDeviation"
                    }
                },
                "guidancesAfterControl": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/YearEndValidationGuidance"
                    }
                }
            }
        },
        "ResponseWrapperTaxCalculation": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TaxCalculation"
                }
            }
        },
        "TaxCalculation": {
            "type": "object",
            "properties": {
                "objectIdentifier": {
                    "type": "number",
                    "readOnly": true
                },
                "taxableProfit": {
                    "type": "number",
                    "readOnly": true
                },
                "accumulatedLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "taxRateThisYear": {
                    "type": "number",
                    "readOnly": true
                },
                "taxRateNextYear": {
                    "type": "number",
                    "readOnly": true
                },
                "taxCalculated": {
                    "type": "number",
                    "readOnly": true
                },
                "taxPosted": {
                    "type": "number",
                    "readOnly": true
                },
                "taxDiff": {
                    "type": "number",
                    "readOnly": true
                },
                "tooLittleTaxSetAside": {
                    "type": "number",
                    "readOnly": true
                },
                "tooMuchTaxSetAside": {
                    "type": "number",
                    "readOnly": true
                },
                "totalTaxSetAside": {
                    "type": "number",
                    "readOnly": true
                },
                "basisDefferedTax": {
                    "type": "number",
                    "readOnly": true
                },
                "basisDefferedTaxAssets": {
                    "type": "number",
                    "readOnly": true
                },
                "deferredTaxOpeningBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "deferredTaxAssetsOpeningBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "deferredTaxClosingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "deferredTaxAssetsClosingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedDeferredTax": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedDeferredTaxAssets": {
                    "type": "number",
                    "readOnly": true
                },
                "increasedDeferredTax": {
                    "type": "number",
                    "readOnly": true
                },
                "decreasedDeferredTax": {
                    "type": "number",
                    "readOnly": true
                },
                "increasedDeferredTaxAssets": {
                    "type": "number",
                    "readOnly": true
                },
                "decreasedDeferredTaxAssets": {
                    "type": "number",
                    "readOnly": true
                },
                "deferredTaxToBePosted": {
                    "type": "number",
                    "readOnly": true
                },
                "deferredTaxAssetsToBePosted": {
                    "type": "number",
                    "readOnly": true
                },
                "totalTaxToSetAsside": {
                    "type": "number",
                    "readOnly": true
                },
                "totalAdditions": {
                    "type": "number",
                    "readOnly": true
                },
                "totalDeductions": {
                    "type": "number",
                    "readOnly": true
                },
                "totalBasis": {
                    "type": "number",
                    "readOnly": true
                },
                "deferredTaxAssetsInBalance": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperYearEndReport": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/YearEndReport"
                }
            }
        },
        "AccountSpecification": {
            "type": "object",
            "properties": {
                "startDate": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "type": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "totalAmountVat": {
                    "type": "number"
                },
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Account"
                    }
                }
            }
        },
        "ResponseWrapperAccountSpecification": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AccountSpecification"
                }
            }
        },
        "ResponseWrapperBasicData": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/BasicData"
                }
            }
        },
        "Checklist": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "checklistProperty": {
                    "$ref": "#/definitions/ChecklistProperty"
                },
                "customizedChecklistProperty": {
                    "$ref": "#/definitions/CustomizedChecklistProperty"
                },
                "checked": {
                    "type": "boolean"
                },
                "employee": {
                    "$ref": "#/definitions/Employee"
                },
                "changedDate": {
                    "type": "string"
                },
                "comment": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "ChecklistProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "checklistType": {
                    "type": "string",
                    "enum": [
                        "TANGIBLE_FIXED_ASSETS",
                        "PROFIT_AND_LOSS",
                        "INVENTORIES",
                        "CUSTOMER_RECEIVABLES",
                        "COMMERCIAL_VEHICLE",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "RESULT_BALANCE",
                        "PERSONAL_INCOME",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "TAXABLE_RESULT",
                        "GROUP_CONTRIBUTION",
                        "DIVIDEND",
                        "DISPOSITIONS",
                        "RECONCILIATION_OF_EQUITY",
                        "PROPERTY",
                        "ASSET_PAPIR",
                        "TAX_RETURN",
                        "TAX_RETURN_TAX_CALCULATION",
                        "CONTROL_TAX_RETURN",
                        "SUBMIT",
                        "GENERAL_INFO",
                        "RESULT_BALANCE_ANNUAL_ACCOUNT",
                        "NOTES",
                        "CONTROL_ANNUAL_ACCOUNT",
                        "ANNUAL_ACCOUNT_SUBMITTED",
                        "ABOUT_BUSINESS",
                        "PREPARATION",
                        "SETTLEMENTS_ITEMS",
                        "WHAT_TO_REPORT"
                    ]
                },
                "typeId": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                }
            }
        },
        "CustomizedChecklistProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                },
                "checklistType": {
                    "type": "string",
                    "enum": [
                        "TANGIBLE_FIXED_ASSETS",
                        "PROFIT_AND_LOSS",
                        "INVENTORIES",
                        "CUSTOMER_RECEIVABLES",
                        "COMMERCIAL_VEHICLE",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "RESULT_BALANCE",
                        "PERSONAL_INCOME",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "TAXABLE_RESULT",
                        "GROUP_CONTRIBUTION",
                        "DIVIDEND",
                        "DISPOSITIONS",
                        "RECONCILIATION_OF_EQUITY",
                        "PROPERTY",
                        "ASSET_PAPIR",
                        "TAX_RETURN",
                        "TAX_RETURN_TAX_CALCULATION",
                        "CONTROL_TAX_RETURN",
                        "SUBMIT",
                        "GENERAL_INFO",
                        "RESULT_BALANCE_ANNUAL_ACCOUNT",
                        "NOTES",
                        "CONTROL_ANNUAL_ACCOUNT",
                        "ANNUAL_ACCOUNT_SUBMITTED",
                        "ABOUT_BUSINESS",
                        "PREPARATION",
                        "SETTLEMENTS_ITEMS",
                        "WHAT_TO_REPORT"
                    ]
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "ResponseWrapperChecklist": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Checklist"
                }
            }
        },
        "ListResponseChecklist": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Checklist"
                    }
                }
            }
        },
        "ListResponseChecklistProperty": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ChecklistProperty"
                    }
                }
            }
        },
        "ResponseWrapperCustomizedChecklistProperty": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CustomizedChecklistProperty"
                }
            }
        },
        "ListResponseCustomizedChecklistProperty": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/CustomizedChecklistProperty"
                    }
                }
            }
        },
        "DepreciationRate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "balanceGroup": {
                    "type": "string",
                    "readOnly": true
                },
                "maxPercentage": {
                    "type": "number",
                    "readOnly": true
                },
                "oppositePostingAccount": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "maxPercentagePreviousYear": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "oppositePostingAccountPreviousYear": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ListResponseDepreciationRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/DepreciationRate"
                    }
                }
            }
        },
        "Disposition": {
            "type": "object",
            "properties": {
                "annualResult": {
                    "type": "number",
                    "readOnly": true
                },
                "groupContributionGiven": {
                    "type": "number",
                    "readOnly": true
                },
                "groupContributionReceived": {
                    "type": "number",
                    "readOnly": true
                },
                "dividend": {
                    "type": "number",
                    "readOnly": true
                },
                "sumAnnualResult": {
                    "type": "number",
                    "readOnly": true
                },
                "freeEquityOpeningBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "freeEquityClosingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedFreeEquityClosingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "freeEquityDiff": {
                    "type": "number",
                    "readOnly": true
                },
                "uncoveredLossOpeningBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "uncoveredLossClosingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedUncoveredLossClosingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "uncoveredLossDiff": {
                    "type": "number",
                    "readOnly": true
                },
                "remainingUncoveredLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "freeEquity": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperDisposition": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Disposition"
                }
            }
        },
        "Dividend": {
            "type": "object",
            "properties": {
                "accountedDividend": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DividendDetails"
                    }
                },
                "accountedGroupContribution": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DividendDetails"
                    }
                },
                "annualResultAfterTax": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DividendDetails"
                    }
                },
                "equityInAccount": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DividendDetails"
                    }
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "difference": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "DividendDetails": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "value": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperDividend": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/Dividend"
                }
            }
        },
        "EnumType": {
            "type": "object",
            "properties": {
                "enumType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "VEHICLE_TYPE",
                        "VEHICLE_CATEGORY",
                        "TAXIMETER",
                        "BUSINESS_ACTIVITY_TYPE",
                        "TAX_TRANSACTION_TYPE",
                        "TYPE_OF_GOODS",
                        "CASH_REGISTER_SYSTEM",
                        "COUNTRY_CODE",
                        "STEP_TYPE",
                        "STOCK_TYPE",
                        "SHARE_CLASS",
                        "REAL_ESTATE_TYPE",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "FINANCIAL_PRODUCT"
                    ]
                },
                "type": {
                    "type": "string",
                    "readOnly": true
                },
                "value": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "technicalName": {
                    "type": "string",
                    "readOnly": true
                },
                "stepNumber": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                }
            }
        },
        "ListResponseEnumType": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/EnumType"
                    }
                }
            }
        },
        "CashRegisterSystem": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "number",
                    "readOnly": true
                },
                "genericDataType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "MISC",
                        "TRANSPORT",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "PROFIT_AND_LOSS",
                        "CUSTOMER_RECEIVABLE",
                        "INVENTORIES",
                        "TANGIBLE_FIXED_ASSETS",
                        "RECONCILIATION_OF_EQUITY",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "DOCUMENT_DOWNLOADED",
                        "GROUP_CONTRIBUTIONS",
                        "TAX_RETURN",
                        "TAX_CALCULATIONS",
                        "DOCUMENTATION",
                        "SHARES_AND_SECURITIES",
                        "REAL_ESTATE"
                    ]
                },
                "genericDataSubTypeGroupId": {
                    "type": "number",
                    "readOnly": true
                },
                "yearOfInitialRegistration": {
                    "type": "number",
                    "readOnly": true
                },
                "cashRegisterSystem": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ABLINDEX_EVERESTBYLINDEX_11240",
                        "ABLINDEX_EVERESTBYLINDEX_11250",
                        "ABLINDEX_EVERESTBYLINDEX_11260",
                        "ABLINDEX_EVERESTBYLINDEX_11270",
                        "ABLINDEX_EVERESTBYLINDEX_113110",
                        "ABLINDEX_EVERESTBYLINDEX_113170",
                        "ABLINDEX_EVERESTBYLINDEX_113250",
                        "ABLINDEX_EVERESTBYLINDEX_113290",
                        "ABLINDEX_EVERESTBYLINDEX_113300",
                        "ABLINDEX_EVERESTBYLINDEX_113310",
                        "ABLINDEX_EVERESTBYLINDEX_113320",
                        "ABLINDEX_EVERESTBYLINDEX_113330",
                        "ABLINDEX_EVERESTBYLINDEX_116110",
                        "ABLINDEX_EVERESTBYLINDEX_116170",
                        "ABLINDEX_EVERESTBYLINDEX_116200",
                        "ABLINDEX_EVERESTBYLINDEX_11670",
                        "ABLINDEX_EVERESTBYLINDEX_117110",
                        "ABLINDEX_EVERESTBYLINDEX_11740",
                        "AJOURNORDICAPS_AJOUR_SOFTWAREBESTEMT_70",
                        "AJOURNORDIC_NORGEAS_AJOUR_2",
                        "AKTECHOTELAS_PICASSO_83",
                        "AKTSIASELTSHELMES_HELMESPOS_101",
                        "ALFAGRUPPENAS_ALFAKASSE_V10",
                        "ALFASOFTWAREAS_ROLFPOS_701",
                        "ALREADYORDEREDAS_MOBILE04_31",
                        "AMICABUSINESSSOLUTIONS_TENDERPOS_13000",
                        "ANCONAB_SHARPDININGNO_10",
                        "APPEXAS_MANITSYS_010",
                        "ARANTEK_ARANTEK_74XX",
                        "ARANTEK_ARANTEK_75XX",
                        "ARANTEK_PAYONE_7XXX",
                        "ARANTEK_S8RPOS_75XX",
                        "ARANTEK_TOPTOUCH_75XX",
                        "ARKOTERAPEUT_WINDOWS_5XX",
                        "ATRONELECTRONICGMBH_ACE130_V1103",
                        "ATRONELECTRONICGMBH_AFA460_491_V1103",
                        "ATRONELECTRONICGMBH_AFA470_V1103",
                        "ATRONELECTRONICGMBH_AFR4_V1103",
                        "ATRONELECTRONICGMBH_AMR172_V323",
                        "ATRONELECTRONICGMBH_ASTS_V123",
                        "ATRONELECTRONICGMBH_ATRIES_256",
                        "ATRONELECTRONICGMBH_FRTOUCH_V1101",
                        "AVIONORWAYAS_AVIOMOBILEPOS_30",
                        "AVIONORWAYAS_AVIOPOS_31",
                        "AXESSAG_SMARTPOS_121",
                        "B2BTRADING_MICROPOS",
                        "BAIKINGUAS_BAIKINGUFOOD_BEVERAGE_ANDROID112",
                        "BAIKINGUAS_RETAILCLOUD_20181",
                        "BESTVALUEAS_HANDELIPRAKSIS_401",
                        "BESTVALUEAS_HANDELIPRAKSIS_402",
                        "BESTVALUEAS_HANDELIPRAKSIS_403",
                        "BESTVALUEAS_HIPSELVBETJENT_101",
                        "BIESBROECKAUTOMATIONBV_UNITOUCH_370",
                        "BIESBROECKAUTOMATIONBV_UNITOUCH_370ELLERNYEREVERSJON",
                        "BITMAKERAS_FYSIOPILATESKASSE_10",
                        "BIZSYSAPS_BIZSYSPOS_2019",
                        "BLEKENDATAAS_MABBUTIKKOGVERKSTEDSYSTEM_75",
                        "BLEKENDATAAS_MABBUTIKKOGVERKSTEDSYSTEM_76",
                        "BLEKENDATAAS_MABBUTIKKOGVERKSTEDSYSTEM_77",
                        "BLEKENDATAAS_MABBUTIKKOGVERKSTEDSYSTEM_78",
                        "BLEKENDATAAS_MABBUTIKKOGVERKSTEDSYSTEM_79",
                        "BLEKENDATAAS_MABBUTIKKOGVERKSTEDSYSTEM_8",
                        "BOOKNOWSOFTWARELTD_V200_200182",
                        "BOOSTITAS_CML2020_R2100",
                        "BRPSYSTEMSAB_BRPSYSTEMSPOSNO_10",
                        "BRPSYSTEMSAB_BRPSYSTEMSPOSNO_11",
                        "BRPSYSTEMSAB_BRP_251",
                        "CAGISTAAS_CAGISTAPOS_1X",
                        "CAPGEMININORGEAS_FARMAPRO_520",
                        "CAPGEMININORGEAS_FARMAPRO_521A",
                        "CAPGEMININORGEAS_FARMAPRO_521B",
                        "CAPGEMININORGEAS_FARMAPRO_521RC2",
                        "CAPGEMININORGEAS_FARMAPRO_522",
                        "CAPGEMININORGEAS_FARMAPRO_523",
                        "CAPGEMININORGEAS_FARMAPRO_524",
                        "CASHITAB_CASHITRETAILMOBILE_34XX",
                        "CASHITAB_CASHITRETAIL_34XX",
                        "CASIO_CASIOSEC3500_102",
                        "CASIO_CASIOSEC3500_103",
                        "CASIO_CASIOSEC3500_109",
                        "CASIO_CASIOSEC450_102",
                        "CASIO_CASIOSEC450_103",
                        "CASIO_CASIOSEC450_109",
                        "CASIO_CASIOSES3000_102",
                        "CASIO_CASIOSES3000_103",
                        "CASIO_CASIOSES3000_109",
                        "CASIO_CASIOSES400M_STORSKUFF_103",
                        "CASIO_CASIOSES400M_STORSKUFF_109",
                        "CASIO_CASIOSES400_STORSKUFF_102",
                        "CASIO_CASIOVR100_108",
                        "CASIO_CASIOVR200_108",
                        "CASIO_CASIOVR7000_108",
                        "CASIO_CASIOVR7100_108",
                        "CASIO_SEC3500_101",
                        "CASIO_SEC450_101",
                        "CASIO_SES3000_101",
                        "CASIO_SES400M_STORSKUFF_101",
                        "CASIO_SUSOFT_CASIOVR200_116",
                        "CASIO_SUSOFT_CASIOVR7000_116",
                        "CASIO_SUSOFT_CASIOVR7100_116",
                        "CASIO_VR100_108",
                        "CASIO_VR200_108",
                        "CASIO_VR7000_108",
                        "CASIO_VR7100_108",
                        "CASPECOAB_CASPECOCHECKOUT_30",
                        "CATENOAS_CLAWPOS_2X",
                        "CATENOAS_CPOS_1X",
                        "CBITAS_WELLNESS_1",
                        "CDKGLOBAL_DRACAR_070900",
                        "CEGID_Y2_2016EDITION",
                        "CEGID_Y2_V13ELLERNYERE",
                        "CENIUMAS_HOSPITALITYPOINTOFSALE_1XXX",
                        "CENTRICNETHERLANDSBV_CENTRICDYNAVISION_2016",
                        "CENTRICNETHERLANDSBV_CENTRICINPOSITION_2017",
                        "CENTRIC_DYNAVISION_4224001",
                        "CHD_CHD6800MINIPOS_2260",
                        "CHECKINAS_KASSAWEB_10",
                        "CINCHAS_CINCHPAY_1",
                        "CLOUDRETAILSYSTEMSA_S_CBRETAIL_53",
                        "CLOUDRETAILSYSTEMSA_S_CBRETAIL_64070ELLERNYERE",
                        "CODAB_G3_VERSION1",
                        "COMPILATORAB_DACKDATA_520ELLERNYERE",
                        "COMPUSOFTAS_COMPUSOFT_48",
                        "COMPUTANSEAS_ASSETSERVERINGMOBILE_51XKLM",
                        "COMPUTANSEAS_ASSETSERVERINGMOBILE_520KLM",
                        "COMPUTANSEAS_ASSETSERVERING_51XKL",
                        "COMPUTANSEAS_ASSETSERVERING_520KL",
                        "COMPUTANSEAS_ASSET_M3MOBILE_51XKLM",
                        "COMPUTANSEAS_ASSET_M3MOBILE_520KLM",
                        "COMPUTANSEAS_ASSET_M3_51XKL",
                        "COMPUTANSEAS_ASSET_M3_520KL",
                        "CONDUENTOGENTUR_EXPERT900OGEXPERT9200_030_ENTUR_ELECTRON100AFCREST20195_CONDUENT_",
                        "CONDUENTOGENTUR_EXPERT900OGEXPERT9200_1X_ENTUR_ELECTRON100AFCREST20195_CONDUENT_",
                        "CONDUENT_EXPERT900OGEXPERT9200_20191",
                        "COOLNETNORGEAS_LIMEPOS_1",
                        "CORDELNORGEAS_CORDEL_20",
                        "COWHILLS_RPOS_10",
                        "CRDSYSTEMSOY_BARTRACE_10",
                        "CRDSYSTEMSOY_BARTRACE_100",
                        "CROSSOVERTECHNOLOGIESLTD_XPOS_VERSIONS1AND2",
                        "DATANOVAAS_DATANOVAIZI_1",
                        "DATANOVAAS_WINDOWSSHOPPINGRETAIL_5",
                        "DATATEKNIKKNILSEN_TIMEBOKPOS_102",
                        "DATORAMAAB_OMEGABASIC_3211",
                        "DATORAMAAB_OMEGAKASSASYSTEM_3211",
                        "DATORAMAAB_OMEGALITE_3211",
                        "DATORAMAAB_OMEGASPLASH_3211",
                        "DATORAMAAB_OMEGASTYLE_3211",
                        "DDDRETAILNORWAYAS_DDDPOS_1884",
                        "DDDRETAILNORWAYAS_DDDPOS_1911",
                        "DDDRETAILNORWAYAS_DDDPOS_19XX",
                        "DEFINITAS_ANOVAKASSE_K170",
                        "DEFINITAS_OMNISHOPPOSMOBILE_20OGNYERE",
                        "DEGREECONSULTINGGROUPAS_DEGREEPOINTOFSALESSOLUTION_1",
                        "DEKKPROSOLUTIONSAS_DEKKPROPOS_10",
                        "DENVER_NORSHOPPRO_143900",
                        "DFSTOKHEIM_FUELPOS_VERSION51",
                        "DIALOGEXEAS_DXPOS_110",
                        "DIEBOLDNIXDORFAS_TPNET_1010",
                        "DLSOFTWARE_DLPRIME_3",
                        "DOMINOS_PULSE_385",
                        "DOVERFUELINGSOLUTIONS_FUSION_10",
                        "DOVERFUELINGSOLUTIONS_NUCLEUS10FORFUSION_103",
                        "EASYUPDATEAS_BUTIKKDATA_70",
                        "EASYUPDATEAS_BUTIKKDATA_70ELLERNYERE",
                        "EGA_S_DETAIL6_6828",
                        "EGA_S_FACKTAPOS_610",
                        "EGA_S_HAIRTOOLS_120ELLERNYERE",
                        "EGNORGEAS_2DPOINT_7X",
                        "EGNORGEAS_EGBRLDYNAMICSAX2009POS_10",
                        "EGRETAILAS_EGPOS_242X",
                        "EGRETAILAS_EGPOS_300X",
                        "EGRETAILAS_EGPOS_30X",
                        "EGRETAILAS_EGPOS_40X",
                        "EINRSOFTWAREAS_POS9_100",
                        "EINRSOFTWAREAS_POSBE_VERSJON10ELLERNYERE",
                        "ELECTRASWEDENAB_ELECTRASMARTBDS_3",
                        "ELEKTRONISKEBETALINGSSYSTEMERAS_FLEXPAY_30",
                        "ELFOAS_VISIONPOINT_6",
                        "ELFOAS_VISIONPOS_222",
                        "ELFOAS_VISIONPOS_6",
                        "ELWATCHAS_JUSTCARDROUGHLINE",
                        "EMMAEDBAS_BRAVOPOS_3",
                        "EMSOFTWAREPARTNERSAS_ELGUIDE_65600",
                        "ENTUR_BLUEBIRDBM180_MT3452",
                        "ENTUR_BLUEBIRDBM180_MT35",
                        "ENTUR_BLUEBIRDBM180_MT37",
                        "ENTUR_ESS_5",
                        "ENTUR_ESS_6",
                        "ENTUR_ESS_7",
                        "EONBITAS_EONTYRE_100",
                        "ESCHERGROUPIRL_PULS_5502",
                        "ESPOSNORGEAS_DIGGIPOS_10",
                        "ESPOSNORGEAS_ESPOSLIGHT_60",
                        "EVRYASA_OPAS_921812XX",
                        "EXPRESSRETAILSVERIGEAB_EXPRESSRETAIL_20",
                        "EXTENDARETAILAB_EXTENDARETAILPOS_177X",
                        "EXTENDARETAILAB_EXTENDARETAILPOS_178X",
                        "EXTENDARETAILAB_EXTENDARETAILPOS_179",
                        "EXTENDARETAILAS_RSPOS_171",
                        "EXTENDARETAILAS_RSPOS_173",
                        "EXTENDARETAILAS_RSPOS_174",
                        "EXTENDARETAILAS_SILENTTOUCH_162SP1",
                        "EXTENDARETAILAS_SILENTTOUCH_171",
                        "EXTENDARETAILAS_SILENTTOUCH_172",
                        "EXTENDARETAILAS_SILENTTOUCH_181",
                        "EXTENDARETAILAS_SILENTTOUCH_191",
                        "EXTENDARETAILAS_SILENTTOUCH_201",
                        "EXTENDARETAILAS_SILENTTOUCH_211",
                        "EXTENDARETAILAS_SUPERPOS_1721",
                        "EXTENDARETAILAS_SUPERPOS_173",
                        "EXTENDARETAILAS_WALLMOBPOS_217",
                        "EXTENDARETAILSOFTWAREAB_EXTENDARETAILPOS_EXTENDARETAILKAPV1816",
                        "EXTENSORAS_EXTENSOR05_132",
                        "FARAAS_FARAFTS_FTSCSR3800FTSTN31",
                        "FASFLOWSOLUTIONSAS_FASTFLOW_2406",
                        "FASTFLOWSOLUTIONSAS_FASTFLOW_2600",
                        "FDTSYSTEMAB_EXCELLENCERETAILPOS_10220",
                        "FIFTYTWO_BORDINGDATA_LBAILBNDLBNSLBNNLBVDLSSBLSSDLSSELGARLGABLGAPLMBLLAPGLAPZLGPSLGPZLAPT_52",
                        "FILMSTADENAB_BOSS_20",
                        "FLEXICONSYSTEMAB_EXCELLENCE_201811",
                        "FLEXPOS_FLEXPOS_215",
                        "FLUGGERNORWAYAS_FLUGGERAX2009POS_10",
                        "FRONTSYSTEMS_FRONTKASSEFORIOS_10",
                        "FRONTSYSTEMS_I_T_21",
                        "FROSTVIKAS_NPOS_421",
                        "FUTURARETAILSOLUTIONSAG_FUTURERS_337",
                        "FWHTECHNOLOGIES_SUBWAYPOS_20190NO",
                        "FWHTECHNOLOGIES_SUBWAYPOS_20191NO",
                        "FYGITECHNOLOGIESAS_SPG_10",
                        "GASTROFIXGMBH_GASTROFIXPOS_215",
                        "GASTROFIXGMBH_GASTROFIXPOS_225",
                        "GASTROFIXGMBH_GASTROFIX_214",
                        "GASTROFIXGMBH_GASTROFIX_215",
                        "GASTROFIXGMBH_LIGHTSPEEDGASTROFIXPOS_30",
                        "GETAPOS_WINSILVER_391ELLERSENERE",
                        "GETSAS_INSIDEPOS_10",
                        "GETSHOPAS_1_1",
                        "GIANTLEAPTECHNOLOGIESAS_POCKETSALES_20",
                        "GKSOFTWARESE_SAPOMNICHANNELPOINTOFSALEBYGK_300ADD",
                        "GKSOFTWARESE_SAPOMNICHANNELPOINTOFSALEBYGK_570PVH",
                        "GKSOFTWARESE_TPOS1024_12061803",
                        "HANOAS_HANOFOTTERAPEUT_2",
                        "HANOAS_HANOFRISOER_2",
                        "HANOAS_HANOHANDEL_2",
                        "HANOAS_HANOHUDPLEIE_2",
                        "HANOAS_MASSOR_2",
                        "HANO_NORPOS_2",
                        "HANSAWORLD_STANDARDERP_85",
                        "HEADSSVENSKAAB_HEADSRETAIL_162",
                        "HEADSSVENSKAAB_HEADSRETAIL_172",
                        "HEADSSVENSKAAB_HEADSRETAIL_18X",
                        "HEADSSVENSKAAB_HEADSRETAIL_19X",
                        "HOEDEGAARD_COAS_QUORION_QMP50",
                        "HOISTGROUPDEVELOPMENTLTD_HOTSOFT_82400",
                        "HOLTLRETAILSOLUTIONSGMBH_POSFLOW5_5",
                        "HOOPLAAS_HOOPLAPOS_12X",
                        "HOOPLASERVICESAS_HOOPLAMPOS_12X",
                        "HOOPLASERVICESAS_HOOPLAPOS_12X",
                        "HRSHOSPITALITYANDRETAILSYSTEMS_ORACLEHOSPITALITYOPERA_54",
                        "HRSHOSPITALITYANDRETAILSYSTEMS_ORACLEHOSPITALITYRES3700_50",
                        "HRSHOSPITALITYANDRETAILSYSTEMS_ORACLEHOSPITALITYRES3700_52",
                        "HRSHOSPITALITYANDRETAILSYSTEMS_ORACLEHOSPITALITYRES3700_54",
                        "HRSHOSPITALITYANDRETAILSYSTEMS_ORACLEHOSPITALITYRES3700_55",
                        "HUGBNAURHF_CENTARA_27",
                        "IBM_SUREPOS_566",
                        "INCADEA_ENGINE_2XOG3X",
                        "INFOTRONICSAS_INFOPAYKASSE_1030",
                        "INSOFTAS_CASHREG_11XX",
                        "INTELLIGENTPOINTOFSALE_SALES_LTD_IPOSKASSAREGISTER_10",
                        "INTELLITIXTECHNOLOGIESINC_INTELLIPAY_216",
                        "INTELLITIXTECHNOLOGIES_INTELLIPAY_216",
                        "ITICKET_POS_V1",
                        "ITPARTNERHELGELANDAS_PLANITKASSE_2018OKTOBER",
                        "ITXMERKENBV_HIPOS_NOR43",
                        "IZETTLEMERCHANTSERVICEAS_IZZETTLEKASSESYSTEM_11",
                        "IZETTLEMERCHANTSERVICESAB_IZETTLEKASSAREGISTER_11",
                        "IZETTLEMERCHANTSERVICESAB_IZETTLEKASSAREGISTER_21",
                        "IZETTLE_IZETTLEREADER_03000000",
                        "JEEVESINFORMATIONSYSTEMSAB_GARP_43",
                        "JEEVESINFORMATIONSYSTEMS_GARP_42",
                        "JMDATASYSTEMAS_JMTPOS_10",
                        "K3BUSINESSTECHNOLOGIES_IMAGINE_1XXX",
                        "KASSAMAGNEETTIOY_RESTOLUTION_N21",
                        "KASSEOGBUTIKKDATA_CASIO_SES3000",
                        "KASSESERVICEAS_DUELLAGENT_1006",
                        "KASSESERVICEAS_DUELLAGENT_1008",
                        "KASSESERVICEAS_DUELLAGENT_1X",
                        "KASSESERVICEAS_DUELLAGENT_2028",
                        "KASSESERVICEAS_DUELLAGENT_2029",
                        "KASSESERVICEAS_DUELLPOS_112",
                        "KASSESERVICEAS_DUELLPOS_113",
                        "KASSESERVICEAS_DUELLPOS_114",
                        "KASSESERVICEAS_DUELLPOS_115",
                        "KASSESERVICEAS_DUELLPOS_116",
                        "KASSESERVICEAS_DUELLPOS_117",
                        "KASSESERVICEAS_DUELLPOS_118",
                        "KASSESERVICEAS_DUELLPOS_119",
                        "KASSESERVICEAS_DUELLPOS_120",
                        "KASSESERVICEAS_DUELLPOS_121",
                        "KASSESERVICEAS_DUELLPOS_122",
                        "KASSESERVICEAS_DUELLPOS_123",
                        "KASSESERVICEAS_DUELLPOS_124",
                        "KASSESERVICEAS_DUELLPOS_125",
                        "KASSESERVICEAS_DUELLPOS_126",
                        "KASSESERVICEAS_DUELLPOS_127",
                        "KASSESERVICEAS_DUELLPOS_128",
                        "KASSESERVICEAS_DUELLPOS_129",
                        "KASSESERVICEAS_DUELLPOS_130",
                        "KASSESERVICEAS_DUELLPOS_131",
                        "KASSESERVICEAS_DUELLPOS_132",
                        "KASSESERVICEAS_DUELLPOS_134",
                        "KASSESERVICEAS_DUELLPOS_135",
                        "KASSESERVICEAS_DUELLPOS_136",
                        "KASSESERVICEAS_DUELLPOS_140",
                        "KASSESERVICEAS_DUELLPOS_150",
                        "KASSESERVICEAS_DUELLPOS_160",
                        "KONSULENTDATA_RESTAURANTAS_KDRGOLD_37",
                        "KONSULENTDATA_RESTAURANTAS_KDRGOLD_40",
                        "KONTAKTLOES_K1_101",
                        "LAVACLOUDPOSAS_AVELYN_1000",
                        "LAVU_LAVUPOS_389",
                        "LEEROYGROUPAB_LEEROYMPOS_20NO",
                        "LEXITGROUPNORWAYAS_LEXPOS_10",
                        "LEXITGROUPNORWAYAS_LEXPOS_10ELLERNYERE",
                        "LIGHTSPEEDPOSGERMANYGMBH_LIGHTSPEEDGASTROFIXPOS_312",
                        "LINDBAKRETAILSYSTEMSAS_EGPOS_40X",
                        "LINDBAKRETAILSYSTEMSAS_LINDBAKPOS_25X",
                        "LINDBAKRETAILSYSTEMSAS_LINDBAKPOS_300X",
                        "LINDBAKRETAILSYSTEMSAS_LINDBAKPOS_30X",
                        "LIVINGCONSULTINGAS_POCKETERP_20",
                        "LONGRUNSOFTWARE_ECWINS_2019R1",
                        "LSRETAILEHF_LSCENTRAL_150ANDNEWER",
                        "LSRETAILEHF_LSNAV_1002",
                        "LSRETAILEHF_LSNAV_1006",
                        "LSRETAILEHF_LSNAV_110",
                        "LSRETAILEHF_LSNAV_1105750",
                        "LSRETAILEHF_LSNAV_130ANDNEWER",
                        "LSRETAILEHF_LSNAV_90007244",
                        "LSRETAILEHF_LSONEFORSAPBUSINESSONE_2019ANDLATER",
                        "LSRETAILEHF_LSONE_2019ANDLATER",
                        "LSRETAIL_LSNAV2009_64",
                        "LSRETAIL_LSNAV2015_80",
                        "LSRETAIL_LSNAV2017_100200396",
                        "LSRETAIL_LSNAV2017_1002_ELLERNYERE",
                        "LSRETAIL_LSNAV2017_1008",
                        "LSRETAIL_LSONE_20172",
                        "LYKO_LYKOSMP_2",
                        "MABUAS_ZPOS_14",
                        "MESTERBLOMSTAS_MGKASSASYSTEM_1033",
                        "MESTERBLOMSTAS_MGKASSASYSTEM_1044",
                        "MESTERBLOMSTAS_MGKASSASYSTEM_1055",
                        "MESTERBLOMSTAS_MGKASSASYSTEM_1066",
                        "MESTERBLOMSTAS_MGKASSASYSTEM_9111",
                        "MESTERBLOMSTAS_MGKASSASYSTEM_922",
                        "METRA_LCC_7XX",
                        "MICROSOFTCORP_DYNAMICS365FORFINANCEANDOPERATIONSDYNAMICS365FORRETAILANDCOMMERCE_ENTERPRISEEDITIONAPPLICATIONUPDATE5ANDLATER",
                        "MICROSOFTCORP_DYNAMICS365FORFINANCEANDOPERATIONSDYNAMICS365FORRETAIL_ENTERPRISEEDITIONAPPLICATIONUPDATE5",
                        "MICROSOFT_AX2009LSPOS_SPESIALTILPASNINGFORSKEIDAR",
                        "MICROSOFT_DYNAMICSAX2012_R3",
                        "MICROSOFT_DYNAMICSAXSPESIALTILPASSETFORAKZONOBELEUROPE_2012R3",
                        "MICROSOFT_DYNAMICSNAVCLASSICPOS_50",
                        "MINSAITSA_TMSFORPOS_240",
                        "MOBITECHAS_MTPROG_05",
                        "MOBITECHAS_SVPOS_MRK2",
                        "MOREFLO_MOREFLO_3",
                        "MULTICASENORGEAS_MULTICASEFORRETNINGSSYSTEM_317X",
                        "MULTICASENORGEAS_MULTICASEFORRETNINGSSYSTEM_417X",
                        "MULTICASENORGEAS_MULTICASEFORRETNINGSSYSTEM_418X",
                        "MULTICASENORGEAS_MULTICASEFORRETNINGSSYSTEM_419X",
                        "MULTICASENORGEAS_MULTICASEFORRETNINGSSYSTEM_420X",
                        "MULTICASENORGEAS_MULTICASEFORRETNINGSSYSTEM_421X",
                        "MUNUAS_MUNUCLOUDPOS_16ANDABOVE",
                        "MUNUAS_RSPOS_16ANDBELOW",
                        "MYSTORENOAS_20_20",
                        "MYSTORENOAS_MYSTOREDATAKASSE_32",
                        "NASOFT_MYCRON_NASOFTKASSADEL_VER62",
                        "NAVIPARTNER_NPRETAIL_2017",
                        "NAVIPROAB_CASHJET_2013",
                        "NAVIPROAB_CASHJET_IPOS10",
                        "NCRDANMARKAS_ASARPOS_304",
                        "NCRDANMARKAS_NCRALOHAAFM_19",
                        "NCRDANMARKAS_OCTANE2000_Z0933",
                        "NCRDANMARK_STOREPOINT18104_18104",
                        "NEWBLACKBV_EVAUNIFIEDCOMMERCE_20",
                        "NMIRUNEEDGARSVENDSEN_MULTISYSPOS_907",
                        "NORBITSAS_ATHENAPAY_10",
                        "NORBITSAS_ATHENAPOS_30",
                        "NORBITSAS_ATHENAXPOS_10",
                        "NORDICCINEMAGROUP_BOSS_10",
                        "NORENSIKT_JUMPEREZPAD5S_10",
                        "NORSKSOLIMPORT_SUNMASTER_SUNMASTER1048",
                        "NUTIDAB_NUTIDPCKASSA_3851811281",
                        "NUTIDAB_NUTIDPCKASSA_385190221",
                        "NUTIDAB_NUTIDPCKASSA_385190528",
                        "NUTIDAB_NUTIDPCKASSA_385190911",
                        "NUTIDAB_NUTIDPCKASSA_385191002",
                        "NUTIDAB_NUTIDPCKASSA_3851910021",
                        "NUTIDAB_NUTIDPCKASSA_385191022",
                        "NUTIDAB_NUTIDPCKASSA_385191204",
                        "NUTIDAB_NUTIDPCKASSA_3852001291",
                        "NUTIDAB_NUTIDPCKASSA_3852003021",
                        "NUTIDAB_NUTIDPCKASSA_3852005041",
                        "NUTIDAB_NUTIDPCKASSA_3852009301",
                        "NUTIDAB_NUTIDPCKASSA_3852101271",
                        "NUTIDAB_NUTIDPCKASSA_385210127X",
                        "NUTIDAB_NUTIDPCKASSA_385210414X",
                        "NUTIDAB_NUTIDPCKASSA_385210624X",
                        "NUTIDAB_SHARPHOSPITALITY_3851701011",
                        "NUTIDAB_SHARPHOSPITALITY_3851702141",
                        "NUTIDAB_SHARPHOSPITALITY_3851704051",
                        "NUTIDAB_SHARPHOSPITALITY_3851705111",
                        "NUTIDAB_SHARPHOSPITALITY_3851707061",
                        "NUTIDAB_SHARPHOSPITALITY_3851708161",
                        "NUTIDAB_SHARPHOSPITALITY_3851709041",
                        "NUTIDAB_SHARPHOSPITALITY_3851710101",
                        "NUTIDAB_SHARPHOSPITALITY_3851711151",
                        "NUTIDAB_SHARPHOSPITALITY_3851712281",
                        "NUTIDAB_SHARPHOSPITALITY_3851802131",
                        "NUTIDAB_SHARPHOSPITALITY_3851804111",
                        "NUTIDAB_SHARPHOSPITALITY_3851805221",
                        "NUTIDAB_SHARPHOSPITALITY_3851807091",
                        "NUTIDAB_SHARPHOSPITALITY_3851807241",
                        "NUTIDAB_SHARPHOSPITALITY_3851810101",
                        "NUTIDAB_SHARPHOSPITALITY_3851811281",
                        "NUTIDAB_SHARPHOSPITALITY_385190221",
                        "NUTIDAB_SHARPHOSPITALITY_385190528",
                        "NUTIDAB_SHARPHOSPITALITY_385190911",
                        "NUTIDAB_SHARPHOSPITALITY_385191002",
                        "NUTIDAB_SHARPHOSPITALITY_385191022",
                        "NUTIDAB_SHARPHOSPITALITY_385191204",
                        "NUTIDAB_SHARPHOSPITALITY_3852001291",
                        "NUTIDAB_SHARPHOSPITALITY_3852003021",
                        "NUTIDAB_SHARPHOSPITALITY_3852005021",
                        "NUTIDAB_SHARPHOSPITALITY_3852005041",
                        "NUTIDAB_SHARPHOSPITALITY_3852009301",
                        "NUTIDAB_SHARPHOSPITALITY_3852101271",
                        "NUTIDAB_SHARPHOSPITALITY_385210127X",
                        "NUTIDAB_SHARPHOSPITALITY_385210414X",
                        "NUTIDAB_SHARPHOSPITALITY_385210624X",
                        "NUTIDAB_SHARPMPAYANDROID_110X",
                        "NUTIDAB_SHARPRETAIL_3851701011",
                        "NUTIDAB_SHARPRETAIL_3851702141",
                        "NUTIDAB_SHARPRETAIL_3851704051",
                        "NUTIDAB_SHARPRETAIL_3851705111",
                        "NUTIDAB_SHARPRETAIL_3851707061",
                        "NUTIDAB_SHARPRETAIL_3851708161",
                        "NUTIDAB_SHARPRETAIL_3851709041",
                        "NUTIDAB_SHARPRETAIL_3851710101",
                        "NUTIDAB_SHARPRETAIL_3851711151",
                        "NUTIDAB_SHARPRETAIL_3851712281",
                        "NUTIDAB_SHARPRETAIL_3851802131",
                        "NUTIDAB_SHARPRETAIL_3851804111",
                        "NUTIDAB_SHARPRETAIL_3851805221",
                        "NUTIDAB_SHARPRETAIL_3851807091",
                        "NUTIDAB_SHARPRETAIL_3851807241",
                        "NUTIDAB_SHARPRETAIL_3851810101",
                        "NUTIDAB_SHARPRETAIL_3851811281",
                        "NUTIDAB_SHARPRETAIL_385190221",
                        "NUTIDAB_SHARPRETAIL_385190528",
                        "NUTIDAB_SHARPRETAIL_385190911",
                        "NUTIDAB_SHARPRETAIL_385191002",
                        "NUTIDAB_SHARPRETAIL_385191022",
                        "NUTIDAB_SHARPRETAIL_385191204",
                        "NUTIDAB_SHARPRETAIL_3852001291",
                        "NUTIDAB_SHARPRETAIL_3852003021",
                        "NUTIDAB_SHARPRETAIL_3852005041",
                        "NUTIDAB_SHARPRETAIL_3852009301",
                        "NUTIDAB_SHARPRETAIL_3852101271",
                        "NUTIDAB_SHARPRETAIL_385210127X",
                        "NUTIDAB_SHARPRETAIL_385210414X",
                        "NUTIDAB_SHARPRETAIL_385210624X",
                        "NUTIDAB_SHARPSTARTANDROID_10",
                        "NUTIDAB_SHARPSTARTANDROID_101",
                        "NUTIDAB_SHARPSTARTANDROID_102",
                        "NUTIDAB_SHARPSTARTANDROID_103",
                        "NUTIDAB_SHARPSTARTANDROID_10X",
                        "NUTIDAB_SHARPSTART_3851701011",
                        "NUTIDAB_SHARPSTART_3851702141",
                        "NUTIDAB_SHARPSTART_3851704051",
                        "NUTIDAB_SHARPSTART_3851705111",
                        "NUTIDAB_SHARPSTART_3851707061",
                        "NUTIDAB_SHARPSTART_3851708161",
                        "NUTIDAB_SHARPSTART_3851709041",
                        "NUTIDAB_SHARPSTART_3851710101",
                        "NUTIDAB_SHARPSTART_3851711151",
                        "NUTIDAB_SHARPSTART_3851712281",
                        "NUTIDAB_SHARPSTART_3851802131",
                        "NUTIDAB_SHARPSTART_3851804111",
                        "NUTIDAB_SHARPSTART_3851805221",
                        "NUTIDAB_SHARPSTART_3851807091",
                        "NUTIDAB_SHARPSTART_3851807241",
                        "NUTIDAB_SHARPSTART_3851810101",
                        "NUTIDAB_SHARPSTART_3851811281",
                        "NUTIDAB_SHARPSTART_385190221",
                        "NUTIDAB_SHARPSTART_385190528",
                        "NUTIDAB_SHARPSTART_385190911",
                        "NUTIDAB_SHARPSTART_385191002",
                        "NUTIDAB_SHARPSTART_385191022",
                        "NUTIDAB_SHARPSTART_385191204",
                        "NUTIDAB_SHARPSTART_3852001291",
                        "NUTIDAB_SHARPSTART_3852003021",
                        "NUTIDAB_SHARPSTART_3852005041",
                        "NUTIDAB_SHARPSTART_3852009301",
                        "NUTIDAB_SHARPSTART_3852101271",
                        "NUTIDAB_SHARPSTART_385210127X",
                        "NUTIDAB_SHARPSTART_385210414X",
                        "NUTIDAB_SHARPSTART_385210624X",
                        "NUTIDAB_SHARPSUPERMARKET_3851701011",
                        "NUTIDAB_SHARPSUPERMARKET_3851702141",
                        "NUTIDAB_SHARPSUPERMARKET_3851704051",
                        "NUTIDAB_SHARPSUPERMARKET_3851705111",
                        "NUTIDAB_SHARPSUPERMARKET_3851707061",
                        "NUTIDAB_SHARPSUPERMARKET_3851708161",
                        "NUTIDAB_SHARPSUPERMARKET_3851709041",
                        "NUTIDAB_SHARPSUPERMARKET_3851710101",
                        "NUTIDAB_SHARPSUPERMARKET_3851711151",
                        "NUTIDAB_SHARPSUPERMARKET_3851712281",
                        "NUTIDAB_SHARPSUPERMARKET_3851802131",
                        "NUTIDAB_SHARPSUPERMARKET_3851804111",
                        "NUTIDAB_SHARPSUPERMARKET_3851805221",
                        "NUTIDAB_SHARPSUPERMARKET_3851807091",
                        "NUTIDAB_SHARPSUPERMARKET_3851807241",
                        "NUTIDAB_SHARPSUPERMARKET_3851810101",
                        "NUTIDAB_SHARPSUPERMARKET_3851811281",
                        "NUTIDAB_SHARPSUPERMARKET_385190221",
                        "NUTIDAB_SHARPSUPERMARKET_385190528",
                        "NUTIDAB_SHARPSUPERMARKET_385190911",
                        "NUTIDAB_SHARPSUPERMARKET_3851910021",
                        "NUTIDAB_SHARPSUPERMARKET_385191022",
                        "NUTIDAB_SHARPSUPERMARKET_385191204",
                        "NUTIDAB_SHARPSUPERMARKET_3852001291",
                        "NUTIDAB_SHARPSUPERMARKET_3852003021",
                        "NUTIDAB_SHARPSUPERMARKET_3852005041",
                        "NUTIDAB_SHARPSUPERMARKET_3852009301",
                        "NUTIDAB_SHARPSUPERMARKET_3852101271",
                        "NUTIDAB_SHARPSUPERMARKET_385210127X",
                        "NUTIDAB_SHARPSUPERMARKET_385210414X",
                        "NUTIDAB_SHARPSUPERMARKET_385210624X",
                        "NUTIDAB_SHARPWELLNESS_3851701011",
                        "NUTIDAB_SHARPWELLNESS_3851702141",
                        "NUTIDAB_SHARPWELLNESS_3851704051",
                        "NUTIDAB_SHARPWELLNESS_3851705111",
                        "NUTIDAB_SHARPWELLNESS_3851707061",
                        "NUTIDAB_SHARPWELLNESS_3851708161",
                        "NUTIDAB_SHARPWELLNESS_3851709041",
                        "NUTIDAB_SHARPWELLNESS_3851710101",
                        "NUTIDAB_SHARPWELLNESS_3851711151",
                        "NUTIDAB_SHARPWELLNESS_3851712281",
                        "NUTIDAB_SHARPWELLNESS_3851802131",
                        "NUTIDAB_SHARPWELLNESS_3851804111",
                        "NUTIDAB_SHARPWELLNESS_3851805221",
                        "NUTIDAB_SHARPWELLNESS_3851807091",
                        "NUTIDAB_SHARPWELLNESS_3851807241",
                        "NUTIDAB_SHARPWELLNESS_3851810101",
                        "NUTIDAB_SHARPWELLNESS_3851811281",
                        "NUTIDAB_SHARPWELLNESS_385190221",
                        "NUTIDAB_SHARPWELLNESS_385190528",
                        "NUTIDAB_SHARPWELLNESS_385190911",
                        "NUTIDAB_SHARPWELLNESS_385191002",
                        "NUTIDAB_SHARPWELLNESS_385191022",
                        "NUTIDAB_SHARPWELLNESS_385191204",
                        "NUTIDAB_SHARPWELLNESS_3852001291",
                        "NUTIDAB_SHARPWELLNESS_3852003021",
                        "NUTIDAB_SHARPWELLNESS_3852005041",
                        "NUTIDAB_SHARPWELLNESS_3852009301",
                        "NUTIDAB_SHARPWELLNESS_3852101271",
                        "NUTIDAB_SHARPWELLNESS_385210127X",
                        "NUTIDAB_SHARPWELLNESS_385210414X",
                        "NUTIDAB_SHARPWELLNESS_385210624X",
                        "ODINSYSTEMERAS_FIXIT_3426",
                        "ODINSYSTEMERAS_FIXIT_35X",
                        "OFFICELINKAS_FRONTLINE_40",
                        "OLYMPIAGOEUROPEGMBH_OLYMPIA_CM911",
                        "OMDATAAS_ORC_10",
                        "OMEGAPSAS_PIMSKASSE_10",
                        "ONLINEEDBAS_EXCELINE_2000",
                        "ONLINEPOS_ALLINONE_1",
                        "OPENSOLUTIONNORWAYAS_OPENSOLUTIONRETAILSYSTEM_40",
                        "OPENSOLUTIONNORWAYAS_OPENVENUE_20",
                        "ORACLE_SIMPHONY_29",
                        "ORACLE_SIMPHONY_29ANDLATER",
                        "ORDERXAS_ORDERXMPOS_10",
                        "ORDRAS_1000_1",
                        "PALISIS_PIDION_4X",
                        "PASTELLDATAAB_PROFIT10NO_88",
                        "PCKASSE_PCK_3",
                        "PCKAS_COMPLETEPOS_4",
                        "PCKAS_COMPLETEPOS_40",
                        "PCKAS_ERPPOS_15XXXX",
                        "PCKAS_PCKASSE_31",
                        "PCKAS_PCKASSE_3158",
                        "PCKAS_PCKASSE_VER3X",
                        "PCKNO_PCKASSE_3158",
                        "PENGVINAFFARSSYSTEMAB_PENGVIN_4262",
                        "PERFECTITBEXAB_BEXPOS_3XX",
                        "PILAROAS_PILAROPROPOS_3",
                        "PINCHONATIONAB_CASHIERCLOUD_100",
                        "PLUTOSYSTEMSAB_PLUTO1024_K0427OGNYERE",
                        "POINTSOFTSCANDINAVIAAS_POINTSOFT_2701961",
                        "POLYGONCOMMUNICATIONSAS_PRSPOS_214",
                        "POSONEA_S_POSONE_POSONE4",
                        "POWEREDBYYONOTONOY_POWEREDBYYONOTONPOS_10",
                        "PRESSISCONSULTINGAS_PRESSISPOS_V20",
                        "PRESSISCONSULTINGAS_PRESSISPOS_V5030",
                        "PRESSISCONSULTINGAS_PRESSISPOS_V5220",
                        "PRESSISCONSULTINGAS_PRESSISPOS_V6001",
                        "PRESSISCONSULTINGAS_PRESSISPOS_V7002",
                        "PROFITIMPACTNORGEAS_PIMS_100",
                        "PROFITIMPACTNORGEAS_RESERVATOR_100",
                        "PROOPTICSAS_HEADSOPTICS_1",
                        "PROVENDO_ODOO_11",
                        "PULSENRETAILAB_HARMONEY_35XX",
                        "PUNTOFASL_EJOURNALNOR_2018111",
                        "QUADRIGAAB_EUROSHOP_2018",
                        "QUICKORDERAPS_QUICKPOS_251",
                        "QUICKSYSYTEMSAS_Q3_30240",
                        "QUICKSYSYTEMSAS_Q3_30X",
                        "QUICKSYSYTEMSAS_QUICKNG_2089",
                        "QUORIONDATASYSTEMSGMBH_CR18_G3180822NO",
                        "QUORIONDATASYSTEMSGMBH_CR21B_G1170615NO",
                        "QUORIONDATASYSTEMSGMBH_CR50_170601NO",
                        "QUORIONDATASYSTEMSGMBH_QMP18_G3180822NO",
                        "QUORIONDATASYSTEMSGMBH_QMP18_QA180822NO",
                        "QUORIONDATASYSTEMSGMBH_QMP2044_170601NO",
                        "QUORIONDATASYSTEMSGMBH_QMP2044_H4170615NO",
                        "QUORIONDATASYSTEMSGMBH_QMP2044_H4180822NO",
                        "QUORIONDATASYSTEMSGMBH_QMP2264_170601NO",
                        "QUORIONDATASYSTEMSGMBH_QMP2264_H4170615NO",
                        "QUORIONDATASYSTEMSGMBH_QMP2264_H4180822NO",
                        "QUORIONDATASYSTEMSGMBH_QMP50_G1170615NO",
                        "QUORIONDATASYSTEMSGMBH_QMP50_H1180822NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH10_QA170215NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH10_QA170615NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH10_QA180822NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH12_170601NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH12_QA170615NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH12_QA180822NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH15_170601NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH15_QA170615NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH15_QA180822NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH8_170601NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH8_QB170615NO",
                        "QUORIONDATASYSTEMSGMBH_QTOUCH8_QB180822NO",
                        "RAVNWEBVEVERIETAS_KINOLOGGBILLETTSALG_1",
                        "RAVNWEBVEVERIETAS_KINOLOGGBILLETTSALG_2",
                        "RDISOFTWAREACAPGEMINICOMPANYT_NP61_SLE141FMNP6130MR5QR0HF0K517MR2HF25",
                        "RDISOFTWAREACAPGEMINICOMPANY_NP61_SLE145ELLERNYERE",
                        "RDISOFTWARE_NP61_2021Q2HF5_NP613010QR1HF151K5176QR4HF9SLE445",
                        "REDROCKSOLUTIONSAS_TOGITALPOS_V286",
                        "REKNESAS_REKNESWMS_154X",
                        "RESPONSERETAILAS_MANDARIN_442",
                        "RETAILPLANITAS_OPTITECRS_16271",
                        "RETAILPLANITNORGEAS_OPTIMALTILL_OPTIMALKASSE_16351OGNYERE",
                        "RETAILPROINTERNATIONALLLC_PRISMNO_1XXXX",
                        "RETAILPROINTERNATIONALLLC_RETAILPROVERSION86_860",
                        "SALDIDKAPS_GERNERSPOS_1",
                        "SCALEITAS_SCALEITPOS_10",
                        "SEATGEEK_SRO_4221OGNYERE",
                        "SHINHEUNGPRECISIONCOLTD_SAM4SER230EJ_NOR04000",
                        "SHINHEUNGPRECISIONCOLTD_SAM4SER260EJ_NOR04000",
                        "SHINHEUNGPRECISIONCOLTD_SAM4SER265EJ_NOR04000",
                        "SHINHEUNGPRECISIONCOLTD_SAM4SER510BSE_NOR04000",
                        "SHINHEUNGPRECISIONCOLTD_SAM4SNR500_NOR04000",
                        "SHOEDVISIONAMBA_SHOESHOP_3161",
                        "SHOPBOXAPS_SHOPBOX_16X",
                        "SHOPLABSAS_SHOPLABS_160",
                        "SIAIBSC_COMPANY_RESICO_40",
                        "SITOO_SITOOPOS_1X",
                        "SKIBARSYSTEMSAB_SKIBARV2CASHIER_09100",
                        "SKIDATASCANDINAVIAAB_SUMMITLOGIC_26",
                        "SKISTARAB_SORENPOS_446151OCHSENARE",
                        "SMARTIPOS_APP_10",
                        "SMARTLAUNDRYAS_SMARTIPOS_100",
                        "SMSAS_RMSV_IDNR151190_595NO",
                        "SMSAS_RMSV_IDNR151190_RMSV592NO",
                        "SMSAS_RMSV_IDNR151190_RMSV59NO",
                        "SODVINSYSTEMERAS_XAKTMEDLEMBUTIKK_20181201ELLERNYERE",
                        "SODVINSYSTEMERAS_XAKTMEDLEM_20181201ELLERNYERE",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_314",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_332",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_335",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_3351",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_340",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_341",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_342",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_343",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_344",
                        "SPECSAVERSORACLERETAILJAVA_OPTICUS_346",
                        "SPECTERAB_SPECTERPOS_3XX",
                        "STAMFORDAB_ECSBUTIKSDATA_62031OCHSENARE",
                        "SUNMITECHNOLOGYCOLTD_OLIVERPOS_2388",
                        "SUSOFT_APOS_11",
                        "SVERIGEKASSANAB_NORPOS_A02",
                        "SYNSAMGROUPSWEDENAB_EYELIFE_30",
                        "TAILORMOADEAPS_TAILORSOFT_2913902",
                        "TELLIXAS_PROTOUCH_1130",
                        "TELLIXAS_PROTOUCH_12X",
                        "TELLIXAS_PROTOUCH_13X",
                        "TELLIXAS_PROTOUCH_14X",
                        "TELLIXAS_PROTOUCH_15X",
                        "TELLIXAS_PROTOUCH_16X",
                        "TICKETCOAS_TICKETCOADMIN_166ANDROID",
                        "TICKETCOAS_TICKETCOADMIN_180ANDROID",
                        "TICKETCOAS_TICKETCOADMIN_3200IOS",
                        "TICKETCOAS_TICKETCOADMIN_3210IOS",
                        "TICKETINTERNATIONALSOFTWARETRADINGGMBH_COKG_DOLPHIN_81300",
                        "TICKSTERAB_TICKSTERBLINKPOS_21X",
                        "TICKSTERAB_TICKSTERBLINKPOS_22X",
                        "TIDYPOSAS_POCKETERP_TIDYPAY_217",
                        "TIMEKIOSKAS_TIMEKIOSKPOS_52",
                        "TIMMAOY_TIMMABUSINESS_1",
                        "TIMMAOY_TIMMABUSINESS_1200",
                        "TIXAS_BOTIXNO_2019",
                        "TOKHEIMBELGIUMNV_FUELPOS_EUR46",
                        "TOKHEIMBELGIUMNV_FUELPOS_EUR49",
                        "TOKHEIMBELGIUMNV_FUELPOS_EUR52",
                        "TOUCHSOFTAS_TOUCHSOFTPOS_2381",
                        "TOUCHSOFTAS_TOUCHSOFTPOS_32",
                        "TOUCHSOFTAS_TOUCHSOFTPOS_32XX",
                        "TOUCHSOFTAS_TOUCHSOFTPOS_33XX",
                        "TOUCHSOFTAS_TOUCHSOFTPOS_4XX",
                        "TRIVECSYSTEMSAS_DOMINONO_385",
                        "TRIVECSYSTEMSAS_DOMINONO_4XXXX",
                        "TURNITOU_TURNITRIDE_31",
                        "UNIKUMDATASYSTEMAB_PYRAMIDBUSINESSSTUDIOS_342",
                        "UNIMICROAS_UNIOEKONOMIV3_366XXX",
                        "UNIPOSAS_BUTIKKDATA_623",
                        "UNIPOSAS_BUTIKKDATA_7X",
                        "UNIPOSAS_BUTIKKDATA_8X",
                        "UNIPOSAS_SMARTKASSE_10",
                        "UNIPOSAS_SMARTKASSE_2X",
                        "VANGSOFTWARE_VANGSOFTWARE_VASO22",
                        "VECTRONSYSTEMAG_VECTRONPOS_5X",
                        "VECTRON_VECTRONPOSTOUCH_600",
                        "VERENDUSSYSTEMAB_VERENDUSBUTIKK_11",
                        "VESTSYSTEMPARTNERAS_VSPMILJOE_30",
                        "VESTSYSTEMPARTNER_APOS_30",
                        "VETSERVEAS_VETSERVECLASSIC_1187ELLERNYERE",
                        "VISBOOKAS_VISBOOK_7X",
                        "VISMARETAILAS_WALLMOBPOS_217PLUSS",
                        "VISMARETAILSOFTWAREAS_SILENTTOUCH_162SP1",
                        "VISMARETAILSOFTWAREAS_SILENTTOUCH_171",
                        "VISMARETAILSOFTWAREAS_SILENTTOUCH_172",
                        "VISMARETAILSOFTWAREAS_SILENTTOUCH_181",
                        "VISMARETAILSOFTWAREAS_SUPERPOS_1721",
                        "VISMASOFTWAREINTERNATIONALAS_VISMAERPPOS_12X",
                        "VISMASOFTWAREINTERNATIONALAS_VISMAERPPOS_13000",
                        "VISMASOFTWARELABSAS_VISMAENTERPRISEKASSEPLUS_20202",
                        "VISMASOFTWARELABSAS_VISMAENTERPRISEKASSE_20202",
                        "VITECAUTODATAAS_ADKASSE_1001",
                        "VITECFIXITSYSTEMERAS_FIXIT_35X",
                        "VITECINFOEASYAS_PCKASSE_10218",
                        "VITECSMARTVISITORSYSTEMAB_DK5000_3110",
                        "WINPOSGROUP_WINPOSMEGASTORE_30",
                        "WINSOLUTIONAS_2021_10",
                        "WINTERSTEIGERAG_EASYRENT_17",
                        "WLCOMAS_BUILD103_2018310245",
                        "WSAELECTRONICGMBH_TICKETLINE_72XOGNYERE",
                        "WTWAS_LINEFARE_10",
                        "ZIRIUSAS_ZIRIUSKASSE_35",
                        "ANNET_KASSASYSTEM"
                    ]
                }
            }
        },
        "GenericDataOverview": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "readOnly": true,
                    "$ref": "#/definitions/YearEndReport"
                },
                "groupId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "genericDataType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "MISC",
                        "TRANSPORT",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "PROFIT_AND_LOSS",
                        "CUSTOMER_RECEIVABLE",
                        "INVENTORIES",
                        "TANGIBLE_FIXED_ASSETS",
                        "RECONCILIATION_OF_EQUITY",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "DOCUMENT_DOWNLOADED",
                        "GROUP_CONTRIBUTIONS",
                        "TAX_RETURN",
                        "TAX_CALCULATIONS",
                        "DOCUMENTATION",
                        "SHARES_AND_SECURITIES",
                        "REAL_ESTATE"
                    ]
                },
                "genericDataTypeGroupId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenericData"
                    }
                },
                "typeOfGoodsPosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TypeOfGoods"
                    }
                },
                "multiUnitBuildingUnitPosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MultiUnitBuildingUnit"
                    }
                },
                "cashRegisterSystemPosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CashRegisterSystem"
                    }
                },
                "calculatedDeduction": {
                    "type": "number",
                    "readOnly": true
                },
                "expenses": {
                    "type": "number",
                    "readOnly": true
                },
                "reversedExpenses": {
                    "type": "number",
                    "readOnly": true
                },
                "showProfitAndLossDetails": {
                    "type": "boolean",
                    "readOnly": true
                },
                "annualIncomeRecognitionOrDeductionBasis": {
                    "type": "number",
                    "readOnly": true
                },
                "annualIncomeRecognition": {
                    "type": "number",
                    "readOnly": true
                },
                "annualDeduction": {
                    "type": "number",
                    "readOnly": true
                },
                "sumProfitAndLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceProfitAndLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceProfitAndLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "objectIdentifier": {
                    "type": "string",
                    "readOnly": true
                },
                "calculatedAssetValue": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedMarketValue": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedIncomeValueRental": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedAssetValueRental": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "MultiUnitBuildingUnit": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "number",
                    "readOnly": true
                },
                "genericDataType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "MISC",
                        "TRANSPORT",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "PROFIT_AND_LOSS",
                        "CUSTOMER_RECEIVABLE",
                        "INVENTORIES",
                        "TANGIBLE_FIXED_ASSETS",
                        "RECONCILIATION_OF_EQUITY",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "DOCUMENT_DOWNLOADED",
                        "GROUP_CONTRIBUTIONS",
                        "TAX_RETURN",
                        "TAX_CALCULATIONS",
                        "DOCUMENTATION",
                        "SHARES_AND_SECURITIES",
                        "REAL_ESTATE"
                    ]
                },
                "genericDataSubTypeGroupId": {
                    "type": "number",
                    "readOnly": true
                },
                "unitNo": {
                    "type": "string",
                    "readOnly": true
                },
                "area": {
                    "type": "number",
                    "readOnly": true
                },
                "constructionYear": {
                    "type": "number",
                    "readOnly": true
                },
                "value": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperGenericDataOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/GenericDataOverview"
                }
            }
        },
        "TypeOfGoods": {
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "number",
                    "readOnly": true
                },
                "genericDataType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "MISC",
                        "TRANSPORT",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "PROFIT_AND_LOSS",
                        "CUSTOMER_RECEIVABLE",
                        "INVENTORIES",
                        "TANGIBLE_FIXED_ASSETS",
                        "RECONCILIATION_OF_EQUITY",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "DOCUMENT_DOWNLOADED",
                        "GROUP_CONTRIBUTIONS",
                        "TAX_RETURN",
                        "TAX_CALCULATIONS",
                        "DOCUMENTATION",
                        "SHARES_AND_SECURITIES",
                        "REAL_ESTATE"
                    ]
                },
                "genericDataSubTypeGroupId": {
                    "type": "number",
                    "readOnly": true
                },
                "typeOfGoods": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "FOOD_STUFFS",
                        "TOBACCO_ETC",
                        "COFFEE_AND_TEA",
                        "SOFT_DRINKS",
                        "ALCOPOP_AND_CIDER",
                        "BEER",
                        "WINE",
                        "SPIRITS",
                        "OTHER_PRODUCTS"
                    ]
                },
                "productName": {
                    "type": "string",
                    "readOnly": true
                },
                "openingStock": {
                    "type": "number",
                    "readOnly": true
                },
                "closingStock": {
                    "type": "number",
                    "readOnly": true
                },
                "purchaseOfGoods": {
                    "type": "number",
                    "readOnly": true
                },
                "costOfGoodsSold": {
                    "type": "number",
                    "readOnly": true
                },
                "salesRevenueAndWithdrawals": {
                    "type": "number",
                    "readOnly": true
                },
                "salesRevenueInCash": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "DifferencesOverview": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "permanentDifferencesAdditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermanentDifferences"
                    }
                },
                "permanentDifferencesDeductions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermanentDifferences"
                    }
                },
                "temporaryDifferences": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TemporaryDifferences"
                    }
                },
                "sumAdditions": {
                    "type": "number",
                    "readOnly": true
                },
                "sumDeductions": {
                    "type": "number",
                    "readOnly": true
                },
                "sumChanges": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "PermanentDifferences": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "negate": {
                    "type": "boolean",
                    "readOnly": true
                },
                "readOnly": {
                    "type": "boolean",
                    "readOnly": true
                },
                "source": {
                    "type": "string",
                    "readOnly": true
                },
                "postType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "REGISTRATION_NUMBER",
                        "DESCRIPTION",
                        "VEHICLE_TYPE",
                        "YEAR_OF_INITIAL_REGISTRATION",
                        "LIST_PRICE",
                        "DATE_FROM",
                        "DATE_TO",
                        "LICENCE",
                        "LICENCE_NUMBER",
                        "IS_ELECTRONIC_VEHICLE_LOGBOOK_LOGGED",
                        "NO_OF_KILOMETRES_TOTAL",
                        "OPERATING_EXPENSES",
                        "LEASING_RENT",
                        "IS_COMPANY_VEHICLE_USED_PRIVATE",
                        "NO_OF_KILOMETRES_PRIVATE",
                        "DEPRECIATION_PRIVATE_USE",
                        "REVERSED_VEHICLE_EXPENSES",
                        "FUEL_COST",
                        "MAINTENANCE_COST",
                        "COST_OF_INSURANCE_AND_TAX",
                        "NO_OF_LITER_FUEL",
                        "TAXIMETER_TYPE",
                        "INCOME_PERSONAL_TRANSPORT",
                        "INCOME_GOODS_TRANSPORT",
                        "DRIVING_INCOME_PAYED_IN_CASH",
                        "DRIVING_INCOME_INVOICED_PUBLIC_AGENCIES",
                        "TIP_PAYED_WITH_CARD_OR_INVOICE",
                        "TIP_PAYED_IN_CASH",
                        "NO_OF_KILOMETRES_SCHOOL_CHILDREN",
                        "NO_OF_KILOMETRES_WITH_PASSENGER",
                        "FLOP_TRIP_AMOUNT",
                        "IS_CONNECTED_TO_CENTRAL",
                        "ID_FOR_PROFIT_AND_LOSS_ACCOUNT",
                        "DESCRIPTION_PROFIT_AND_LOSS_ACCOUNT",
                        "MUNICIPALITY_NUMBER",
                        "OPENING_BALANCE",
                        "PROFIT_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "LOSS_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "PROFIT_REALIZATIONS_LIVESTOCK",
                        "VALUE_ACQUIRED_PROFIT_AND_LOSS_ACCOUNT",
                        "VALUE_REALIZED_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION_OR_DEDUCTION_BASIS",
                        "PERCENTAGE_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION",
                        "ANNUAL_DEDUCTION",
                        "CLOSING_BALANCE",
                        "IS_REGARDING_REALIZATION_SEPARATED_PLOT_AGRICULTURE_OR_FORESTRY",
                        "IS_REGARDING_REALIZATION_WHOLE_AGRICULTURE_OR_FORESTRY_BUSINESS",
                        "ID_FOR_ACCOMMODATION_AND_RESTAURANT",
                        "COVER_CHARGE_SUBJECT_TO_VAT",
                        "COVER_CHARGE_NOT_SUBJECT_TO_VAT",
                        "COVER_CHARGE",
                        "DESCRIPTION_ACCOMMODATION_AND_RESTAURANT",
                        "MUST_BE_CONFIRMED_BY_AUDITOR",
                        "PRODUCT_TYPE",
                        "OPENING_STOCK",
                        "CLOSING_STOCK",
                        "PURCHASE_OF_GOODS",
                        "COST_OF_GOODS_SOLD",
                        "SALES_REVENUE_AND_WITHDRAWALS",
                        "SALES_REVENUE_IN_CASH",
                        "CASH_REGISTER_SYSTEM_YEAR_OF_INITIAL_REGISTRATION",
                        "CASH_REGISTER_SYSTEM_TYPE",
                        "WITHDRAWAL_OF_PRODUCTS_VALUED_AT_TURNOVER",
                        "PRIVATE_WITHDRAWAL_ENTERED_ON_PRIVATE_ACCOUNT",
                        "TOTAL_WITHDRAWAL_PRODUCTS_ENTERED_AS_SALES_REVENUE",
                        "WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "WITHDRAWAL_VALUE_VALUED_AT_MARKET_VALUE",
                        "MARKUP_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "TOTAL_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "OPENING_BALANCE_CREDIT_SALES",
                        "CLOSING_BALANCE_CREDIT_SALES",
                        "OPENING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "CLOSING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "OPENING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "CLOSING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "OPENING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "CLOSING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "OPENING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "CLOSING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "OPENING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "CLOSING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "TANGIBLE_FIXED_ASSETS_TYPE",
                        "OPENING_BALANCE_TANGIBLE_FIXED_ASSETS",
                        "DEPRECIATION_PERCENTAGE",
                        "STRAIGHT_LINE_DEPRECIATION",
                        "PROFIT_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "LOSS_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "CASH_DEPOSITS",
                        "CONTRIBUTIONS_IN_KIND",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_CASH",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_OTHER_ASSETS",
                        "DEBT_WAVING",
                        "BUYING_OWN_SHARES",
                        "SELLING_OWN_SHARES",
                        "DEBT_CONVERSION_TO_EQUITY",
                        "POSITIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "NEGATIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "OTHER_POSITIVE_CHANGE_IN_EQUITY",
                        "OTHER_NEGATIVE_CHANGE_IN_EQUITY",
                        "NONE_DEDUCTIBLE_COST",
                        "POSITIVE_TAX_COST",
                        "INTEREST_EXPENSE_FIXED_TAX",
                        "SHARE_OF_LOSS_FROM_INVESTMENT",
                        "REVERSAL_OF_IMPAIRMENT",
                        "ACCOUNTING_IMPAIRMENT",
                        "ACCOUNTING_LOSS",
                        "ACCOUNTING_DEFICIT_NORWEGIAN_SDF",
                        "ACCOUNTING_DEFICIT_FOREIGN_SDF",
                        "ACCOUNTING_LOSS_NORWEGIAN_SDF",
                        "ACCOUNTING_LOSS_FOREIGN_SDF",
                        "RETURNED_DEBT_INTEREST",
                        "TAXABLE_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "TAXABLE_DIVIDEND_ON_SHARES",
                        "TAXABLE_PART_OF_DIVIDEND_AND_DISTRIBUTION",
                        "SHARE_OF_TAXABLE_PROFIT_NORWEGIAN_SDF",
                        "SHARE_OF_TAXABLE_PROFIT_FOREIGN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_NORWEGIAN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_FOREIGN_SDF",
                        "ADDITION_INTEREST_COST",
                        "CORRECTION_PURPOSED_DIVIDEND",
                        "TAXABLE_PROFIT_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "INCOME_SUPPLEMENT_FOR_CONVERSION_DIFFERENCE",
                        "OTHER_INCOME_SUPPLEMENT",
                        "RETURN_OF_INCOME_RELATED_DIVIDENDS",
                        "PROFIT_AND_LOSS_GROUP_CONTRIBUTION",
                        "ACCOUNTING_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "ACCOUNTING_PROFIT_SHARE_NORWEGIAN_SDF",
                        "ACCOUNTING_PROFIT_SHARE_FOREIGN_SDF",
                        "ACCOUNTING_GAIN_NORWEGIAN_SDF",
                        "ACCOUNTING_GAIN_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_NORWEGIAN_SDF",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_NORWEGIAN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "ISSUE_AND_ESTABLISHMENT_COST",
                        "INCOME_DEDUCTION_FROM_ACCOUNTING_CURRENCY_TO_NOK",
                        "OTHER_INCOME_DEDUCTION",
                        "TEMPORARY_DIFFERENCES_TYPE",
                        "OPENING_BALANCE_ACCOUNTABLE_VALUE",
                        "CLOSING_BALANCE_ACCOUNTABLE_VALUE",
                        "OPENING_BALANCE_TAX_VALUE",
                        "CLOSING_BALANCE_TAX_VALUE",
                        "OPENING_BALANCE_DIFFERENCES",
                        "CLOSING_BALANCE_DIFFERENCES",
                        "SHOW_PROFIT_AND_LOSS",
                        "SHOW_ACCOMMODATION_AND_RESTAURANT",
                        "IS_ACCOUNTABLE",
                        "USE_ACCOUNTING_VALUES_IN_INVENTORIES",
                        "USE_ACCOUNTING_VALUES_IN_CUSTOMER_RECEIVABLES",
                        "SHOW_TANGIBLE_FIXED_ASSET",
                        "SHOW_CAR",
                        "SHOW_INVENTORIES",
                        "SHOW_CUSTOMER_RECEIVABLES",
                        "SHOW_CONCERN_RELATION",
                        "OWN_BUSINESS_PROPERTIES",
                        "OWN_ASSET_PAPER",
                        "TRANSFERRED_BY",
                        "TRANSFERRED_DATE",
                        "SET_ACCOUNTANT_REVISED",
                        "IS_TAXABLE",
                        "AUDITING_OBLIGATION",
                        "VALIDATION_ONLY_ON_SUBMIT",
                        "DATE_OF_DETERMINATION",
                        "CONFIRMING_COMPANY_REPRESENTATIVE",
                        "CONTACT_PERSON",
                        "PARENT_COMPANY",
                        "SMALL_ENTERPRISES",
                        "PREPARED_BY_AUTHORIZED_ACCOUNTANT",
                        "SERVICE_ASSISTANCE_USED",
                        "ELECTRONIC_CASE_PROCESSING",
                        "SUBMIT_WITHOUT_BUSINESS_SPECIFICATION",
                        "SHOW_RESULT_AND_BALANCE_PREVIOUS_YEAR",
                        "DATE_START",
                        "DATE_END",
                        "INCLUDE_PREVIOUS_YEAR_IN_RESULT",
                        "DISTRIBUTE_INCOME_MODULE_INDUSTRY",
                        "YEAR_END_BRREG_DOC_ID",
                        "YEAR_END_BRREG_DOC_FETCHER_NAME",
                        "YEAR_END_DOCUMENTATION_ACCOMMODATION_AND_RESTAURANT",
                        "YEAR_END_DOCUMENTATION_PROFIT_AND_LOSS_ACCOUNT",
                        "YEAR_END_DOCUMENTATION_COMMERCIAL_VEHICLE",
                        "YEAR_END_DOCUMENTATION_TANGIBLE_FIXED_ASSETS",
                        "YEAR_END_DOCUMENTATION_INVENTORIES",
                        "YEAR_END_DOCUMENTATION_ACCOUNTS_RECEIVABLE_FROM_CUSTOMERS",
                        "YEAR_END_DOCUMENTATION_PROFIT_LOSS",
                        "YEAR_END_DOCUMENTATION_BALANCE",
                        "YEAR_END_DOCUMENTATION_PERSONAL_INCOME",
                        "YEAR_END_DOCUMENTATION_PERMANENT_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TEMPORARY_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TAX_RELATED_RESULT",
                        "YEAR_END_DOCUMENTATION_GROUP_CONTRIBUTIONS",
                        "YEAR_END_DOCUMENTATION_EQUITY_RECONCILIATION",
                        "YEAR_END_DOCUMENTATION_TAX_RETURN",
                        "YEAR_END_DOCUMENTATION_DIVIDEND",
                        "YEAR_END_DOCUMENTATION_DISPOSITIONS",
                        "YEAR_END_DOCUMENTATION_PROPERTIES",
                        "YEAR_END_DOCUMENTATION_SECURITIES",
                        "YEAR_END_DOCUMENTATION_TAX_CALCULATION",
                        "YEAR_END_DOCUMENTATION_AUDIT_REPORT",
                        "YEAR_END_DOCUMENTATION_ANNUAL_REPORT",
                        "YEAR_END_DOCUMENTATION_CASH_FLOW_STATEMENT",
                        "YEAR_END_DOCUMENTATION_ANNEXES_TO_THE_ANNUAL_ACCOUNTS",
                        "RECEIVER_ORG_NR",
                        "RECEIVER_NAME",
                        "CONCERN_CONNECTION",
                        "VOTING_LIMIT",
                        "DATE_OF_ACQUISITION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "APPLICATION_OF_LOSS_CARRY_FORWARDS",
                        "ACCUMULATED_LOSS_FROM_PREVIOUS_YEARS",
                        "CORRECTIONS_AND_OTHER_CAPITAL",
                        "CORRECTIONS_AND_OTHER_DEBT",
                        "NUMBER_OF_SHARES",
                        "IS_PART_OF_GROUP_COMPANY",
                        "IS_LISTED_ON_THE_STOCK_EXCHANGE",
                        "IS_REORGANIZED_ACROSS_BORDERS",
                        "HAS_RECEIVED_OR_TRANSFERRED_ASSETS",
                        "HEAD_OF_GROUP_NAME",
                        "HEAD_OF_GROUP_COUNTRY_CODE",
                        "HEAD_OF_GROUP_LAST_YEAR_NAME",
                        "HEAD_OF_GROUP_LAST_YEAR_COUNTRY_CODE",
                        "FOREIGN_OWNERSHIP_COMPANY_NAME",
                        "FOREIGN_OWNERSHIP_COMPANY_COUNTRY_CODE",
                        "OWNS_MIN_50_PERCENT_OF_FOREIGN_COMPANY",
                        "HAS_PERMANENT_ESTABLISHMENT_ABROAD",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_NAME",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_COUNTRY_CODE",
                        "HAS_PERFORMANCE_BETWEEN_SHAREHOLDERS_AND_OTHER",
                        "HAS_OUTSTANDING_PAYMENT_CLAIMS_RELATED_TO_ILLEGAL_STATE_AID",
                        "IS_SMALL_OR_MEDIUM_SIZED_BUSINESS",
                        "HAD_FINANCIAL_DIFFICULTIES_LAST_YEAR",
                        "IS_GROUP_COMPANY",
                        "HAS_RECEIVED_OTHER_PUBLIC_SUPPORT",
                        "AID_SCHEME_TONNAGE_TAX_REGIME",
                        "AID_SCHEME_RULES_FOR_ELECTRIC_DELIVERY_TRUCKS",
                        "AID_SCHEME_FOR_LONG_TERM_INVESTMENTS",
                        "AID_SCHEME_EMPLOYMENT_RELATED_OPTIONS_START_UP",
                        "AID_SCHEME_TAX_FUN",
                        "AID_SCHEME_FAVOURABLE_DEPRECIATION_RULES",
                        "AID_SCHEME_REGIONALLY_DIFFERENTIATED_INSURANCE_CONTRIBUTIONS",
                        "AID_SCHEME_FAVOURABLE_DETERMINED_LIST_PRICES_ELECTRIC_VEHICLES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_LEASING_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_BATTERIES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_NEWS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_INDUSTRIAL_SECTOR",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DISTRICT_HEATING",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_TARGET_ZONE",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DATA_CENTRES",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_COMMERCIAL_VESSELS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_ENERGY_PRODUCTS",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_WOOD_INDUSTRY",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_PIGMENT_INDUSTRY",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_MINERAL_OIL",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_GAS",
                        "AID_SCHEME_EXEMPTION_NOX_DUTY",
                        "AID_SCHEME_EXEMPTION_TRANSFER_FEE",
                        "AID_SCHEME_REDUCED_ROAD_TRAFFIC_INSURANCE_TAX",
                        "OTHER_CORRECTIONS",
                        "DEFERRED_TAX_ASSETS_IN_BALANCE",
                        "SHARES_AND_SECURITIES_NAME",
                        "SHARES_AND_SECURITIES_STOCK_TYPE",
                        "SHARES_AND_SECURITIES_VAT_NUMBER",
                        "SHARES_AND_SECURITIES_ISIN",
                        "SHARES_AND_SECURITIES_COUNTRY_CODE",
                        "SHARES_AND_SECURITIES_SHARE_CLASS",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_START_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_END_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_VALUE",
                        "SHARES_AND_SECURITIES_TOTAL_VALUE",
                        "SHARES_AND_SECURITIES_DIVIDEND",
                        "SHARES_AND_SECURITIES_INTEREST_INCOME",
                        "SHARES_AND_SECURITIES_PROFIT_REALISATION",
                        "SHARES_AND_SECURITIES_LOSS_REALISATION",
                        "SHARES_AND_SECURITIES_PROFIT_INTEREST",
                        "SHARES_AND_SECURITIES_LOSS_INTEREST",
                        "SHARES_AND_SECURITIES_EXEMPTION_METHOD",
                        "SHARES_AND_SECURITIES_FINANCIAL_PRODUCT",
                        "REAL_ESTATE_TYPE",
                        "REAL_ESTATE_DESCRIPTION",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "SHARE_OF_ASSET_VALUE",
                        "INTERNAL_PROPERTY_IDENTIFIER",
                        "ASSET_VALUE_FOR_ASSET_SHARE",
                        "VALUE_BEFORE_VALUATION_DISCOUNT_ASSET_SHARE",
                        "TOTAL_AREA",
                        "CALCULATED_RENTAL_VALUE",
                        "REAL_ESTATE_SERG_NO",
                        "REAL_ESTATE_ADDRESS",
                        "REAL_ESTATE_ZIP_CODE",
                        "REAL_ESTATE_POSTAL_PLACE_NAME",
                        "REAL_ESTATE_COUNTRY_CODE",
                        "REAL_ESTATE_MUNICIPALITY_NO",
                        "REAL_ESTATE_MUNICIPALITY_NAME",
                        "REAL_ESTATE_CADASTRAL_UNIT_NO",
                        "REAL_ESTATE_PROPERTY_UNIT_NO",
                        "REAL_ESTATE_LEASEHOLD_NO",
                        "REAL_ESTATE_SECTION_NO",
                        "REAL_ESTATE_OWNERSHIP_SHARE_PERCENTAGE",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE",
                        "REAL_ESTATE_EXPENSES_YEARLY",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY",
                        "REAL_ESTATE_DATE_DOCUMENTED",
                        "REAL_ESTATE_MARKET_VALUE_MANUAL",
                        "REAL_ESTATE_MARKET_VALUE_CALCULATED",
                        "REAL_ESTATE_USE_VALUE_MARKET",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_NAME",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_ORG_NO",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_SHARE_NO",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_SELF_OWNED_OR_COOPERATIVE_DWELLING_CALCULATED_MARKET_VALUE",
                        "REAL_ESTATE_RENTAL_AREA_TOTAL",
                        "REAL_ESTATE_RENTAL_PERIOD_MONTHS",
                        "REAL_ESTATE_RENTAL_INCOME_TOTAL_CALCULATED",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PREV_YEAR",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PRIOR_YEAR_TWO",
                        "REAL_ESTATE_RENTAL_ASSET_VALUE_BASE",
                        "REAL_ESTATE_RENTAL_GROSS_INCOME",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE_MANUAL",
                        "REAL_ESTATE_EXPENSES_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY_MANUAL",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_ROW_ID",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_NO",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_AREA",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_VALUE",
                        "YEARLY_DIVIDEND"
                    ]
                },
                "postValue": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperDifferencesOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DifferencesOverview"
                }
            }
        },
        "TemporaryDifferences": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "objectIdentifier": {
                    "type": "string",
                    "readOnly": true
                },
                "negate": {
                    "type": "boolean",
                    "readOnly": true
                },
                "readOnly": {
                    "type": "boolean",
                    "readOnly": true
                },
                "source": {
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "type": "string",
                    "readOnly": true
                },
                "openingBalanceAccountValue": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceDifferences": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceAccountValue": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceDifferences": {
                    "type": "number",
                    "readOnly": true
                },
                "changes": {
                    "type": "number",
                    "readOnly": true
                },
                "showAccounting": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showTax": {
                    "type": "boolean",
                    "readOnly": true
                },
                "profitTransferedToProfitAndLossAccount": {
                    "type": "number",
                    "readOnly": true
                },
                "lossTransferedToProfitAndLossAccount": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "CommercialVehicle": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "sumExpenses": {
                    "type": "number",
                    "readOnly": true
                },
                "accountedValue": {
                    "type": "number",
                    "readOnly": true
                },
                "groupedAccountedValue": {
                    "type": "number",
                    "readOnly": true
                },
                "amountToBePostedOnAccount": {
                    "type": "number",
                    "readOnly": true
                },
                "genericDataOverviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenericDataOverview"
                    }
                }
            }
        },
        "ResponseWrapperCommercialVehicle": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CommercialVehicle"
                }
            }
        },
        "GroupContributions": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "sumExpenses": {
                    "type": "number",
                    "readOnly": true
                },
                "sumPaid": {
                    "type": "number",
                    "readOnly": true
                },
                "sumReceived": {
                    "type": "number",
                    "readOnly": true
                },
                "receivedGroupContribution": {
                    "type": "number",
                    "readOnly": true
                },
                "paidGroupContribution": {
                    "type": "number",
                    "readOnly": true
                },
                "accountedValue": {
                    "type": "number",
                    "readOnly": true
                },
                "groupedAccountedValue": {
                    "type": "number",
                    "readOnly": true
                },
                "amountToBePostedOnAccount": {
                    "type": "number",
                    "readOnly": true
                },
                "genericDataOverviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenericDataOverview"
                    }
                }
            }
        },
        "ResponseWrapperGroupContributions": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/GroupContributions"
                }
            }
        },
        "ResponseWrapperListSharesAndSecurities": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SharesAndSecurities"
                    }
                }
            }
        },
        "SharesAndSecurities": {
            "type": "object",
            "required": [
                "postType",
                "postValue"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "groupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "genericDataType": {
                    "type": "string",
                    "enum": [
                        "MISC",
                        "TRANSPORT",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "PROFIT_AND_LOSS",
                        "CUSTOMER_RECEIVABLE",
                        "INVENTORIES",
                        "TANGIBLE_FIXED_ASSETS",
                        "RECONCILIATION_OF_EQUITY",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "DOCUMENT_DOWNLOADED",
                        "GROUP_CONTRIBUTIONS",
                        "TAX_RETURN",
                        "TAX_CALCULATIONS",
                        "DOCUMENTATION",
                        "SHARES_AND_SECURITIES",
                        "REAL_ESTATE"
                    ]
                },
                "genericDataSubType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "NOT_LICENSED",
                        "FREIGHT_TRANSPORT",
                        "TAXI",
                        "PRODUCT_TYPE_INVENTORY",
                        "CASH_REGISTER_SYSTEM",
                        "PRIVATE_WITHDRAWAL_OF_GOODS",
                        "ENTERTAINMENT",
                        "MULTI_UNIT_BUILDING_UNIT"
                    ]
                },
                "genericDataSubTypeGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "postType": {
                    "type": "string",
                    "enum": [
                        "REGISTRATION_NUMBER",
                        "DESCRIPTION",
                        "VEHICLE_TYPE",
                        "YEAR_OF_INITIAL_REGISTRATION",
                        "LIST_PRICE",
                        "DATE_FROM",
                        "DATE_TO",
                        "LICENCE",
                        "LICENCE_NUMBER",
                        "IS_ELECTRONIC_VEHICLE_LOGBOOK_LOGGED",
                        "NO_OF_KILOMETRES_TOTAL",
                        "OPERATING_EXPENSES",
                        "LEASING_RENT",
                        "IS_COMPANY_VEHICLE_USED_PRIVATE",
                        "NO_OF_KILOMETRES_PRIVATE",
                        "DEPRECIATION_PRIVATE_USE",
                        "REVERSED_VEHICLE_EXPENSES",
                        "FUEL_COST",
                        "MAINTENANCE_COST",
                        "COST_OF_INSURANCE_AND_TAX",
                        "NO_OF_LITER_FUEL",
                        "TAXIMETER_TYPE",
                        "INCOME_PERSONAL_TRANSPORT",
                        "INCOME_GOODS_TRANSPORT",
                        "DRIVING_INCOME_PAYED_IN_CASH",
                        "DRIVING_INCOME_INVOICED_PUBLIC_AGENCIES",
                        "TIP_PAYED_WITH_CARD_OR_INVOICE",
                        "TIP_PAYED_IN_CASH",
                        "NO_OF_KILOMETRES_SCHOOL_CHILDREN",
                        "NO_OF_KILOMETRES_WITH_PASSENGER",
                        "FLOP_TRIP_AMOUNT",
                        "IS_CONNECTED_TO_CENTRAL",
                        "ID_FOR_PROFIT_AND_LOSS_ACCOUNT",
                        "DESCRIPTION_PROFIT_AND_LOSS_ACCOUNT",
                        "MUNICIPALITY_NUMBER",
                        "OPENING_BALANCE",
                        "PROFIT_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "LOSS_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "PROFIT_REALIZATIONS_LIVESTOCK",
                        "VALUE_ACQUIRED_PROFIT_AND_LOSS_ACCOUNT",
                        "VALUE_REALIZED_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION_OR_DEDUCTION_BASIS",
                        "PERCENTAGE_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION",
                        "ANNUAL_DEDUCTION",
                        "CLOSING_BALANCE",
                        "IS_REGARDING_REALIZATION_SEPARATED_PLOT_AGRICULTURE_OR_FORESTRY",
                        "IS_REGARDING_REALIZATION_WHOLE_AGRICULTURE_OR_FORESTRY_BUSINESS",
                        "ID_FOR_ACCOMMODATION_AND_RESTAURANT",
                        "COVER_CHARGE_SUBJECT_TO_VAT",
                        "COVER_CHARGE_NOT_SUBJECT_TO_VAT",
                        "COVER_CHARGE",
                        "DESCRIPTION_ACCOMMODATION_AND_RESTAURANT",
                        "MUST_BE_CONFIRMED_BY_AUDITOR",
                        "PRODUCT_TYPE",
                        "OPENING_STOCK",
                        "CLOSING_STOCK",
                        "PURCHASE_OF_GOODS",
                        "COST_OF_GOODS_SOLD",
                        "SALES_REVENUE_AND_WITHDRAWALS",
                        "SALES_REVENUE_IN_CASH",
                        "CASH_REGISTER_SYSTEM_YEAR_OF_INITIAL_REGISTRATION",
                        "CASH_REGISTER_SYSTEM_TYPE",
                        "WITHDRAWAL_OF_PRODUCTS_VALUED_AT_TURNOVER",
                        "PRIVATE_WITHDRAWAL_ENTERED_ON_PRIVATE_ACCOUNT",
                        "TOTAL_WITHDRAWAL_PRODUCTS_ENTERED_AS_SALES_REVENUE",
                        "WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "WITHDRAWAL_VALUE_VALUED_AT_MARKET_VALUE",
                        "MARKUP_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "TOTAL_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "OPENING_BALANCE_CREDIT_SALES",
                        "CLOSING_BALANCE_CREDIT_SALES",
                        "OPENING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "CLOSING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "OPENING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "CLOSING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "OPENING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "CLOSING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "OPENING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "CLOSING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "OPENING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "CLOSING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "TANGIBLE_FIXED_ASSETS_TYPE",
                        "OPENING_BALANCE_TANGIBLE_FIXED_ASSETS",
                        "DEPRECIATION_PERCENTAGE",
                        "STRAIGHT_LINE_DEPRECIATION",
                        "PROFIT_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "LOSS_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "CASH_DEPOSITS",
                        "CONTRIBUTIONS_IN_KIND",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_CASH",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_OTHER_ASSETS",
                        "DEBT_WAVING",
                        "BUYING_OWN_SHARES",
                        "SELLING_OWN_SHARES",
                        "DEBT_CONVERSION_TO_EQUITY",
                        "POSITIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "NEGATIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "OTHER_POSITIVE_CHANGE_IN_EQUITY",
                        "OTHER_NEGATIVE_CHANGE_IN_EQUITY",
                        "NONE_DEDUCTIBLE_COST",
                        "POSITIVE_TAX_COST",
                        "INTEREST_EXPENSE_FIXED_TAX",
                        "SHARE_OF_LOSS_FROM_INVESTMENT",
                        "REVERSAL_OF_IMPAIRMENT",
                        "ACCOUNTING_IMPAIRMENT",
                        "ACCOUNTING_LOSS",
                        "ACCOUNTING_DEFICIT_NORWEGIAN_SDF",
                        "ACCOUNTING_DEFICIT_FOREIGN_SDF",
                        "ACCOUNTING_LOSS_NORWEGIAN_SDF",
                        "ACCOUNTING_LOSS_FOREIGN_SDF",
                        "RETURNED_DEBT_INTEREST",
                        "TAXABLE_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "TAXABLE_DIVIDEND_ON_SHARES",
                        "TAXABLE_PART_OF_DIVIDEND_AND_DISTRIBUTION",
                        "SHARE_OF_TAXABLE_PROFIT_NORWEGIAN_SDF",
                        "SHARE_OF_TAXABLE_PROFIT_FOREIGN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_NORWEGIAN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_FOREIGN_SDF",
                        "ADDITION_INTEREST_COST",
                        "CORRECTION_PURPOSED_DIVIDEND",
                        "TAXABLE_PROFIT_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "INCOME_SUPPLEMENT_FOR_CONVERSION_DIFFERENCE",
                        "OTHER_INCOME_SUPPLEMENT",
                        "RETURN_OF_INCOME_RELATED_DIVIDENDS",
                        "PROFIT_AND_LOSS_GROUP_CONTRIBUTION",
                        "ACCOUNTING_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "ACCOUNTING_PROFIT_SHARE_NORWEGIAN_SDF",
                        "ACCOUNTING_PROFIT_SHARE_FOREIGN_SDF",
                        "ACCOUNTING_GAIN_NORWEGIAN_SDF",
                        "ACCOUNTING_GAIN_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_NORWEGIAN_SDF",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_NORWEGIAN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "ISSUE_AND_ESTABLISHMENT_COST",
                        "INCOME_DEDUCTION_FROM_ACCOUNTING_CURRENCY_TO_NOK",
                        "OTHER_INCOME_DEDUCTION",
                        "TEMPORARY_DIFFERENCES_TYPE",
                        "OPENING_BALANCE_ACCOUNTABLE_VALUE",
                        "CLOSING_BALANCE_ACCOUNTABLE_VALUE",
                        "OPENING_BALANCE_TAX_VALUE",
                        "CLOSING_BALANCE_TAX_VALUE",
                        "OPENING_BALANCE_DIFFERENCES",
                        "CLOSING_BALANCE_DIFFERENCES",
                        "SHOW_PROFIT_AND_LOSS",
                        "SHOW_ACCOMMODATION_AND_RESTAURANT",
                        "IS_ACCOUNTABLE",
                        "USE_ACCOUNTING_VALUES_IN_INVENTORIES",
                        "USE_ACCOUNTING_VALUES_IN_CUSTOMER_RECEIVABLES",
                        "SHOW_TANGIBLE_FIXED_ASSET",
                        "SHOW_CAR",
                        "SHOW_INVENTORIES",
                        "SHOW_CUSTOMER_RECEIVABLES",
                        "SHOW_CONCERN_RELATION",
                        "OWN_BUSINESS_PROPERTIES",
                        "OWN_ASSET_PAPER",
                        "TRANSFERRED_BY",
                        "TRANSFERRED_DATE",
                        "SET_ACCOUNTANT_REVISED",
                        "IS_TAXABLE",
                        "AUDITING_OBLIGATION",
                        "VALIDATION_ONLY_ON_SUBMIT",
                        "DATE_OF_DETERMINATION",
                        "CONFIRMING_COMPANY_REPRESENTATIVE",
                        "CONTACT_PERSON",
                        "PARENT_COMPANY",
                        "SMALL_ENTERPRISES",
                        "PREPARED_BY_AUTHORIZED_ACCOUNTANT",
                        "SERVICE_ASSISTANCE_USED",
                        "ELECTRONIC_CASE_PROCESSING",
                        "SUBMIT_WITHOUT_BUSINESS_SPECIFICATION",
                        "SHOW_RESULT_AND_BALANCE_PREVIOUS_YEAR",
                        "DATE_START",
                        "DATE_END",
                        "INCLUDE_PREVIOUS_YEAR_IN_RESULT",
                        "DISTRIBUTE_INCOME_MODULE_INDUSTRY",
                        "YEAR_END_BRREG_DOC_ID",
                        "YEAR_END_BRREG_DOC_FETCHER_NAME",
                        "YEAR_END_DOCUMENTATION_ACCOMMODATION_AND_RESTAURANT",
                        "YEAR_END_DOCUMENTATION_PROFIT_AND_LOSS_ACCOUNT",
                        "YEAR_END_DOCUMENTATION_COMMERCIAL_VEHICLE",
                        "YEAR_END_DOCUMENTATION_TANGIBLE_FIXED_ASSETS",
                        "YEAR_END_DOCUMENTATION_INVENTORIES",
                        "YEAR_END_DOCUMENTATION_ACCOUNTS_RECEIVABLE_FROM_CUSTOMERS",
                        "YEAR_END_DOCUMENTATION_PROFIT_LOSS",
                        "YEAR_END_DOCUMENTATION_BALANCE",
                        "YEAR_END_DOCUMENTATION_PERSONAL_INCOME",
                        "YEAR_END_DOCUMENTATION_PERMANENT_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TEMPORARY_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TAX_RELATED_RESULT",
                        "YEAR_END_DOCUMENTATION_GROUP_CONTRIBUTIONS",
                        "YEAR_END_DOCUMENTATION_EQUITY_RECONCILIATION",
                        "YEAR_END_DOCUMENTATION_TAX_RETURN",
                        "YEAR_END_DOCUMENTATION_DIVIDEND",
                        "YEAR_END_DOCUMENTATION_DISPOSITIONS",
                        "YEAR_END_DOCUMENTATION_PROPERTIES",
                        "YEAR_END_DOCUMENTATION_SECURITIES",
                        "YEAR_END_DOCUMENTATION_TAX_CALCULATION",
                        "YEAR_END_DOCUMENTATION_AUDIT_REPORT",
                        "YEAR_END_DOCUMENTATION_ANNUAL_REPORT",
                        "YEAR_END_DOCUMENTATION_CASH_FLOW_STATEMENT",
                        "YEAR_END_DOCUMENTATION_ANNEXES_TO_THE_ANNUAL_ACCOUNTS",
                        "RECEIVER_ORG_NR",
                        "RECEIVER_NAME",
                        "CONCERN_CONNECTION",
                        "VOTING_LIMIT",
                        "DATE_OF_ACQUISITION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "APPLICATION_OF_LOSS_CARRY_FORWARDS",
                        "ACCUMULATED_LOSS_FROM_PREVIOUS_YEARS",
                        "CORRECTIONS_AND_OTHER_CAPITAL",
                        "CORRECTIONS_AND_OTHER_DEBT",
                        "NUMBER_OF_SHARES",
                        "IS_PART_OF_GROUP_COMPANY",
                        "IS_LISTED_ON_THE_STOCK_EXCHANGE",
                        "IS_REORGANIZED_ACROSS_BORDERS",
                        "HAS_RECEIVED_OR_TRANSFERRED_ASSETS",
                        "HEAD_OF_GROUP_NAME",
                        "HEAD_OF_GROUP_COUNTRY_CODE",
                        "HEAD_OF_GROUP_LAST_YEAR_NAME",
                        "HEAD_OF_GROUP_LAST_YEAR_COUNTRY_CODE",
                        "FOREIGN_OWNERSHIP_COMPANY_NAME",
                        "FOREIGN_OWNERSHIP_COMPANY_COUNTRY_CODE",
                        "OWNS_MIN_50_PERCENT_OF_FOREIGN_COMPANY",
                        "HAS_PERMANENT_ESTABLISHMENT_ABROAD",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_NAME",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_COUNTRY_CODE",
                        "HAS_PERFORMANCE_BETWEEN_SHAREHOLDERS_AND_OTHER",
                        "HAS_OUTSTANDING_PAYMENT_CLAIMS_RELATED_TO_ILLEGAL_STATE_AID",
                        "IS_SMALL_OR_MEDIUM_SIZED_BUSINESS",
                        "HAD_FINANCIAL_DIFFICULTIES_LAST_YEAR",
                        "IS_GROUP_COMPANY",
                        "HAS_RECEIVED_OTHER_PUBLIC_SUPPORT",
                        "AID_SCHEME_TONNAGE_TAX_REGIME",
                        "AID_SCHEME_RULES_FOR_ELECTRIC_DELIVERY_TRUCKS",
                        "AID_SCHEME_FOR_LONG_TERM_INVESTMENTS",
                        "AID_SCHEME_EMPLOYMENT_RELATED_OPTIONS_START_UP",
                        "AID_SCHEME_TAX_FUN",
                        "AID_SCHEME_FAVOURABLE_DEPRECIATION_RULES",
                        "AID_SCHEME_REGIONALLY_DIFFERENTIATED_INSURANCE_CONTRIBUTIONS",
                        "AID_SCHEME_FAVOURABLE_DETERMINED_LIST_PRICES_ELECTRIC_VEHICLES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_LEASING_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_BATTERIES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_NEWS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_INDUSTRIAL_SECTOR",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DISTRICT_HEATING",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_TARGET_ZONE",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DATA_CENTRES",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_COMMERCIAL_VESSELS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_ENERGY_PRODUCTS",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_WOOD_INDUSTRY",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_PIGMENT_INDUSTRY",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_MINERAL_OIL",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_GAS",
                        "AID_SCHEME_EXEMPTION_NOX_DUTY",
                        "AID_SCHEME_EXEMPTION_TRANSFER_FEE",
                        "AID_SCHEME_REDUCED_ROAD_TRAFFIC_INSURANCE_TAX",
                        "OTHER_CORRECTIONS",
                        "DEFERRED_TAX_ASSETS_IN_BALANCE",
                        "SHARES_AND_SECURITIES_NAME",
                        "SHARES_AND_SECURITIES_STOCK_TYPE",
                        "SHARES_AND_SECURITIES_VAT_NUMBER",
                        "SHARES_AND_SECURITIES_ISIN",
                        "SHARES_AND_SECURITIES_COUNTRY_CODE",
                        "SHARES_AND_SECURITIES_SHARE_CLASS",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_START_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_END_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_VALUE",
                        "SHARES_AND_SECURITIES_TOTAL_VALUE",
                        "SHARES_AND_SECURITIES_DIVIDEND",
                        "SHARES_AND_SECURITIES_INTEREST_INCOME",
                        "SHARES_AND_SECURITIES_PROFIT_REALISATION",
                        "SHARES_AND_SECURITIES_LOSS_REALISATION",
                        "SHARES_AND_SECURITIES_PROFIT_INTEREST",
                        "SHARES_AND_SECURITIES_LOSS_INTEREST",
                        "SHARES_AND_SECURITIES_EXEMPTION_METHOD",
                        "SHARES_AND_SECURITIES_FINANCIAL_PRODUCT",
                        "REAL_ESTATE_TYPE",
                        "REAL_ESTATE_DESCRIPTION",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "SHARE_OF_ASSET_VALUE",
                        "INTERNAL_PROPERTY_IDENTIFIER",
                        "ASSET_VALUE_FOR_ASSET_SHARE",
                        "VALUE_BEFORE_VALUATION_DISCOUNT_ASSET_SHARE",
                        "TOTAL_AREA",
                        "CALCULATED_RENTAL_VALUE",
                        "REAL_ESTATE_SERG_NO",
                        "REAL_ESTATE_ADDRESS",
                        "REAL_ESTATE_ZIP_CODE",
                        "REAL_ESTATE_POSTAL_PLACE_NAME",
                        "REAL_ESTATE_COUNTRY_CODE",
                        "REAL_ESTATE_MUNICIPALITY_NO",
                        "REAL_ESTATE_MUNICIPALITY_NAME",
                        "REAL_ESTATE_CADASTRAL_UNIT_NO",
                        "REAL_ESTATE_PROPERTY_UNIT_NO",
                        "REAL_ESTATE_LEASEHOLD_NO",
                        "REAL_ESTATE_SECTION_NO",
                        "REAL_ESTATE_OWNERSHIP_SHARE_PERCENTAGE",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE",
                        "REAL_ESTATE_EXPENSES_YEARLY",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY",
                        "REAL_ESTATE_DATE_DOCUMENTED",
                        "REAL_ESTATE_MARKET_VALUE_MANUAL",
                        "REAL_ESTATE_MARKET_VALUE_CALCULATED",
                        "REAL_ESTATE_USE_VALUE_MARKET",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_NAME",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_ORG_NO",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_SHARE_NO",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_SELF_OWNED_OR_COOPERATIVE_DWELLING_CALCULATED_MARKET_VALUE",
                        "REAL_ESTATE_RENTAL_AREA_TOTAL",
                        "REAL_ESTATE_RENTAL_PERIOD_MONTHS",
                        "REAL_ESTATE_RENTAL_INCOME_TOTAL_CALCULATED",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PREV_YEAR",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PRIOR_YEAR_TWO",
                        "REAL_ESTATE_RENTAL_ASSET_VALUE_BASE",
                        "REAL_ESTATE_RENTAL_GROSS_INCOME",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE_MANUAL",
                        "REAL_ESTATE_EXPENSES_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY_MANUAL",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_ROW_ID",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_NO",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_AREA",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_VALUE",
                        "YEARLY_DIVIDEND"
                    ]
                },
                "postValue": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "vatNumber": {
                    "type": "string"
                },
                "isin": {
                    "type": "string"
                },
                "stockType": {
                    "type": "string"
                },
                "shareClass": {
                    "type": "string"
                },
                "financialProduct": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "dividend": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "profitRealisation": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "lossRealisation": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "countryCode": {
                    "type": "string"
                },
                "sharesByTheStartOfTheYear": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "sharesByTheEndOfTheYear": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "totalValue": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "interestIncome": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "profitInterest": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "lossInterest": {
                    "$ref": "#/definitions/TlxNumber"
                },
                "exemptionMethod": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ProfitAndLoss": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "sumProfit": {
                    "type": "number",
                    "readOnly": true
                },
                "sumLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "sumProfitAndLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceProfit": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceProfit": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "postedOpeningBalanceProfit": {
                    "type": "number",
                    "readOnly": true
                },
                "postedOpeningBalanceLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "postedClosingBalanceProfit": {
                    "type": "number",
                    "readOnly": true
                },
                "postedClosingBalanceLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "annualIncomeRecognition": {
                    "type": "number",
                    "readOnly": true
                },
                "annualDeduction": {
                    "type": "number",
                    "readOnly": true
                },
                "amountToBePostedOnIncomeRecognitionAccount": {
                    "type": "number",
                    "readOnly": true
                },
                "amountToBePostedOnDeductionAccount": {
                    "type": "number",
                    "readOnly": true
                },
                "genericDataOverviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenericDataOverview"
                    }
                }
            }
        },
        "ResponseWrapperProfitAndLoss": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ProfitAndLoss"
                }
            }
        },
        "AccommodationAndRestaurant": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "genericDataOverviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenericDataOverview"
                    }
                }
            }
        },
        "ResponseWrapperAccommodationAndRestaurant": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/AccommodationAndRestaurant"
                }
            }
        },
        "CustomerReceivable": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "openingBalanceReceivableAndNonInvoicedRevenue": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceReceivableAndNonInvoicedRevenue": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceAscertainedLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceAscertainedLoss": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceWriteDown": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceWriteDown": {
                    "type": "number",
                    "readOnly": true
                },
                "sumTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "amountToBePostedOnAccount": {
                    "type": "number",
                    "readOnly": true
                },
                "accountedValue": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceDifferences": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceDifferences": {
                    "type": "number",
                    "readOnly": true
                },
                "changes": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceAccountingValues": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceAccountingValues": {
                    "type": "number",
                    "readOnly": true
                },
                "genericDataOverviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenericDataOverview"
                    }
                }
            }
        },
        "ResponseWrapperCustomerReceivable": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/CustomerReceivable"
                }
            }
        },
        "DownloadedBrreg": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "date": {
                    "type": "string",
                    "readOnly": true
                },
                "docId": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperDownloadedBrreg": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/DownloadedBrreg"
                }
            }
        },
        "InventoriesDetails": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "openingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalancePostType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "REGISTRATION_NUMBER",
                        "DESCRIPTION",
                        "VEHICLE_TYPE",
                        "YEAR_OF_INITIAL_REGISTRATION",
                        "LIST_PRICE",
                        "DATE_FROM",
                        "DATE_TO",
                        "LICENCE",
                        "LICENCE_NUMBER",
                        "IS_ELECTRONIC_VEHICLE_LOGBOOK_LOGGED",
                        "NO_OF_KILOMETRES_TOTAL",
                        "OPERATING_EXPENSES",
                        "LEASING_RENT",
                        "IS_COMPANY_VEHICLE_USED_PRIVATE",
                        "NO_OF_KILOMETRES_PRIVATE",
                        "DEPRECIATION_PRIVATE_USE",
                        "REVERSED_VEHICLE_EXPENSES",
                        "FUEL_COST",
                        "MAINTENANCE_COST",
                        "COST_OF_INSURANCE_AND_TAX",
                        "NO_OF_LITER_FUEL",
                        "TAXIMETER_TYPE",
                        "INCOME_PERSONAL_TRANSPORT",
                        "INCOME_GOODS_TRANSPORT",
                        "DRIVING_INCOME_PAYED_IN_CASH",
                        "DRIVING_INCOME_INVOICED_PUBLIC_AGENCIES",
                        "TIP_PAYED_WITH_CARD_OR_INVOICE",
                        "TIP_PAYED_IN_CASH",
                        "NO_OF_KILOMETRES_SCHOOL_CHILDREN",
                        "NO_OF_KILOMETRES_WITH_PASSENGER",
                        "FLOP_TRIP_AMOUNT",
                        "IS_CONNECTED_TO_CENTRAL",
                        "ID_FOR_PROFIT_AND_LOSS_ACCOUNT",
                        "DESCRIPTION_PROFIT_AND_LOSS_ACCOUNT",
                        "MUNICIPALITY_NUMBER",
                        "OPENING_BALANCE",
                        "PROFIT_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "LOSS_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "PROFIT_REALIZATIONS_LIVESTOCK",
                        "VALUE_ACQUIRED_PROFIT_AND_LOSS_ACCOUNT",
                        "VALUE_REALIZED_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION_OR_DEDUCTION_BASIS",
                        "PERCENTAGE_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION",
                        "ANNUAL_DEDUCTION",
                        "CLOSING_BALANCE",
                        "IS_REGARDING_REALIZATION_SEPARATED_PLOT_AGRICULTURE_OR_FORESTRY",
                        "IS_REGARDING_REALIZATION_WHOLE_AGRICULTURE_OR_FORESTRY_BUSINESS",
                        "ID_FOR_ACCOMMODATION_AND_RESTAURANT",
                        "COVER_CHARGE_SUBJECT_TO_VAT",
                        "COVER_CHARGE_NOT_SUBJECT_TO_VAT",
                        "COVER_CHARGE",
                        "DESCRIPTION_ACCOMMODATION_AND_RESTAURANT",
                        "MUST_BE_CONFIRMED_BY_AUDITOR",
                        "PRODUCT_TYPE",
                        "OPENING_STOCK",
                        "CLOSING_STOCK",
                        "PURCHASE_OF_GOODS",
                        "COST_OF_GOODS_SOLD",
                        "SALES_REVENUE_AND_WITHDRAWALS",
                        "SALES_REVENUE_IN_CASH",
                        "CASH_REGISTER_SYSTEM_YEAR_OF_INITIAL_REGISTRATION",
                        "CASH_REGISTER_SYSTEM_TYPE",
                        "WITHDRAWAL_OF_PRODUCTS_VALUED_AT_TURNOVER",
                        "PRIVATE_WITHDRAWAL_ENTERED_ON_PRIVATE_ACCOUNT",
                        "TOTAL_WITHDRAWAL_PRODUCTS_ENTERED_AS_SALES_REVENUE",
                        "WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "WITHDRAWAL_VALUE_VALUED_AT_MARKET_VALUE",
                        "MARKUP_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "TOTAL_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "OPENING_BALANCE_CREDIT_SALES",
                        "CLOSING_BALANCE_CREDIT_SALES",
                        "OPENING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "CLOSING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "OPENING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "CLOSING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "OPENING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "CLOSING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "OPENING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "CLOSING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "OPENING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "CLOSING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "TANGIBLE_FIXED_ASSETS_TYPE",
                        "OPENING_BALANCE_TANGIBLE_FIXED_ASSETS",
                        "DEPRECIATION_PERCENTAGE",
                        "STRAIGHT_LINE_DEPRECIATION",
                        "PROFIT_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "LOSS_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "CASH_DEPOSITS",
                        "CONTRIBUTIONS_IN_KIND",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_CASH",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_OTHER_ASSETS",
                        "DEBT_WAVING",
                        "BUYING_OWN_SHARES",
                        "SELLING_OWN_SHARES",
                        "DEBT_CONVERSION_TO_EQUITY",
                        "POSITIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "NEGATIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "OTHER_POSITIVE_CHANGE_IN_EQUITY",
                        "OTHER_NEGATIVE_CHANGE_IN_EQUITY",
                        "NONE_DEDUCTIBLE_COST",
                        "POSITIVE_TAX_COST",
                        "INTEREST_EXPENSE_FIXED_TAX",
                        "SHARE_OF_LOSS_FROM_INVESTMENT",
                        "REVERSAL_OF_IMPAIRMENT",
                        "ACCOUNTING_IMPAIRMENT",
                        "ACCOUNTING_LOSS",
                        "ACCOUNTING_DEFICIT_NORWEGIAN_SDF",
                        "ACCOUNTING_DEFICIT_FOREIGN_SDF",
                        "ACCOUNTING_LOSS_NORWEGIAN_SDF",
                        "ACCOUNTING_LOSS_FOREIGN_SDF",
                        "RETURNED_DEBT_INTEREST",
                        "TAXABLE_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "TAXABLE_DIVIDEND_ON_SHARES",
                        "TAXABLE_PART_OF_DIVIDEND_AND_DISTRIBUTION",
                        "SHARE_OF_TAXABLE_PROFIT_NORWEGIAN_SDF",
                        "SHARE_OF_TAXABLE_PROFIT_FOREIGN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_NORWEGIAN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_FOREIGN_SDF",
                        "ADDITION_INTEREST_COST",
                        "CORRECTION_PURPOSED_DIVIDEND",
                        "TAXABLE_PROFIT_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "INCOME_SUPPLEMENT_FOR_CONVERSION_DIFFERENCE",
                        "OTHER_INCOME_SUPPLEMENT",
                        "RETURN_OF_INCOME_RELATED_DIVIDENDS",
                        "PROFIT_AND_LOSS_GROUP_CONTRIBUTION",
                        "ACCOUNTING_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "ACCOUNTING_PROFIT_SHARE_NORWEGIAN_SDF",
                        "ACCOUNTING_PROFIT_SHARE_FOREIGN_SDF",
                        "ACCOUNTING_GAIN_NORWEGIAN_SDF",
                        "ACCOUNTING_GAIN_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_NORWEGIAN_SDF",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_NORWEGIAN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "ISSUE_AND_ESTABLISHMENT_COST",
                        "INCOME_DEDUCTION_FROM_ACCOUNTING_CURRENCY_TO_NOK",
                        "OTHER_INCOME_DEDUCTION",
                        "TEMPORARY_DIFFERENCES_TYPE",
                        "OPENING_BALANCE_ACCOUNTABLE_VALUE",
                        "CLOSING_BALANCE_ACCOUNTABLE_VALUE",
                        "OPENING_BALANCE_TAX_VALUE",
                        "CLOSING_BALANCE_TAX_VALUE",
                        "OPENING_BALANCE_DIFFERENCES",
                        "CLOSING_BALANCE_DIFFERENCES",
                        "SHOW_PROFIT_AND_LOSS",
                        "SHOW_ACCOMMODATION_AND_RESTAURANT",
                        "IS_ACCOUNTABLE",
                        "USE_ACCOUNTING_VALUES_IN_INVENTORIES",
                        "USE_ACCOUNTING_VALUES_IN_CUSTOMER_RECEIVABLES",
                        "SHOW_TANGIBLE_FIXED_ASSET",
                        "SHOW_CAR",
                        "SHOW_INVENTORIES",
                        "SHOW_CUSTOMER_RECEIVABLES",
                        "SHOW_CONCERN_RELATION",
                        "OWN_BUSINESS_PROPERTIES",
                        "OWN_ASSET_PAPER",
                        "TRANSFERRED_BY",
                        "TRANSFERRED_DATE",
                        "SET_ACCOUNTANT_REVISED",
                        "IS_TAXABLE",
                        "AUDITING_OBLIGATION",
                        "VALIDATION_ONLY_ON_SUBMIT",
                        "DATE_OF_DETERMINATION",
                        "CONFIRMING_COMPANY_REPRESENTATIVE",
                        "CONTACT_PERSON",
                        "PARENT_COMPANY",
                        "SMALL_ENTERPRISES",
                        "PREPARED_BY_AUTHORIZED_ACCOUNTANT",
                        "SERVICE_ASSISTANCE_USED",
                        "ELECTRONIC_CASE_PROCESSING",
                        "SUBMIT_WITHOUT_BUSINESS_SPECIFICATION",
                        "SHOW_RESULT_AND_BALANCE_PREVIOUS_YEAR",
                        "DATE_START",
                        "DATE_END",
                        "INCLUDE_PREVIOUS_YEAR_IN_RESULT",
                        "DISTRIBUTE_INCOME_MODULE_INDUSTRY",
                        "YEAR_END_BRREG_DOC_ID",
                        "YEAR_END_BRREG_DOC_FETCHER_NAME",
                        "YEAR_END_DOCUMENTATION_ACCOMMODATION_AND_RESTAURANT",
                        "YEAR_END_DOCUMENTATION_PROFIT_AND_LOSS_ACCOUNT",
                        "YEAR_END_DOCUMENTATION_COMMERCIAL_VEHICLE",
                        "YEAR_END_DOCUMENTATION_TANGIBLE_FIXED_ASSETS",
                        "YEAR_END_DOCUMENTATION_INVENTORIES",
                        "YEAR_END_DOCUMENTATION_ACCOUNTS_RECEIVABLE_FROM_CUSTOMERS",
                        "YEAR_END_DOCUMENTATION_PROFIT_LOSS",
                        "YEAR_END_DOCUMENTATION_BALANCE",
                        "YEAR_END_DOCUMENTATION_PERSONAL_INCOME",
                        "YEAR_END_DOCUMENTATION_PERMANENT_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TEMPORARY_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TAX_RELATED_RESULT",
                        "YEAR_END_DOCUMENTATION_GROUP_CONTRIBUTIONS",
                        "YEAR_END_DOCUMENTATION_EQUITY_RECONCILIATION",
                        "YEAR_END_DOCUMENTATION_TAX_RETURN",
                        "YEAR_END_DOCUMENTATION_DIVIDEND",
                        "YEAR_END_DOCUMENTATION_DISPOSITIONS",
                        "YEAR_END_DOCUMENTATION_PROPERTIES",
                        "YEAR_END_DOCUMENTATION_SECURITIES",
                        "YEAR_END_DOCUMENTATION_TAX_CALCULATION",
                        "YEAR_END_DOCUMENTATION_AUDIT_REPORT",
                        "YEAR_END_DOCUMENTATION_ANNUAL_REPORT",
                        "YEAR_END_DOCUMENTATION_CASH_FLOW_STATEMENT",
                        "YEAR_END_DOCUMENTATION_ANNEXES_TO_THE_ANNUAL_ACCOUNTS",
                        "RECEIVER_ORG_NR",
                        "RECEIVER_NAME",
                        "CONCERN_CONNECTION",
                        "VOTING_LIMIT",
                        "DATE_OF_ACQUISITION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "APPLICATION_OF_LOSS_CARRY_FORWARDS",
                        "ACCUMULATED_LOSS_FROM_PREVIOUS_YEARS",
                        "CORRECTIONS_AND_OTHER_CAPITAL",
                        "CORRECTIONS_AND_OTHER_DEBT",
                        "NUMBER_OF_SHARES",
                        "IS_PART_OF_GROUP_COMPANY",
                        "IS_LISTED_ON_THE_STOCK_EXCHANGE",
                        "IS_REORGANIZED_ACROSS_BORDERS",
                        "HAS_RECEIVED_OR_TRANSFERRED_ASSETS",
                        "HEAD_OF_GROUP_NAME",
                        "HEAD_OF_GROUP_COUNTRY_CODE",
                        "HEAD_OF_GROUP_LAST_YEAR_NAME",
                        "HEAD_OF_GROUP_LAST_YEAR_COUNTRY_CODE",
                        "FOREIGN_OWNERSHIP_COMPANY_NAME",
                        "FOREIGN_OWNERSHIP_COMPANY_COUNTRY_CODE",
                        "OWNS_MIN_50_PERCENT_OF_FOREIGN_COMPANY",
                        "HAS_PERMANENT_ESTABLISHMENT_ABROAD",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_NAME",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_COUNTRY_CODE",
                        "HAS_PERFORMANCE_BETWEEN_SHAREHOLDERS_AND_OTHER",
                        "HAS_OUTSTANDING_PAYMENT_CLAIMS_RELATED_TO_ILLEGAL_STATE_AID",
                        "IS_SMALL_OR_MEDIUM_SIZED_BUSINESS",
                        "HAD_FINANCIAL_DIFFICULTIES_LAST_YEAR",
                        "IS_GROUP_COMPANY",
                        "HAS_RECEIVED_OTHER_PUBLIC_SUPPORT",
                        "AID_SCHEME_TONNAGE_TAX_REGIME",
                        "AID_SCHEME_RULES_FOR_ELECTRIC_DELIVERY_TRUCKS",
                        "AID_SCHEME_FOR_LONG_TERM_INVESTMENTS",
                        "AID_SCHEME_EMPLOYMENT_RELATED_OPTIONS_START_UP",
                        "AID_SCHEME_TAX_FUN",
                        "AID_SCHEME_FAVOURABLE_DEPRECIATION_RULES",
                        "AID_SCHEME_REGIONALLY_DIFFERENTIATED_INSURANCE_CONTRIBUTIONS",
                        "AID_SCHEME_FAVOURABLE_DETERMINED_LIST_PRICES_ELECTRIC_VEHICLES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_LEASING_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_BATTERIES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_NEWS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_INDUSTRIAL_SECTOR",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DISTRICT_HEATING",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_TARGET_ZONE",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DATA_CENTRES",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_COMMERCIAL_VESSELS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_ENERGY_PRODUCTS",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_WOOD_INDUSTRY",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_PIGMENT_INDUSTRY",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_MINERAL_OIL",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_GAS",
                        "AID_SCHEME_EXEMPTION_NOX_DUTY",
                        "AID_SCHEME_EXEMPTION_TRANSFER_FEE",
                        "AID_SCHEME_REDUCED_ROAD_TRAFFIC_INSURANCE_TAX",
                        "OTHER_CORRECTIONS",
                        "DEFERRED_TAX_ASSETS_IN_BALANCE",
                        "SHARES_AND_SECURITIES_NAME",
                        "SHARES_AND_SECURITIES_STOCK_TYPE",
                        "SHARES_AND_SECURITIES_VAT_NUMBER",
                        "SHARES_AND_SECURITIES_ISIN",
                        "SHARES_AND_SECURITIES_COUNTRY_CODE",
                        "SHARES_AND_SECURITIES_SHARE_CLASS",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_START_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_END_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_VALUE",
                        "SHARES_AND_SECURITIES_TOTAL_VALUE",
                        "SHARES_AND_SECURITIES_DIVIDEND",
                        "SHARES_AND_SECURITIES_INTEREST_INCOME",
                        "SHARES_AND_SECURITIES_PROFIT_REALISATION",
                        "SHARES_AND_SECURITIES_LOSS_REALISATION",
                        "SHARES_AND_SECURITIES_PROFIT_INTEREST",
                        "SHARES_AND_SECURITIES_LOSS_INTEREST",
                        "SHARES_AND_SECURITIES_EXEMPTION_METHOD",
                        "SHARES_AND_SECURITIES_FINANCIAL_PRODUCT",
                        "REAL_ESTATE_TYPE",
                        "REAL_ESTATE_DESCRIPTION",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "SHARE_OF_ASSET_VALUE",
                        "INTERNAL_PROPERTY_IDENTIFIER",
                        "ASSET_VALUE_FOR_ASSET_SHARE",
                        "VALUE_BEFORE_VALUATION_DISCOUNT_ASSET_SHARE",
                        "TOTAL_AREA",
                        "CALCULATED_RENTAL_VALUE",
                        "REAL_ESTATE_SERG_NO",
                        "REAL_ESTATE_ADDRESS",
                        "REAL_ESTATE_ZIP_CODE",
                        "REAL_ESTATE_POSTAL_PLACE_NAME",
                        "REAL_ESTATE_COUNTRY_CODE",
                        "REAL_ESTATE_MUNICIPALITY_NO",
                        "REAL_ESTATE_MUNICIPALITY_NAME",
                        "REAL_ESTATE_CADASTRAL_UNIT_NO",
                        "REAL_ESTATE_PROPERTY_UNIT_NO",
                        "REAL_ESTATE_LEASEHOLD_NO",
                        "REAL_ESTATE_SECTION_NO",
                        "REAL_ESTATE_OWNERSHIP_SHARE_PERCENTAGE",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE",
                        "REAL_ESTATE_EXPENSES_YEARLY",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY",
                        "REAL_ESTATE_DATE_DOCUMENTED",
                        "REAL_ESTATE_MARKET_VALUE_MANUAL",
                        "REAL_ESTATE_MARKET_VALUE_CALCULATED",
                        "REAL_ESTATE_USE_VALUE_MARKET",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_NAME",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_ORG_NO",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_SHARE_NO",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_SELF_OWNED_OR_COOPERATIVE_DWELLING_CALCULATED_MARKET_VALUE",
                        "REAL_ESTATE_RENTAL_AREA_TOTAL",
                        "REAL_ESTATE_RENTAL_PERIOD_MONTHS",
                        "REAL_ESTATE_RENTAL_INCOME_TOTAL_CALCULATED",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PREV_YEAR",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PRIOR_YEAR_TWO",
                        "REAL_ESTATE_RENTAL_ASSET_VALUE_BASE",
                        "REAL_ESTATE_RENTAL_GROSS_INCOME",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE_MANUAL",
                        "REAL_ESTATE_EXPENSES_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY_MANUAL",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_ROW_ID",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_NO",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_AREA",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_VALUE",
                        "YEARLY_DIVIDEND"
                    ]
                },
                "closingBalancePostType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "REGISTRATION_NUMBER",
                        "DESCRIPTION",
                        "VEHICLE_TYPE",
                        "YEAR_OF_INITIAL_REGISTRATION",
                        "LIST_PRICE",
                        "DATE_FROM",
                        "DATE_TO",
                        "LICENCE",
                        "LICENCE_NUMBER",
                        "IS_ELECTRONIC_VEHICLE_LOGBOOK_LOGGED",
                        "NO_OF_KILOMETRES_TOTAL",
                        "OPERATING_EXPENSES",
                        "LEASING_RENT",
                        "IS_COMPANY_VEHICLE_USED_PRIVATE",
                        "NO_OF_KILOMETRES_PRIVATE",
                        "DEPRECIATION_PRIVATE_USE",
                        "REVERSED_VEHICLE_EXPENSES",
                        "FUEL_COST",
                        "MAINTENANCE_COST",
                        "COST_OF_INSURANCE_AND_TAX",
                        "NO_OF_LITER_FUEL",
                        "TAXIMETER_TYPE",
                        "INCOME_PERSONAL_TRANSPORT",
                        "INCOME_GOODS_TRANSPORT",
                        "DRIVING_INCOME_PAYED_IN_CASH",
                        "DRIVING_INCOME_INVOICED_PUBLIC_AGENCIES",
                        "TIP_PAYED_WITH_CARD_OR_INVOICE",
                        "TIP_PAYED_IN_CASH",
                        "NO_OF_KILOMETRES_SCHOOL_CHILDREN",
                        "NO_OF_KILOMETRES_WITH_PASSENGER",
                        "FLOP_TRIP_AMOUNT",
                        "IS_CONNECTED_TO_CENTRAL",
                        "ID_FOR_PROFIT_AND_LOSS_ACCOUNT",
                        "DESCRIPTION_PROFIT_AND_LOSS_ACCOUNT",
                        "MUNICIPALITY_NUMBER",
                        "OPENING_BALANCE",
                        "PROFIT_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "LOSS_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "PROFIT_REALIZATIONS_LIVESTOCK",
                        "VALUE_ACQUIRED_PROFIT_AND_LOSS_ACCOUNT",
                        "VALUE_REALIZED_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION_OR_DEDUCTION_BASIS",
                        "PERCENTAGE_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION",
                        "ANNUAL_DEDUCTION",
                        "CLOSING_BALANCE",
                        "IS_REGARDING_REALIZATION_SEPARATED_PLOT_AGRICULTURE_OR_FORESTRY",
                        "IS_REGARDING_REALIZATION_WHOLE_AGRICULTURE_OR_FORESTRY_BUSINESS",
                        "ID_FOR_ACCOMMODATION_AND_RESTAURANT",
                        "COVER_CHARGE_SUBJECT_TO_VAT",
                        "COVER_CHARGE_NOT_SUBJECT_TO_VAT",
                        "COVER_CHARGE",
                        "DESCRIPTION_ACCOMMODATION_AND_RESTAURANT",
                        "MUST_BE_CONFIRMED_BY_AUDITOR",
                        "PRODUCT_TYPE",
                        "OPENING_STOCK",
                        "CLOSING_STOCK",
                        "PURCHASE_OF_GOODS",
                        "COST_OF_GOODS_SOLD",
                        "SALES_REVENUE_AND_WITHDRAWALS",
                        "SALES_REVENUE_IN_CASH",
                        "CASH_REGISTER_SYSTEM_YEAR_OF_INITIAL_REGISTRATION",
                        "CASH_REGISTER_SYSTEM_TYPE",
                        "WITHDRAWAL_OF_PRODUCTS_VALUED_AT_TURNOVER",
                        "PRIVATE_WITHDRAWAL_ENTERED_ON_PRIVATE_ACCOUNT",
                        "TOTAL_WITHDRAWAL_PRODUCTS_ENTERED_AS_SALES_REVENUE",
                        "WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "WITHDRAWAL_VALUE_VALUED_AT_MARKET_VALUE",
                        "MARKUP_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "TOTAL_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "OPENING_BALANCE_CREDIT_SALES",
                        "CLOSING_BALANCE_CREDIT_SALES",
                        "OPENING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "CLOSING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "OPENING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "CLOSING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "OPENING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "CLOSING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "OPENING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "CLOSING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "OPENING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "CLOSING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "TANGIBLE_FIXED_ASSETS_TYPE",
                        "OPENING_BALANCE_TANGIBLE_FIXED_ASSETS",
                        "DEPRECIATION_PERCENTAGE",
                        "STRAIGHT_LINE_DEPRECIATION",
                        "PROFIT_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "LOSS_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "CASH_DEPOSITS",
                        "CONTRIBUTIONS_IN_KIND",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_CASH",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_OTHER_ASSETS",
                        "DEBT_WAVING",
                        "BUYING_OWN_SHARES",
                        "SELLING_OWN_SHARES",
                        "DEBT_CONVERSION_TO_EQUITY",
                        "POSITIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "NEGATIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "OTHER_POSITIVE_CHANGE_IN_EQUITY",
                        "OTHER_NEGATIVE_CHANGE_IN_EQUITY",
                        "NONE_DEDUCTIBLE_COST",
                        "POSITIVE_TAX_COST",
                        "INTEREST_EXPENSE_FIXED_TAX",
                        "SHARE_OF_LOSS_FROM_INVESTMENT",
                        "REVERSAL_OF_IMPAIRMENT",
                        "ACCOUNTING_IMPAIRMENT",
                        "ACCOUNTING_LOSS",
                        "ACCOUNTING_DEFICIT_NORWEGIAN_SDF",
                        "ACCOUNTING_DEFICIT_FOREIGN_SDF",
                        "ACCOUNTING_LOSS_NORWEGIAN_SDF",
                        "ACCOUNTING_LOSS_FOREIGN_SDF",
                        "RETURNED_DEBT_INTEREST",
                        "TAXABLE_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "TAXABLE_DIVIDEND_ON_SHARES",
                        "TAXABLE_PART_OF_DIVIDEND_AND_DISTRIBUTION",
                        "SHARE_OF_TAXABLE_PROFIT_NORWEGIAN_SDF",
                        "SHARE_OF_TAXABLE_PROFIT_FOREIGN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_NORWEGIAN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_FOREIGN_SDF",
                        "ADDITION_INTEREST_COST",
                        "CORRECTION_PURPOSED_DIVIDEND",
                        "TAXABLE_PROFIT_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "INCOME_SUPPLEMENT_FOR_CONVERSION_DIFFERENCE",
                        "OTHER_INCOME_SUPPLEMENT",
                        "RETURN_OF_INCOME_RELATED_DIVIDENDS",
                        "PROFIT_AND_LOSS_GROUP_CONTRIBUTION",
                        "ACCOUNTING_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "ACCOUNTING_PROFIT_SHARE_NORWEGIAN_SDF",
                        "ACCOUNTING_PROFIT_SHARE_FOREIGN_SDF",
                        "ACCOUNTING_GAIN_NORWEGIAN_SDF",
                        "ACCOUNTING_GAIN_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_NORWEGIAN_SDF",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_NORWEGIAN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "ISSUE_AND_ESTABLISHMENT_COST",
                        "INCOME_DEDUCTION_FROM_ACCOUNTING_CURRENCY_TO_NOK",
                        "OTHER_INCOME_DEDUCTION",
                        "TEMPORARY_DIFFERENCES_TYPE",
                        "OPENING_BALANCE_ACCOUNTABLE_VALUE",
                        "CLOSING_BALANCE_ACCOUNTABLE_VALUE",
                        "OPENING_BALANCE_TAX_VALUE",
                        "CLOSING_BALANCE_TAX_VALUE",
                        "OPENING_BALANCE_DIFFERENCES",
                        "CLOSING_BALANCE_DIFFERENCES",
                        "SHOW_PROFIT_AND_LOSS",
                        "SHOW_ACCOMMODATION_AND_RESTAURANT",
                        "IS_ACCOUNTABLE",
                        "USE_ACCOUNTING_VALUES_IN_INVENTORIES",
                        "USE_ACCOUNTING_VALUES_IN_CUSTOMER_RECEIVABLES",
                        "SHOW_TANGIBLE_FIXED_ASSET",
                        "SHOW_CAR",
                        "SHOW_INVENTORIES",
                        "SHOW_CUSTOMER_RECEIVABLES",
                        "SHOW_CONCERN_RELATION",
                        "OWN_BUSINESS_PROPERTIES",
                        "OWN_ASSET_PAPER",
                        "TRANSFERRED_BY",
                        "TRANSFERRED_DATE",
                        "SET_ACCOUNTANT_REVISED",
                        "IS_TAXABLE",
                        "AUDITING_OBLIGATION",
                        "VALIDATION_ONLY_ON_SUBMIT",
                        "DATE_OF_DETERMINATION",
                        "CONFIRMING_COMPANY_REPRESENTATIVE",
                        "CONTACT_PERSON",
                        "PARENT_COMPANY",
                        "SMALL_ENTERPRISES",
                        "PREPARED_BY_AUTHORIZED_ACCOUNTANT",
                        "SERVICE_ASSISTANCE_USED",
                        "ELECTRONIC_CASE_PROCESSING",
                        "SUBMIT_WITHOUT_BUSINESS_SPECIFICATION",
                        "SHOW_RESULT_AND_BALANCE_PREVIOUS_YEAR",
                        "DATE_START",
                        "DATE_END",
                        "INCLUDE_PREVIOUS_YEAR_IN_RESULT",
                        "DISTRIBUTE_INCOME_MODULE_INDUSTRY",
                        "YEAR_END_BRREG_DOC_ID",
                        "YEAR_END_BRREG_DOC_FETCHER_NAME",
                        "YEAR_END_DOCUMENTATION_ACCOMMODATION_AND_RESTAURANT",
                        "YEAR_END_DOCUMENTATION_PROFIT_AND_LOSS_ACCOUNT",
                        "YEAR_END_DOCUMENTATION_COMMERCIAL_VEHICLE",
                        "YEAR_END_DOCUMENTATION_TANGIBLE_FIXED_ASSETS",
                        "YEAR_END_DOCUMENTATION_INVENTORIES",
                        "YEAR_END_DOCUMENTATION_ACCOUNTS_RECEIVABLE_FROM_CUSTOMERS",
                        "YEAR_END_DOCUMENTATION_PROFIT_LOSS",
                        "YEAR_END_DOCUMENTATION_BALANCE",
                        "YEAR_END_DOCUMENTATION_PERSONAL_INCOME",
                        "YEAR_END_DOCUMENTATION_PERMANENT_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TEMPORARY_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TAX_RELATED_RESULT",
                        "YEAR_END_DOCUMENTATION_GROUP_CONTRIBUTIONS",
                        "YEAR_END_DOCUMENTATION_EQUITY_RECONCILIATION",
                        "YEAR_END_DOCUMENTATION_TAX_RETURN",
                        "YEAR_END_DOCUMENTATION_DIVIDEND",
                        "YEAR_END_DOCUMENTATION_DISPOSITIONS",
                        "YEAR_END_DOCUMENTATION_PROPERTIES",
                        "YEAR_END_DOCUMENTATION_SECURITIES",
                        "YEAR_END_DOCUMENTATION_TAX_CALCULATION",
                        "YEAR_END_DOCUMENTATION_AUDIT_REPORT",
                        "YEAR_END_DOCUMENTATION_ANNUAL_REPORT",
                        "YEAR_END_DOCUMENTATION_CASH_FLOW_STATEMENT",
                        "YEAR_END_DOCUMENTATION_ANNEXES_TO_THE_ANNUAL_ACCOUNTS",
                        "RECEIVER_ORG_NR",
                        "RECEIVER_NAME",
                        "CONCERN_CONNECTION",
                        "VOTING_LIMIT",
                        "DATE_OF_ACQUISITION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "APPLICATION_OF_LOSS_CARRY_FORWARDS",
                        "ACCUMULATED_LOSS_FROM_PREVIOUS_YEARS",
                        "CORRECTIONS_AND_OTHER_CAPITAL",
                        "CORRECTIONS_AND_OTHER_DEBT",
                        "NUMBER_OF_SHARES",
                        "IS_PART_OF_GROUP_COMPANY",
                        "IS_LISTED_ON_THE_STOCK_EXCHANGE",
                        "IS_REORGANIZED_ACROSS_BORDERS",
                        "HAS_RECEIVED_OR_TRANSFERRED_ASSETS",
                        "HEAD_OF_GROUP_NAME",
                        "HEAD_OF_GROUP_COUNTRY_CODE",
                        "HEAD_OF_GROUP_LAST_YEAR_NAME",
                        "HEAD_OF_GROUP_LAST_YEAR_COUNTRY_CODE",
                        "FOREIGN_OWNERSHIP_COMPANY_NAME",
                        "FOREIGN_OWNERSHIP_COMPANY_COUNTRY_CODE",
                        "OWNS_MIN_50_PERCENT_OF_FOREIGN_COMPANY",
                        "HAS_PERMANENT_ESTABLISHMENT_ABROAD",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_NAME",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_COUNTRY_CODE",
                        "HAS_PERFORMANCE_BETWEEN_SHAREHOLDERS_AND_OTHER",
                        "HAS_OUTSTANDING_PAYMENT_CLAIMS_RELATED_TO_ILLEGAL_STATE_AID",
                        "IS_SMALL_OR_MEDIUM_SIZED_BUSINESS",
                        "HAD_FINANCIAL_DIFFICULTIES_LAST_YEAR",
                        "IS_GROUP_COMPANY",
                        "HAS_RECEIVED_OTHER_PUBLIC_SUPPORT",
                        "AID_SCHEME_TONNAGE_TAX_REGIME",
                        "AID_SCHEME_RULES_FOR_ELECTRIC_DELIVERY_TRUCKS",
                        "AID_SCHEME_FOR_LONG_TERM_INVESTMENTS",
                        "AID_SCHEME_EMPLOYMENT_RELATED_OPTIONS_START_UP",
                        "AID_SCHEME_TAX_FUN",
                        "AID_SCHEME_FAVOURABLE_DEPRECIATION_RULES",
                        "AID_SCHEME_REGIONALLY_DIFFERENTIATED_INSURANCE_CONTRIBUTIONS",
                        "AID_SCHEME_FAVOURABLE_DETERMINED_LIST_PRICES_ELECTRIC_VEHICLES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_LEASING_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_BATTERIES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_NEWS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_INDUSTRIAL_SECTOR",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DISTRICT_HEATING",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_TARGET_ZONE",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DATA_CENTRES",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_COMMERCIAL_VESSELS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_ENERGY_PRODUCTS",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_WOOD_INDUSTRY",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_PIGMENT_INDUSTRY",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_MINERAL_OIL",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_GAS",
                        "AID_SCHEME_EXEMPTION_NOX_DUTY",
                        "AID_SCHEME_EXEMPTION_TRANSFER_FEE",
                        "AID_SCHEME_REDUCED_ROAD_TRAFFIC_INSURANCE_TAX",
                        "OTHER_CORRECTIONS",
                        "DEFERRED_TAX_ASSETS_IN_BALANCE",
                        "SHARES_AND_SECURITIES_NAME",
                        "SHARES_AND_SECURITIES_STOCK_TYPE",
                        "SHARES_AND_SECURITIES_VAT_NUMBER",
                        "SHARES_AND_SECURITIES_ISIN",
                        "SHARES_AND_SECURITIES_COUNTRY_CODE",
                        "SHARES_AND_SECURITIES_SHARE_CLASS",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_START_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_END_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_VALUE",
                        "SHARES_AND_SECURITIES_TOTAL_VALUE",
                        "SHARES_AND_SECURITIES_DIVIDEND",
                        "SHARES_AND_SECURITIES_INTEREST_INCOME",
                        "SHARES_AND_SECURITIES_PROFIT_REALISATION",
                        "SHARES_AND_SECURITIES_LOSS_REALISATION",
                        "SHARES_AND_SECURITIES_PROFIT_INTEREST",
                        "SHARES_AND_SECURITIES_LOSS_INTEREST",
                        "SHARES_AND_SECURITIES_EXEMPTION_METHOD",
                        "SHARES_AND_SECURITIES_FINANCIAL_PRODUCT",
                        "REAL_ESTATE_TYPE",
                        "REAL_ESTATE_DESCRIPTION",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "SHARE_OF_ASSET_VALUE",
                        "INTERNAL_PROPERTY_IDENTIFIER",
                        "ASSET_VALUE_FOR_ASSET_SHARE",
                        "VALUE_BEFORE_VALUATION_DISCOUNT_ASSET_SHARE",
                        "TOTAL_AREA",
                        "CALCULATED_RENTAL_VALUE",
                        "REAL_ESTATE_SERG_NO",
                        "REAL_ESTATE_ADDRESS",
                        "REAL_ESTATE_ZIP_CODE",
                        "REAL_ESTATE_POSTAL_PLACE_NAME",
                        "REAL_ESTATE_COUNTRY_CODE",
                        "REAL_ESTATE_MUNICIPALITY_NO",
                        "REAL_ESTATE_MUNICIPALITY_NAME",
                        "REAL_ESTATE_CADASTRAL_UNIT_NO",
                        "REAL_ESTATE_PROPERTY_UNIT_NO",
                        "REAL_ESTATE_LEASEHOLD_NO",
                        "REAL_ESTATE_SECTION_NO",
                        "REAL_ESTATE_OWNERSHIP_SHARE_PERCENTAGE",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE",
                        "REAL_ESTATE_EXPENSES_YEARLY",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY",
                        "REAL_ESTATE_DATE_DOCUMENTED",
                        "REAL_ESTATE_MARKET_VALUE_MANUAL",
                        "REAL_ESTATE_MARKET_VALUE_CALCULATED",
                        "REAL_ESTATE_USE_VALUE_MARKET",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_NAME",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_ORG_NO",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_SHARE_NO",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_SELF_OWNED_OR_COOPERATIVE_DWELLING_CALCULATED_MARKET_VALUE",
                        "REAL_ESTATE_RENTAL_AREA_TOTAL",
                        "REAL_ESTATE_RENTAL_PERIOD_MONTHS",
                        "REAL_ESTATE_RENTAL_INCOME_TOTAL_CALCULATED",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PREV_YEAR",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PRIOR_YEAR_TWO",
                        "REAL_ESTATE_RENTAL_ASSET_VALUE_BASE",
                        "REAL_ESTATE_RENTAL_GROSS_INCOME",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE_MANUAL",
                        "REAL_ESTATE_EXPENSES_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY_MANUAL",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_ROW_ID",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_NO",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_AREA",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_VALUE",
                        "YEARLY_DIVIDEND"
                    ]
                }
            }
        },
        "InventoriesOverview": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "inventories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InventoriesDetails"
                    }
                },
                "totalOpeningBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "totalClosingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "totalOpeningBalanceTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "totalClosingBalanceTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalanceDifferences": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalanceDifferences": {
                    "type": "number",
                    "readOnly": true
                },
                "changes": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperInventoriesOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/InventoriesOverview"
                }
            }
        },
        "ChangeOfEquity": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "negate": {
                    "type": "boolean",
                    "readOnly": true
                },
                "readOnly": {
                    "type": "boolean",
                    "readOnly": true
                },
                "postType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "REGISTRATION_NUMBER",
                        "DESCRIPTION",
                        "VEHICLE_TYPE",
                        "YEAR_OF_INITIAL_REGISTRATION",
                        "LIST_PRICE",
                        "DATE_FROM",
                        "DATE_TO",
                        "LICENCE",
                        "LICENCE_NUMBER",
                        "IS_ELECTRONIC_VEHICLE_LOGBOOK_LOGGED",
                        "NO_OF_KILOMETRES_TOTAL",
                        "OPERATING_EXPENSES",
                        "LEASING_RENT",
                        "IS_COMPANY_VEHICLE_USED_PRIVATE",
                        "NO_OF_KILOMETRES_PRIVATE",
                        "DEPRECIATION_PRIVATE_USE",
                        "REVERSED_VEHICLE_EXPENSES",
                        "FUEL_COST",
                        "MAINTENANCE_COST",
                        "COST_OF_INSURANCE_AND_TAX",
                        "NO_OF_LITER_FUEL",
                        "TAXIMETER_TYPE",
                        "INCOME_PERSONAL_TRANSPORT",
                        "INCOME_GOODS_TRANSPORT",
                        "DRIVING_INCOME_PAYED_IN_CASH",
                        "DRIVING_INCOME_INVOICED_PUBLIC_AGENCIES",
                        "TIP_PAYED_WITH_CARD_OR_INVOICE",
                        "TIP_PAYED_IN_CASH",
                        "NO_OF_KILOMETRES_SCHOOL_CHILDREN",
                        "NO_OF_KILOMETRES_WITH_PASSENGER",
                        "FLOP_TRIP_AMOUNT",
                        "IS_CONNECTED_TO_CENTRAL",
                        "ID_FOR_PROFIT_AND_LOSS_ACCOUNT",
                        "DESCRIPTION_PROFIT_AND_LOSS_ACCOUNT",
                        "MUNICIPALITY_NUMBER",
                        "OPENING_BALANCE",
                        "PROFIT_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "LOSS_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "PROFIT_REALIZATIONS_LIVESTOCK",
                        "VALUE_ACQUIRED_PROFIT_AND_LOSS_ACCOUNT",
                        "VALUE_REALIZED_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION_OR_DEDUCTION_BASIS",
                        "PERCENTAGE_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION",
                        "ANNUAL_DEDUCTION",
                        "CLOSING_BALANCE",
                        "IS_REGARDING_REALIZATION_SEPARATED_PLOT_AGRICULTURE_OR_FORESTRY",
                        "IS_REGARDING_REALIZATION_WHOLE_AGRICULTURE_OR_FORESTRY_BUSINESS",
                        "ID_FOR_ACCOMMODATION_AND_RESTAURANT",
                        "COVER_CHARGE_SUBJECT_TO_VAT",
                        "COVER_CHARGE_NOT_SUBJECT_TO_VAT",
                        "COVER_CHARGE",
                        "DESCRIPTION_ACCOMMODATION_AND_RESTAURANT",
                        "MUST_BE_CONFIRMED_BY_AUDITOR",
                        "PRODUCT_TYPE",
                        "OPENING_STOCK",
                        "CLOSING_STOCK",
                        "PURCHASE_OF_GOODS",
                        "COST_OF_GOODS_SOLD",
                        "SALES_REVENUE_AND_WITHDRAWALS",
                        "SALES_REVENUE_IN_CASH",
                        "CASH_REGISTER_SYSTEM_YEAR_OF_INITIAL_REGISTRATION",
                        "CASH_REGISTER_SYSTEM_TYPE",
                        "WITHDRAWAL_OF_PRODUCTS_VALUED_AT_TURNOVER",
                        "PRIVATE_WITHDRAWAL_ENTERED_ON_PRIVATE_ACCOUNT",
                        "TOTAL_WITHDRAWAL_PRODUCTS_ENTERED_AS_SALES_REVENUE",
                        "WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "WITHDRAWAL_VALUE_VALUED_AT_MARKET_VALUE",
                        "MARKUP_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "TOTAL_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "OPENING_BALANCE_CREDIT_SALES",
                        "CLOSING_BALANCE_CREDIT_SALES",
                        "OPENING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "CLOSING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "OPENING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "CLOSING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "OPENING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "CLOSING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "OPENING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "CLOSING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "OPENING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "CLOSING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "TANGIBLE_FIXED_ASSETS_TYPE",
                        "OPENING_BALANCE_TANGIBLE_FIXED_ASSETS",
                        "DEPRECIATION_PERCENTAGE",
                        "STRAIGHT_LINE_DEPRECIATION",
                        "PROFIT_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "LOSS_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "CASH_DEPOSITS",
                        "CONTRIBUTIONS_IN_KIND",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_CASH",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_OTHER_ASSETS",
                        "DEBT_WAVING",
                        "BUYING_OWN_SHARES",
                        "SELLING_OWN_SHARES",
                        "DEBT_CONVERSION_TO_EQUITY",
                        "POSITIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "NEGATIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "OTHER_POSITIVE_CHANGE_IN_EQUITY",
                        "OTHER_NEGATIVE_CHANGE_IN_EQUITY",
                        "NONE_DEDUCTIBLE_COST",
                        "POSITIVE_TAX_COST",
                        "INTEREST_EXPENSE_FIXED_TAX",
                        "SHARE_OF_LOSS_FROM_INVESTMENT",
                        "REVERSAL_OF_IMPAIRMENT",
                        "ACCOUNTING_IMPAIRMENT",
                        "ACCOUNTING_LOSS",
                        "ACCOUNTING_DEFICIT_NORWEGIAN_SDF",
                        "ACCOUNTING_DEFICIT_FOREIGN_SDF",
                        "ACCOUNTING_LOSS_NORWEGIAN_SDF",
                        "ACCOUNTING_LOSS_FOREIGN_SDF",
                        "RETURNED_DEBT_INTEREST",
                        "TAXABLE_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "TAXABLE_DIVIDEND_ON_SHARES",
                        "TAXABLE_PART_OF_DIVIDEND_AND_DISTRIBUTION",
                        "SHARE_OF_TAXABLE_PROFIT_NORWEGIAN_SDF",
                        "SHARE_OF_TAXABLE_PROFIT_FOREIGN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_NORWEGIAN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_FOREIGN_SDF",
                        "ADDITION_INTEREST_COST",
                        "CORRECTION_PURPOSED_DIVIDEND",
                        "TAXABLE_PROFIT_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "INCOME_SUPPLEMENT_FOR_CONVERSION_DIFFERENCE",
                        "OTHER_INCOME_SUPPLEMENT",
                        "RETURN_OF_INCOME_RELATED_DIVIDENDS",
                        "PROFIT_AND_LOSS_GROUP_CONTRIBUTION",
                        "ACCOUNTING_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "ACCOUNTING_PROFIT_SHARE_NORWEGIAN_SDF",
                        "ACCOUNTING_PROFIT_SHARE_FOREIGN_SDF",
                        "ACCOUNTING_GAIN_NORWEGIAN_SDF",
                        "ACCOUNTING_GAIN_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_NORWEGIAN_SDF",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_NORWEGIAN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "ISSUE_AND_ESTABLISHMENT_COST",
                        "INCOME_DEDUCTION_FROM_ACCOUNTING_CURRENCY_TO_NOK",
                        "OTHER_INCOME_DEDUCTION",
                        "TEMPORARY_DIFFERENCES_TYPE",
                        "OPENING_BALANCE_ACCOUNTABLE_VALUE",
                        "CLOSING_BALANCE_ACCOUNTABLE_VALUE",
                        "OPENING_BALANCE_TAX_VALUE",
                        "CLOSING_BALANCE_TAX_VALUE",
                        "OPENING_BALANCE_DIFFERENCES",
                        "CLOSING_BALANCE_DIFFERENCES",
                        "SHOW_PROFIT_AND_LOSS",
                        "SHOW_ACCOMMODATION_AND_RESTAURANT",
                        "IS_ACCOUNTABLE",
                        "USE_ACCOUNTING_VALUES_IN_INVENTORIES",
                        "USE_ACCOUNTING_VALUES_IN_CUSTOMER_RECEIVABLES",
                        "SHOW_TANGIBLE_FIXED_ASSET",
                        "SHOW_CAR",
                        "SHOW_INVENTORIES",
                        "SHOW_CUSTOMER_RECEIVABLES",
                        "SHOW_CONCERN_RELATION",
                        "OWN_BUSINESS_PROPERTIES",
                        "OWN_ASSET_PAPER",
                        "TRANSFERRED_BY",
                        "TRANSFERRED_DATE",
                        "SET_ACCOUNTANT_REVISED",
                        "IS_TAXABLE",
                        "AUDITING_OBLIGATION",
                        "VALIDATION_ONLY_ON_SUBMIT",
                        "DATE_OF_DETERMINATION",
                        "CONFIRMING_COMPANY_REPRESENTATIVE",
                        "CONTACT_PERSON",
                        "PARENT_COMPANY",
                        "SMALL_ENTERPRISES",
                        "PREPARED_BY_AUTHORIZED_ACCOUNTANT",
                        "SERVICE_ASSISTANCE_USED",
                        "ELECTRONIC_CASE_PROCESSING",
                        "SUBMIT_WITHOUT_BUSINESS_SPECIFICATION",
                        "SHOW_RESULT_AND_BALANCE_PREVIOUS_YEAR",
                        "DATE_START",
                        "DATE_END",
                        "INCLUDE_PREVIOUS_YEAR_IN_RESULT",
                        "DISTRIBUTE_INCOME_MODULE_INDUSTRY",
                        "YEAR_END_BRREG_DOC_ID",
                        "YEAR_END_BRREG_DOC_FETCHER_NAME",
                        "YEAR_END_DOCUMENTATION_ACCOMMODATION_AND_RESTAURANT",
                        "YEAR_END_DOCUMENTATION_PROFIT_AND_LOSS_ACCOUNT",
                        "YEAR_END_DOCUMENTATION_COMMERCIAL_VEHICLE",
                        "YEAR_END_DOCUMENTATION_TANGIBLE_FIXED_ASSETS",
                        "YEAR_END_DOCUMENTATION_INVENTORIES",
                        "YEAR_END_DOCUMENTATION_ACCOUNTS_RECEIVABLE_FROM_CUSTOMERS",
                        "YEAR_END_DOCUMENTATION_PROFIT_LOSS",
                        "YEAR_END_DOCUMENTATION_BALANCE",
                        "YEAR_END_DOCUMENTATION_PERSONAL_INCOME",
                        "YEAR_END_DOCUMENTATION_PERMANENT_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TEMPORARY_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TAX_RELATED_RESULT",
                        "YEAR_END_DOCUMENTATION_GROUP_CONTRIBUTIONS",
                        "YEAR_END_DOCUMENTATION_EQUITY_RECONCILIATION",
                        "YEAR_END_DOCUMENTATION_TAX_RETURN",
                        "YEAR_END_DOCUMENTATION_DIVIDEND",
                        "YEAR_END_DOCUMENTATION_DISPOSITIONS",
                        "YEAR_END_DOCUMENTATION_PROPERTIES",
                        "YEAR_END_DOCUMENTATION_SECURITIES",
                        "YEAR_END_DOCUMENTATION_TAX_CALCULATION",
                        "YEAR_END_DOCUMENTATION_AUDIT_REPORT",
                        "YEAR_END_DOCUMENTATION_ANNUAL_REPORT",
                        "YEAR_END_DOCUMENTATION_CASH_FLOW_STATEMENT",
                        "YEAR_END_DOCUMENTATION_ANNEXES_TO_THE_ANNUAL_ACCOUNTS",
                        "RECEIVER_ORG_NR",
                        "RECEIVER_NAME",
                        "CONCERN_CONNECTION",
                        "VOTING_LIMIT",
                        "DATE_OF_ACQUISITION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "APPLICATION_OF_LOSS_CARRY_FORWARDS",
                        "ACCUMULATED_LOSS_FROM_PREVIOUS_YEARS",
                        "CORRECTIONS_AND_OTHER_CAPITAL",
                        "CORRECTIONS_AND_OTHER_DEBT",
                        "NUMBER_OF_SHARES",
                        "IS_PART_OF_GROUP_COMPANY",
                        "IS_LISTED_ON_THE_STOCK_EXCHANGE",
                        "IS_REORGANIZED_ACROSS_BORDERS",
                        "HAS_RECEIVED_OR_TRANSFERRED_ASSETS",
                        "HEAD_OF_GROUP_NAME",
                        "HEAD_OF_GROUP_COUNTRY_CODE",
                        "HEAD_OF_GROUP_LAST_YEAR_NAME",
                        "HEAD_OF_GROUP_LAST_YEAR_COUNTRY_CODE",
                        "FOREIGN_OWNERSHIP_COMPANY_NAME",
                        "FOREIGN_OWNERSHIP_COMPANY_COUNTRY_CODE",
                        "OWNS_MIN_50_PERCENT_OF_FOREIGN_COMPANY",
                        "HAS_PERMANENT_ESTABLISHMENT_ABROAD",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_NAME",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_COUNTRY_CODE",
                        "HAS_PERFORMANCE_BETWEEN_SHAREHOLDERS_AND_OTHER",
                        "HAS_OUTSTANDING_PAYMENT_CLAIMS_RELATED_TO_ILLEGAL_STATE_AID",
                        "IS_SMALL_OR_MEDIUM_SIZED_BUSINESS",
                        "HAD_FINANCIAL_DIFFICULTIES_LAST_YEAR",
                        "IS_GROUP_COMPANY",
                        "HAS_RECEIVED_OTHER_PUBLIC_SUPPORT",
                        "AID_SCHEME_TONNAGE_TAX_REGIME",
                        "AID_SCHEME_RULES_FOR_ELECTRIC_DELIVERY_TRUCKS",
                        "AID_SCHEME_FOR_LONG_TERM_INVESTMENTS",
                        "AID_SCHEME_EMPLOYMENT_RELATED_OPTIONS_START_UP",
                        "AID_SCHEME_TAX_FUN",
                        "AID_SCHEME_FAVOURABLE_DEPRECIATION_RULES",
                        "AID_SCHEME_REGIONALLY_DIFFERENTIATED_INSURANCE_CONTRIBUTIONS",
                        "AID_SCHEME_FAVOURABLE_DETERMINED_LIST_PRICES_ELECTRIC_VEHICLES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_LEASING_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_BATTERIES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_NEWS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_INDUSTRIAL_SECTOR",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DISTRICT_HEATING",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_TARGET_ZONE",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DATA_CENTRES",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_COMMERCIAL_VESSELS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_ENERGY_PRODUCTS",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_WOOD_INDUSTRY",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_PIGMENT_INDUSTRY",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_MINERAL_OIL",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_GAS",
                        "AID_SCHEME_EXEMPTION_NOX_DUTY",
                        "AID_SCHEME_EXEMPTION_TRANSFER_FEE",
                        "AID_SCHEME_REDUCED_ROAD_TRAFFIC_INSURANCE_TAX",
                        "OTHER_CORRECTIONS",
                        "DEFERRED_TAX_ASSETS_IN_BALANCE",
                        "SHARES_AND_SECURITIES_NAME",
                        "SHARES_AND_SECURITIES_STOCK_TYPE",
                        "SHARES_AND_SECURITIES_VAT_NUMBER",
                        "SHARES_AND_SECURITIES_ISIN",
                        "SHARES_AND_SECURITIES_COUNTRY_CODE",
                        "SHARES_AND_SECURITIES_SHARE_CLASS",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_START_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_END_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_VALUE",
                        "SHARES_AND_SECURITIES_TOTAL_VALUE",
                        "SHARES_AND_SECURITIES_DIVIDEND",
                        "SHARES_AND_SECURITIES_INTEREST_INCOME",
                        "SHARES_AND_SECURITIES_PROFIT_REALISATION",
                        "SHARES_AND_SECURITIES_LOSS_REALISATION",
                        "SHARES_AND_SECURITIES_PROFIT_INTEREST",
                        "SHARES_AND_SECURITIES_LOSS_INTEREST",
                        "SHARES_AND_SECURITIES_EXEMPTION_METHOD",
                        "SHARES_AND_SECURITIES_FINANCIAL_PRODUCT",
                        "REAL_ESTATE_TYPE",
                        "REAL_ESTATE_DESCRIPTION",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "SHARE_OF_ASSET_VALUE",
                        "INTERNAL_PROPERTY_IDENTIFIER",
                        "ASSET_VALUE_FOR_ASSET_SHARE",
                        "VALUE_BEFORE_VALUATION_DISCOUNT_ASSET_SHARE",
                        "TOTAL_AREA",
                        "CALCULATED_RENTAL_VALUE",
                        "REAL_ESTATE_SERG_NO",
                        "REAL_ESTATE_ADDRESS",
                        "REAL_ESTATE_ZIP_CODE",
                        "REAL_ESTATE_POSTAL_PLACE_NAME",
                        "REAL_ESTATE_COUNTRY_CODE",
                        "REAL_ESTATE_MUNICIPALITY_NO",
                        "REAL_ESTATE_MUNICIPALITY_NAME",
                        "REAL_ESTATE_CADASTRAL_UNIT_NO",
                        "REAL_ESTATE_PROPERTY_UNIT_NO",
                        "REAL_ESTATE_LEASEHOLD_NO",
                        "REAL_ESTATE_SECTION_NO",
                        "REAL_ESTATE_OWNERSHIP_SHARE_PERCENTAGE",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE",
                        "REAL_ESTATE_EXPENSES_YEARLY",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY",
                        "REAL_ESTATE_DATE_DOCUMENTED",
                        "REAL_ESTATE_MARKET_VALUE_MANUAL",
                        "REAL_ESTATE_MARKET_VALUE_CALCULATED",
                        "REAL_ESTATE_USE_VALUE_MARKET",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_NAME",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_ORG_NO",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_SHARE_NO",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_SELF_OWNED_OR_COOPERATIVE_DWELLING_CALCULATED_MARKET_VALUE",
                        "REAL_ESTATE_RENTAL_AREA_TOTAL",
                        "REAL_ESTATE_RENTAL_PERIOD_MONTHS",
                        "REAL_ESTATE_RENTAL_INCOME_TOTAL_CALCULATED",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PREV_YEAR",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PRIOR_YEAR_TWO",
                        "REAL_ESTATE_RENTAL_ASSET_VALUE_BASE",
                        "REAL_ESTATE_RENTAL_GROSS_INCOME",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE_MANUAL",
                        "REAL_ESTATE_EXPENSES_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY_MANUAL",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_ROW_ID",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_NO",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_AREA",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_VALUE",
                        "YEARLY_DIVIDEND"
                    ]
                },
                "postValue": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ReconciliationOfEquityOverview": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "changeOfEquities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ChangeOfEquity"
                    }
                },
                "openingEquity": {
                    "type": "number",
                    "readOnly": true
                },
                "closingEquity": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedClosingEquity": {
                    "type": "number",
                    "readOnly": true
                },
                "closingEquityDiff": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperReconciliationOfEquityOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ReconciliationOfEquityOverview"
                }
            }
        },
        "AidScheme": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "negate": {
                    "type": "boolean",
                    "readOnly": true
                },
                "readOnly": {
                    "type": "boolean",
                    "readOnly": true
                },
                "source": {
                    "type": "string",
                    "readOnly": true
                },
                "postType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "REGISTRATION_NUMBER",
                        "DESCRIPTION",
                        "VEHICLE_TYPE",
                        "YEAR_OF_INITIAL_REGISTRATION",
                        "LIST_PRICE",
                        "DATE_FROM",
                        "DATE_TO",
                        "LICENCE",
                        "LICENCE_NUMBER",
                        "IS_ELECTRONIC_VEHICLE_LOGBOOK_LOGGED",
                        "NO_OF_KILOMETRES_TOTAL",
                        "OPERATING_EXPENSES",
                        "LEASING_RENT",
                        "IS_COMPANY_VEHICLE_USED_PRIVATE",
                        "NO_OF_KILOMETRES_PRIVATE",
                        "DEPRECIATION_PRIVATE_USE",
                        "REVERSED_VEHICLE_EXPENSES",
                        "FUEL_COST",
                        "MAINTENANCE_COST",
                        "COST_OF_INSURANCE_AND_TAX",
                        "NO_OF_LITER_FUEL",
                        "TAXIMETER_TYPE",
                        "INCOME_PERSONAL_TRANSPORT",
                        "INCOME_GOODS_TRANSPORT",
                        "DRIVING_INCOME_PAYED_IN_CASH",
                        "DRIVING_INCOME_INVOICED_PUBLIC_AGENCIES",
                        "TIP_PAYED_WITH_CARD_OR_INVOICE",
                        "TIP_PAYED_IN_CASH",
                        "NO_OF_KILOMETRES_SCHOOL_CHILDREN",
                        "NO_OF_KILOMETRES_WITH_PASSENGER",
                        "FLOP_TRIP_AMOUNT",
                        "IS_CONNECTED_TO_CENTRAL",
                        "ID_FOR_PROFIT_AND_LOSS_ACCOUNT",
                        "DESCRIPTION_PROFIT_AND_LOSS_ACCOUNT",
                        "MUNICIPALITY_NUMBER",
                        "OPENING_BALANCE",
                        "PROFIT_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "LOSS_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "PROFIT_REALIZATIONS_LIVESTOCK",
                        "VALUE_ACQUIRED_PROFIT_AND_LOSS_ACCOUNT",
                        "VALUE_REALIZED_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION_OR_DEDUCTION_BASIS",
                        "PERCENTAGE_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION",
                        "ANNUAL_DEDUCTION",
                        "CLOSING_BALANCE",
                        "IS_REGARDING_REALIZATION_SEPARATED_PLOT_AGRICULTURE_OR_FORESTRY",
                        "IS_REGARDING_REALIZATION_WHOLE_AGRICULTURE_OR_FORESTRY_BUSINESS",
                        "ID_FOR_ACCOMMODATION_AND_RESTAURANT",
                        "COVER_CHARGE_SUBJECT_TO_VAT",
                        "COVER_CHARGE_NOT_SUBJECT_TO_VAT",
                        "COVER_CHARGE",
                        "DESCRIPTION_ACCOMMODATION_AND_RESTAURANT",
                        "MUST_BE_CONFIRMED_BY_AUDITOR",
                        "PRODUCT_TYPE",
                        "OPENING_STOCK",
                        "CLOSING_STOCK",
                        "PURCHASE_OF_GOODS",
                        "COST_OF_GOODS_SOLD",
                        "SALES_REVENUE_AND_WITHDRAWALS",
                        "SALES_REVENUE_IN_CASH",
                        "CASH_REGISTER_SYSTEM_YEAR_OF_INITIAL_REGISTRATION",
                        "CASH_REGISTER_SYSTEM_TYPE",
                        "WITHDRAWAL_OF_PRODUCTS_VALUED_AT_TURNOVER",
                        "PRIVATE_WITHDRAWAL_ENTERED_ON_PRIVATE_ACCOUNT",
                        "TOTAL_WITHDRAWAL_PRODUCTS_ENTERED_AS_SALES_REVENUE",
                        "WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "WITHDRAWAL_VALUE_VALUED_AT_MARKET_VALUE",
                        "MARKUP_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "TOTAL_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "OPENING_BALANCE_CREDIT_SALES",
                        "CLOSING_BALANCE_CREDIT_SALES",
                        "OPENING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "CLOSING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "OPENING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "CLOSING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "OPENING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "CLOSING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "OPENING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "CLOSING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "OPENING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "CLOSING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "TANGIBLE_FIXED_ASSETS_TYPE",
                        "OPENING_BALANCE_TANGIBLE_FIXED_ASSETS",
                        "DEPRECIATION_PERCENTAGE",
                        "STRAIGHT_LINE_DEPRECIATION",
                        "PROFIT_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "LOSS_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "CASH_DEPOSITS",
                        "CONTRIBUTIONS_IN_KIND",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_CASH",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_OTHER_ASSETS",
                        "DEBT_WAVING",
                        "BUYING_OWN_SHARES",
                        "SELLING_OWN_SHARES",
                        "DEBT_CONVERSION_TO_EQUITY",
                        "POSITIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "NEGATIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "OTHER_POSITIVE_CHANGE_IN_EQUITY",
                        "OTHER_NEGATIVE_CHANGE_IN_EQUITY",
                        "NONE_DEDUCTIBLE_COST",
                        "POSITIVE_TAX_COST",
                        "INTEREST_EXPENSE_FIXED_TAX",
                        "SHARE_OF_LOSS_FROM_INVESTMENT",
                        "REVERSAL_OF_IMPAIRMENT",
                        "ACCOUNTING_IMPAIRMENT",
                        "ACCOUNTING_LOSS",
                        "ACCOUNTING_DEFICIT_NORWEGIAN_SDF",
                        "ACCOUNTING_DEFICIT_FOREIGN_SDF",
                        "ACCOUNTING_LOSS_NORWEGIAN_SDF",
                        "ACCOUNTING_LOSS_FOREIGN_SDF",
                        "RETURNED_DEBT_INTEREST",
                        "TAXABLE_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "TAXABLE_DIVIDEND_ON_SHARES",
                        "TAXABLE_PART_OF_DIVIDEND_AND_DISTRIBUTION",
                        "SHARE_OF_TAXABLE_PROFIT_NORWEGIAN_SDF",
                        "SHARE_OF_TAXABLE_PROFIT_FOREIGN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_NORWEGIAN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_FOREIGN_SDF",
                        "ADDITION_INTEREST_COST",
                        "CORRECTION_PURPOSED_DIVIDEND",
                        "TAXABLE_PROFIT_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "INCOME_SUPPLEMENT_FOR_CONVERSION_DIFFERENCE",
                        "OTHER_INCOME_SUPPLEMENT",
                        "RETURN_OF_INCOME_RELATED_DIVIDENDS",
                        "PROFIT_AND_LOSS_GROUP_CONTRIBUTION",
                        "ACCOUNTING_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "ACCOUNTING_PROFIT_SHARE_NORWEGIAN_SDF",
                        "ACCOUNTING_PROFIT_SHARE_FOREIGN_SDF",
                        "ACCOUNTING_GAIN_NORWEGIAN_SDF",
                        "ACCOUNTING_GAIN_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_NORWEGIAN_SDF",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_NORWEGIAN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "ISSUE_AND_ESTABLISHMENT_COST",
                        "INCOME_DEDUCTION_FROM_ACCOUNTING_CURRENCY_TO_NOK",
                        "OTHER_INCOME_DEDUCTION",
                        "TEMPORARY_DIFFERENCES_TYPE",
                        "OPENING_BALANCE_ACCOUNTABLE_VALUE",
                        "CLOSING_BALANCE_ACCOUNTABLE_VALUE",
                        "OPENING_BALANCE_TAX_VALUE",
                        "CLOSING_BALANCE_TAX_VALUE",
                        "OPENING_BALANCE_DIFFERENCES",
                        "CLOSING_BALANCE_DIFFERENCES",
                        "SHOW_PROFIT_AND_LOSS",
                        "SHOW_ACCOMMODATION_AND_RESTAURANT",
                        "IS_ACCOUNTABLE",
                        "USE_ACCOUNTING_VALUES_IN_INVENTORIES",
                        "USE_ACCOUNTING_VALUES_IN_CUSTOMER_RECEIVABLES",
                        "SHOW_TANGIBLE_FIXED_ASSET",
                        "SHOW_CAR",
                        "SHOW_INVENTORIES",
                        "SHOW_CUSTOMER_RECEIVABLES",
                        "SHOW_CONCERN_RELATION",
                        "OWN_BUSINESS_PROPERTIES",
                        "OWN_ASSET_PAPER",
                        "TRANSFERRED_BY",
                        "TRANSFERRED_DATE",
                        "SET_ACCOUNTANT_REVISED",
                        "IS_TAXABLE",
                        "AUDITING_OBLIGATION",
                        "VALIDATION_ONLY_ON_SUBMIT",
                        "DATE_OF_DETERMINATION",
                        "CONFIRMING_COMPANY_REPRESENTATIVE",
                        "CONTACT_PERSON",
                        "PARENT_COMPANY",
                        "SMALL_ENTERPRISES",
                        "PREPARED_BY_AUTHORIZED_ACCOUNTANT",
                        "SERVICE_ASSISTANCE_USED",
                        "ELECTRONIC_CASE_PROCESSING",
                        "SUBMIT_WITHOUT_BUSINESS_SPECIFICATION",
                        "SHOW_RESULT_AND_BALANCE_PREVIOUS_YEAR",
                        "DATE_START",
                        "DATE_END",
                        "INCLUDE_PREVIOUS_YEAR_IN_RESULT",
                        "DISTRIBUTE_INCOME_MODULE_INDUSTRY",
                        "YEAR_END_BRREG_DOC_ID",
                        "YEAR_END_BRREG_DOC_FETCHER_NAME",
                        "YEAR_END_DOCUMENTATION_ACCOMMODATION_AND_RESTAURANT",
                        "YEAR_END_DOCUMENTATION_PROFIT_AND_LOSS_ACCOUNT",
                        "YEAR_END_DOCUMENTATION_COMMERCIAL_VEHICLE",
                        "YEAR_END_DOCUMENTATION_TANGIBLE_FIXED_ASSETS",
                        "YEAR_END_DOCUMENTATION_INVENTORIES",
                        "YEAR_END_DOCUMENTATION_ACCOUNTS_RECEIVABLE_FROM_CUSTOMERS",
                        "YEAR_END_DOCUMENTATION_PROFIT_LOSS",
                        "YEAR_END_DOCUMENTATION_BALANCE",
                        "YEAR_END_DOCUMENTATION_PERSONAL_INCOME",
                        "YEAR_END_DOCUMENTATION_PERMANENT_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TEMPORARY_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TAX_RELATED_RESULT",
                        "YEAR_END_DOCUMENTATION_GROUP_CONTRIBUTIONS",
                        "YEAR_END_DOCUMENTATION_EQUITY_RECONCILIATION",
                        "YEAR_END_DOCUMENTATION_TAX_RETURN",
                        "YEAR_END_DOCUMENTATION_DIVIDEND",
                        "YEAR_END_DOCUMENTATION_DISPOSITIONS",
                        "YEAR_END_DOCUMENTATION_PROPERTIES",
                        "YEAR_END_DOCUMENTATION_SECURITIES",
                        "YEAR_END_DOCUMENTATION_TAX_CALCULATION",
                        "YEAR_END_DOCUMENTATION_AUDIT_REPORT",
                        "YEAR_END_DOCUMENTATION_ANNUAL_REPORT",
                        "YEAR_END_DOCUMENTATION_CASH_FLOW_STATEMENT",
                        "YEAR_END_DOCUMENTATION_ANNEXES_TO_THE_ANNUAL_ACCOUNTS",
                        "RECEIVER_ORG_NR",
                        "RECEIVER_NAME",
                        "CONCERN_CONNECTION",
                        "VOTING_LIMIT",
                        "DATE_OF_ACQUISITION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "APPLICATION_OF_LOSS_CARRY_FORWARDS",
                        "ACCUMULATED_LOSS_FROM_PREVIOUS_YEARS",
                        "CORRECTIONS_AND_OTHER_CAPITAL",
                        "CORRECTIONS_AND_OTHER_DEBT",
                        "NUMBER_OF_SHARES",
                        "IS_PART_OF_GROUP_COMPANY",
                        "IS_LISTED_ON_THE_STOCK_EXCHANGE",
                        "IS_REORGANIZED_ACROSS_BORDERS",
                        "HAS_RECEIVED_OR_TRANSFERRED_ASSETS",
                        "HEAD_OF_GROUP_NAME",
                        "HEAD_OF_GROUP_COUNTRY_CODE",
                        "HEAD_OF_GROUP_LAST_YEAR_NAME",
                        "HEAD_OF_GROUP_LAST_YEAR_COUNTRY_CODE",
                        "FOREIGN_OWNERSHIP_COMPANY_NAME",
                        "FOREIGN_OWNERSHIP_COMPANY_COUNTRY_CODE",
                        "OWNS_MIN_50_PERCENT_OF_FOREIGN_COMPANY",
                        "HAS_PERMANENT_ESTABLISHMENT_ABROAD",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_NAME",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_COUNTRY_CODE",
                        "HAS_PERFORMANCE_BETWEEN_SHAREHOLDERS_AND_OTHER",
                        "HAS_OUTSTANDING_PAYMENT_CLAIMS_RELATED_TO_ILLEGAL_STATE_AID",
                        "IS_SMALL_OR_MEDIUM_SIZED_BUSINESS",
                        "HAD_FINANCIAL_DIFFICULTIES_LAST_YEAR",
                        "IS_GROUP_COMPANY",
                        "HAS_RECEIVED_OTHER_PUBLIC_SUPPORT",
                        "AID_SCHEME_TONNAGE_TAX_REGIME",
                        "AID_SCHEME_RULES_FOR_ELECTRIC_DELIVERY_TRUCKS",
                        "AID_SCHEME_FOR_LONG_TERM_INVESTMENTS",
                        "AID_SCHEME_EMPLOYMENT_RELATED_OPTIONS_START_UP",
                        "AID_SCHEME_TAX_FUN",
                        "AID_SCHEME_FAVOURABLE_DEPRECIATION_RULES",
                        "AID_SCHEME_REGIONALLY_DIFFERENTIATED_INSURANCE_CONTRIBUTIONS",
                        "AID_SCHEME_FAVOURABLE_DETERMINED_LIST_PRICES_ELECTRIC_VEHICLES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_LEASING_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_BATTERIES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_NEWS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_INDUSTRIAL_SECTOR",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DISTRICT_HEATING",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_TARGET_ZONE",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DATA_CENTRES",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_COMMERCIAL_VESSELS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_ENERGY_PRODUCTS",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_WOOD_INDUSTRY",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_PIGMENT_INDUSTRY",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_MINERAL_OIL",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_GAS",
                        "AID_SCHEME_EXEMPTION_NOX_DUTY",
                        "AID_SCHEME_EXEMPTION_TRANSFER_FEE",
                        "AID_SCHEME_REDUCED_ROAD_TRAFFIC_INSURANCE_TAX",
                        "OTHER_CORRECTIONS",
                        "DEFERRED_TAX_ASSETS_IN_BALANCE",
                        "SHARES_AND_SECURITIES_NAME",
                        "SHARES_AND_SECURITIES_STOCK_TYPE",
                        "SHARES_AND_SECURITIES_VAT_NUMBER",
                        "SHARES_AND_SECURITIES_ISIN",
                        "SHARES_AND_SECURITIES_COUNTRY_CODE",
                        "SHARES_AND_SECURITIES_SHARE_CLASS",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_START_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_END_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_VALUE",
                        "SHARES_AND_SECURITIES_TOTAL_VALUE",
                        "SHARES_AND_SECURITIES_DIVIDEND",
                        "SHARES_AND_SECURITIES_INTEREST_INCOME",
                        "SHARES_AND_SECURITIES_PROFIT_REALISATION",
                        "SHARES_AND_SECURITIES_LOSS_REALISATION",
                        "SHARES_AND_SECURITIES_PROFIT_INTEREST",
                        "SHARES_AND_SECURITIES_LOSS_INTEREST",
                        "SHARES_AND_SECURITIES_EXEMPTION_METHOD",
                        "SHARES_AND_SECURITIES_FINANCIAL_PRODUCT",
                        "REAL_ESTATE_TYPE",
                        "REAL_ESTATE_DESCRIPTION",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "SHARE_OF_ASSET_VALUE",
                        "INTERNAL_PROPERTY_IDENTIFIER",
                        "ASSET_VALUE_FOR_ASSET_SHARE",
                        "VALUE_BEFORE_VALUATION_DISCOUNT_ASSET_SHARE",
                        "TOTAL_AREA",
                        "CALCULATED_RENTAL_VALUE",
                        "REAL_ESTATE_SERG_NO",
                        "REAL_ESTATE_ADDRESS",
                        "REAL_ESTATE_ZIP_CODE",
                        "REAL_ESTATE_POSTAL_PLACE_NAME",
                        "REAL_ESTATE_COUNTRY_CODE",
                        "REAL_ESTATE_MUNICIPALITY_NO",
                        "REAL_ESTATE_MUNICIPALITY_NAME",
                        "REAL_ESTATE_CADASTRAL_UNIT_NO",
                        "REAL_ESTATE_PROPERTY_UNIT_NO",
                        "REAL_ESTATE_LEASEHOLD_NO",
                        "REAL_ESTATE_SECTION_NO",
                        "REAL_ESTATE_OWNERSHIP_SHARE_PERCENTAGE",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE",
                        "REAL_ESTATE_EXPENSES_YEARLY",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY",
                        "REAL_ESTATE_DATE_DOCUMENTED",
                        "REAL_ESTATE_MARKET_VALUE_MANUAL",
                        "REAL_ESTATE_MARKET_VALUE_CALCULATED",
                        "REAL_ESTATE_USE_VALUE_MARKET",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_NAME",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_ORG_NO",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_SHARE_NO",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_SELF_OWNED_OR_COOPERATIVE_DWELLING_CALCULATED_MARKET_VALUE",
                        "REAL_ESTATE_RENTAL_AREA_TOTAL",
                        "REAL_ESTATE_RENTAL_PERIOD_MONTHS",
                        "REAL_ESTATE_RENTAL_INCOME_TOTAL_CALCULATED",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PREV_YEAR",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PRIOR_YEAR_TWO",
                        "REAL_ESTATE_RENTAL_ASSET_VALUE_BASE",
                        "REAL_ESTATE_RENTAL_GROSS_INCOME",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE_MANUAL",
                        "REAL_ESTATE_EXPENSES_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY_MANUAL",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_ROW_ID",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_NO",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_AREA",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_VALUE",
                        "YEARLY_DIVIDEND"
                    ]
                },
                "postValue": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperTaxReturnOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TaxReturnOverview"
                }
            }
        },
        "TaxReturn": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "TaxReturnOverview": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "showConcernRelation": {
                    "type": "boolean",
                    "readOnly": true
                },
                "businessIncome": {
                    "type": "number",
                    "readOnly": true
                },
                "groupContributionReceived": {
                    "type": "number",
                    "readOnly": true
                },
                "groupContributionReceivedGrouping": {
                    "type": "string",
                    "readOnly": true
                },
                "paidGroupContribution": {
                    "type": "number",
                    "readOnly": true
                },
                "paidGroupContributionGrouping": {
                    "type": "string",
                    "readOnly": true
                },
                "obtainedPrivateAgreementAndDebtForgiveness": {
                    "type": "number",
                    "readOnly": true
                },
                "obtainedPrivateAgreementAndDebtForgivenessGrouping": {
                    "type": "string",
                    "readOnly": true
                },
                "taxableProfitForTheYear": {
                    "type": "number",
                    "readOnly": true
                },
                "accumulatedLossFromPreviousYear": {
                    "type": "number",
                    "readOnly": true
                },
                "lossesInBusinessAndRealEstate": {
                    "type": "number",
                    "readOnly": true
                },
                "useOfLossCarryForwards": {
                    "type": "number",
                    "readOnly": true
                },
                "accumulatedLossForNextYear": {
                    "type": "number",
                    "readOnly": true
                },
                "taxValueTangibleFixedAssets": {
                    "type": "number",
                    "readOnly": true
                },
                "taxValueInventories": {
                    "type": "number",
                    "readOnly": true
                },
                "taxValueCustomerReceivables": {
                    "type": "number",
                    "readOnly": true
                },
                "sumGrossAssets": {
                    "type": "number",
                    "readOnly": true
                },
                "totalDebtInAccounts": {
                    "type": "number",
                    "readOnly": true
                },
                "taxToPay": {
                    "type": "number",
                    "readOnly": true
                },
                "sumDebt": {
                    "type": "number",
                    "readOnly": true
                },
                "totalTaxValue": {
                    "type": "number",
                    "readOnly": true
                },
                "valuePerShare": {
                    "type": "number",
                    "readOnly": true
                },
                "totalValueSharesAndSecurities": {
                    "type": "number",
                    "readOnly": true
                },
                "totalValueRealEstate": {
                    "type": "number",
                    "readOnly": true
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenericData"
                    }
                },
                "capitalAndDebt": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TaxReturn"
                    }
                },
                "aidSchemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AidScheme"
                    }
                }
            }
        },
        "DocumentationGenericData": {
            "type": "object",
            "required": [
                "postType",
                "postValue"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "groupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "genericDataType": {
                    "type": "string",
                    "enum": [
                        "MISC",
                        "TRANSPORT",
                        "ACCOMMODATION_AND_RESTAURANT",
                        "PROFIT_AND_LOSS",
                        "CUSTOMER_RECEIVABLE",
                        "INVENTORIES",
                        "TANGIBLE_FIXED_ASSETS",
                        "RECONCILIATION_OF_EQUITY",
                        "PERMANENT_DIFFERENCES",
                        "TEMPORARY_DIFFERENCES",
                        "DOCUMENT_DOWNLOADED",
                        "GROUP_CONTRIBUTIONS",
                        "TAX_RETURN",
                        "TAX_CALCULATIONS",
                        "DOCUMENTATION",
                        "SHARES_AND_SECURITIES",
                        "REAL_ESTATE"
                    ]
                },
                "genericDataSubType": {
                    "type": "string",
                    "enum": [
                        "NONE",
                        "NOT_LICENSED",
                        "FREIGHT_TRANSPORT",
                        "TAXI",
                        "PRODUCT_TYPE_INVENTORY",
                        "CASH_REGISTER_SYSTEM",
                        "PRIVATE_WITHDRAWAL_OF_GOODS",
                        "ENTERTAINMENT",
                        "MULTI_UNIT_BUILDING_UNIT"
                    ]
                },
                "genericDataSubTypeGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "postType": {
                    "type": "string",
                    "enum": [
                        "REGISTRATION_NUMBER",
                        "DESCRIPTION",
                        "VEHICLE_TYPE",
                        "YEAR_OF_INITIAL_REGISTRATION",
                        "LIST_PRICE",
                        "DATE_FROM",
                        "DATE_TO",
                        "LICENCE",
                        "LICENCE_NUMBER",
                        "IS_ELECTRONIC_VEHICLE_LOGBOOK_LOGGED",
                        "NO_OF_KILOMETRES_TOTAL",
                        "OPERATING_EXPENSES",
                        "LEASING_RENT",
                        "IS_COMPANY_VEHICLE_USED_PRIVATE",
                        "NO_OF_KILOMETRES_PRIVATE",
                        "DEPRECIATION_PRIVATE_USE",
                        "REVERSED_VEHICLE_EXPENSES",
                        "FUEL_COST",
                        "MAINTENANCE_COST",
                        "COST_OF_INSURANCE_AND_TAX",
                        "NO_OF_LITER_FUEL",
                        "TAXIMETER_TYPE",
                        "INCOME_PERSONAL_TRANSPORT",
                        "INCOME_GOODS_TRANSPORT",
                        "DRIVING_INCOME_PAYED_IN_CASH",
                        "DRIVING_INCOME_INVOICED_PUBLIC_AGENCIES",
                        "TIP_PAYED_WITH_CARD_OR_INVOICE",
                        "TIP_PAYED_IN_CASH",
                        "NO_OF_KILOMETRES_SCHOOL_CHILDREN",
                        "NO_OF_KILOMETRES_WITH_PASSENGER",
                        "FLOP_TRIP_AMOUNT",
                        "IS_CONNECTED_TO_CENTRAL",
                        "ID_FOR_PROFIT_AND_LOSS_ACCOUNT",
                        "DESCRIPTION_PROFIT_AND_LOSS_ACCOUNT",
                        "MUNICIPALITY_NUMBER",
                        "OPENING_BALANCE",
                        "PROFIT_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "LOSS_SALES_WITHDRAWAL_OTHER_REALIZATIONS",
                        "PROFIT_REALIZATIONS_LIVESTOCK",
                        "VALUE_ACQUIRED_PROFIT_AND_LOSS_ACCOUNT",
                        "VALUE_REALIZED_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION_OR_DEDUCTION_BASIS",
                        "PERCENTAGE_PROFIT_AND_LOSS_ACCOUNT",
                        "ANNUAL_INCOME_RECOGNITION",
                        "ANNUAL_DEDUCTION",
                        "CLOSING_BALANCE",
                        "IS_REGARDING_REALIZATION_SEPARATED_PLOT_AGRICULTURE_OR_FORESTRY",
                        "IS_REGARDING_REALIZATION_WHOLE_AGRICULTURE_OR_FORESTRY_BUSINESS",
                        "ID_FOR_ACCOMMODATION_AND_RESTAURANT",
                        "COVER_CHARGE_SUBJECT_TO_VAT",
                        "COVER_CHARGE_NOT_SUBJECT_TO_VAT",
                        "COVER_CHARGE",
                        "DESCRIPTION_ACCOMMODATION_AND_RESTAURANT",
                        "MUST_BE_CONFIRMED_BY_AUDITOR",
                        "PRODUCT_TYPE",
                        "OPENING_STOCK",
                        "CLOSING_STOCK",
                        "PURCHASE_OF_GOODS",
                        "COST_OF_GOODS_SOLD",
                        "SALES_REVENUE_AND_WITHDRAWALS",
                        "SALES_REVENUE_IN_CASH",
                        "CASH_REGISTER_SYSTEM_YEAR_OF_INITIAL_REGISTRATION",
                        "CASH_REGISTER_SYSTEM_TYPE",
                        "WITHDRAWAL_OF_PRODUCTS_VALUED_AT_TURNOVER",
                        "PRIVATE_WITHDRAWAL_ENTERED_ON_PRIVATE_ACCOUNT",
                        "TOTAL_WITHDRAWAL_PRODUCTS_ENTERED_AS_SALES_REVENUE",
                        "WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "WITHDRAWAL_VALUE_VALUED_AT_MARKET_VALUE",
                        "MARKUP_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "TOTAL_WITHDRAWAL_COST_FOR_ENTERTAINMENT",
                        "OPENING_BALANCE_CREDIT_SALES",
                        "CLOSING_BALANCE_CREDIT_SALES",
                        "OPENING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "CLOSING_BALANCE_WRITE_DOWN_NEW_COMPANY",
                        "OPENING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "CLOSING_BALANCE_RAW_MATERIAL_AND_SEMI_FINISHED_PRODUCTS",
                        "OPENING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "CLOSING_BALANCE_PRODUCT_UNDER_MANUFACTURING",
                        "OPENING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "CLOSING_BALANCE_INVENTORIES_FINISHED_ITEM",
                        "OPENING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "CLOSING_BALANCE_PURCHASED_ITEM_FOR_RESALE",
                        "TANGIBLE_FIXED_ASSETS_TYPE",
                        "OPENING_BALANCE_TANGIBLE_FIXED_ASSETS",
                        "DEPRECIATION_PERCENTAGE",
                        "STRAIGHT_LINE_DEPRECIATION",
                        "PROFIT_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "LOSS_TRANSFERRED_TO_PROFIT_AND_LOSS_ACCOUNT",
                        "CASH_DEPOSITS",
                        "CONTRIBUTIONS_IN_KIND",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_CASH",
                        "CAPITAL_REDUCTION_DISTRIBUTED_SHARED_CAPITAL_OTHER_ASSETS",
                        "DEBT_WAVING",
                        "BUYING_OWN_SHARES",
                        "SELLING_OWN_SHARES",
                        "DEBT_CONVERSION_TO_EQUITY",
                        "POSITIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "NEGATIVE_DIFF_BETWEEN_ALLOCATED_AND_DISTRIBUTED_DIVIDEND",
                        "OTHER_POSITIVE_CHANGE_IN_EQUITY",
                        "OTHER_NEGATIVE_CHANGE_IN_EQUITY",
                        "NONE_DEDUCTIBLE_COST",
                        "POSITIVE_TAX_COST",
                        "INTEREST_EXPENSE_FIXED_TAX",
                        "SHARE_OF_LOSS_FROM_INVESTMENT",
                        "REVERSAL_OF_IMPAIRMENT",
                        "ACCOUNTING_IMPAIRMENT",
                        "ACCOUNTING_LOSS",
                        "ACCOUNTING_DEFICIT_NORWEGIAN_SDF",
                        "ACCOUNTING_DEFICIT_FOREIGN_SDF",
                        "ACCOUNTING_LOSS_NORWEGIAN_SDF",
                        "ACCOUNTING_LOSS_FOREIGN_SDF",
                        "RETURNED_DEBT_INTEREST",
                        "TAXABLE_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "TAXABLE_DIVIDEND_ON_SHARES",
                        "TAXABLE_PART_OF_DIVIDEND_AND_DISTRIBUTION",
                        "SHARE_OF_TAXABLE_PROFIT_NORWEGIAN_SDF",
                        "SHARE_OF_TAXABLE_PROFIT_FOREIGN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_NORWEGIAN_SDF",
                        "TAXABLE_PROFIT_REALIZATION_OF_FOREIGN_SDF",
                        "ADDITION_INTEREST_COST",
                        "CORRECTION_PURPOSED_DIVIDEND",
                        "TAXABLE_PROFIT_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "INCOME_SUPPLEMENT_FOR_CONVERSION_DIFFERENCE",
                        "OTHER_INCOME_SUPPLEMENT",
                        "RETURN_OF_INCOME_RELATED_DIVIDENDS",
                        "PROFIT_AND_LOSS_GROUP_CONTRIBUTION",
                        "ACCOUNTING_PROFIT_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "ACCOUNTING_PROFIT_SHARE_NORWEGIAN_SDF",
                        "ACCOUNTING_PROFIT_SHARE_FOREIGN_SDF",
                        "ACCOUNTING_GAIN_NORWEGIAN_SDF",
                        "ACCOUNTING_GAIN_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_OF_FINANCIAL_INSTRUMENTS",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_NORWEGIAN_SDF",
                        "SHARE_OF_DEDUCTIBLE_DEFICIT_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_NORWEGIAN_SDF",
                        "DEDUCTIBLE_LOSS_ON_REALIZATION_FOREIGN_SDF",
                        "DEDUCTIBLE_LOSS_ON_WITHDRAWAL_NORWEGIAN_TAX_AREA",
                        "ISSUE_AND_ESTABLISHMENT_COST",
                        "INCOME_DEDUCTION_FROM_ACCOUNTING_CURRENCY_TO_NOK",
                        "OTHER_INCOME_DEDUCTION",
                        "TEMPORARY_DIFFERENCES_TYPE",
                        "OPENING_BALANCE_ACCOUNTABLE_VALUE",
                        "CLOSING_BALANCE_ACCOUNTABLE_VALUE",
                        "OPENING_BALANCE_TAX_VALUE",
                        "CLOSING_BALANCE_TAX_VALUE",
                        "OPENING_BALANCE_DIFFERENCES",
                        "CLOSING_BALANCE_DIFFERENCES",
                        "SHOW_PROFIT_AND_LOSS",
                        "SHOW_ACCOMMODATION_AND_RESTAURANT",
                        "IS_ACCOUNTABLE",
                        "USE_ACCOUNTING_VALUES_IN_INVENTORIES",
                        "USE_ACCOUNTING_VALUES_IN_CUSTOMER_RECEIVABLES",
                        "SHOW_TANGIBLE_FIXED_ASSET",
                        "SHOW_CAR",
                        "SHOW_INVENTORIES",
                        "SHOW_CUSTOMER_RECEIVABLES",
                        "SHOW_CONCERN_RELATION",
                        "OWN_BUSINESS_PROPERTIES",
                        "OWN_ASSET_PAPER",
                        "TRANSFERRED_BY",
                        "TRANSFERRED_DATE",
                        "SET_ACCOUNTANT_REVISED",
                        "IS_TAXABLE",
                        "AUDITING_OBLIGATION",
                        "VALIDATION_ONLY_ON_SUBMIT",
                        "DATE_OF_DETERMINATION",
                        "CONFIRMING_COMPANY_REPRESENTATIVE",
                        "CONTACT_PERSON",
                        "PARENT_COMPANY",
                        "SMALL_ENTERPRISES",
                        "PREPARED_BY_AUTHORIZED_ACCOUNTANT",
                        "SERVICE_ASSISTANCE_USED",
                        "ELECTRONIC_CASE_PROCESSING",
                        "SUBMIT_WITHOUT_BUSINESS_SPECIFICATION",
                        "SHOW_RESULT_AND_BALANCE_PREVIOUS_YEAR",
                        "DATE_START",
                        "DATE_END",
                        "INCLUDE_PREVIOUS_YEAR_IN_RESULT",
                        "DISTRIBUTE_INCOME_MODULE_INDUSTRY",
                        "YEAR_END_BRREG_DOC_ID",
                        "YEAR_END_BRREG_DOC_FETCHER_NAME",
                        "YEAR_END_DOCUMENTATION_ACCOMMODATION_AND_RESTAURANT",
                        "YEAR_END_DOCUMENTATION_PROFIT_AND_LOSS_ACCOUNT",
                        "YEAR_END_DOCUMENTATION_COMMERCIAL_VEHICLE",
                        "YEAR_END_DOCUMENTATION_TANGIBLE_FIXED_ASSETS",
                        "YEAR_END_DOCUMENTATION_INVENTORIES",
                        "YEAR_END_DOCUMENTATION_ACCOUNTS_RECEIVABLE_FROM_CUSTOMERS",
                        "YEAR_END_DOCUMENTATION_PROFIT_LOSS",
                        "YEAR_END_DOCUMENTATION_BALANCE",
                        "YEAR_END_DOCUMENTATION_PERSONAL_INCOME",
                        "YEAR_END_DOCUMENTATION_PERMANENT_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TEMPORARY_DIFFERENCES",
                        "YEAR_END_DOCUMENTATION_TAX_RELATED_RESULT",
                        "YEAR_END_DOCUMENTATION_GROUP_CONTRIBUTIONS",
                        "YEAR_END_DOCUMENTATION_EQUITY_RECONCILIATION",
                        "YEAR_END_DOCUMENTATION_TAX_RETURN",
                        "YEAR_END_DOCUMENTATION_DIVIDEND",
                        "YEAR_END_DOCUMENTATION_DISPOSITIONS",
                        "YEAR_END_DOCUMENTATION_PROPERTIES",
                        "YEAR_END_DOCUMENTATION_SECURITIES",
                        "YEAR_END_DOCUMENTATION_TAX_CALCULATION",
                        "YEAR_END_DOCUMENTATION_AUDIT_REPORT",
                        "YEAR_END_DOCUMENTATION_ANNUAL_REPORT",
                        "YEAR_END_DOCUMENTATION_CASH_FLOW_STATEMENT",
                        "YEAR_END_DOCUMENTATION_ANNEXES_TO_THE_ANNUAL_ACCOUNTS",
                        "RECEIVER_ORG_NR",
                        "RECEIVER_NAME",
                        "CONCERN_CONNECTION",
                        "VOTING_LIMIT",
                        "DATE_OF_ACQUISITION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "RECEIVED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITH_TAX_AFFECTION",
                        "SUBMITTED_GROUP_CONTRIBUTIONS_WITHOUT_TAX_AFFECTION",
                        "APPLICATION_OF_LOSS_CARRY_FORWARDS",
                        "ACCUMULATED_LOSS_FROM_PREVIOUS_YEARS",
                        "CORRECTIONS_AND_OTHER_CAPITAL",
                        "CORRECTIONS_AND_OTHER_DEBT",
                        "NUMBER_OF_SHARES",
                        "IS_PART_OF_GROUP_COMPANY",
                        "IS_LISTED_ON_THE_STOCK_EXCHANGE",
                        "IS_REORGANIZED_ACROSS_BORDERS",
                        "HAS_RECEIVED_OR_TRANSFERRED_ASSETS",
                        "HEAD_OF_GROUP_NAME",
                        "HEAD_OF_GROUP_COUNTRY_CODE",
                        "HEAD_OF_GROUP_LAST_YEAR_NAME",
                        "HEAD_OF_GROUP_LAST_YEAR_COUNTRY_CODE",
                        "FOREIGN_OWNERSHIP_COMPANY_NAME",
                        "FOREIGN_OWNERSHIP_COMPANY_COUNTRY_CODE",
                        "OWNS_MIN_50_PERCENT_OF_FOREIGN_COMPANY",
                        "HAS_PERMANENT_ESTABLISHMENT_ABROAD",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_NAME",
                        "COUNTRY_FOR_COUNTRY_REPORTABLE_ENTERPRISE_COUNTRY_CODE",
                        "HAS_PERFORMANCE_BETWEEN_SHAREHOLDERS_AND_OTHER",
                        "HAS_OUTSTANDING_PAYMENT_CLAIMS_RELATED_TO_ILLEGAL_STATE_AID",
                        "IS_SMALL_OR_MEDIUM_SIZED_BUSINESS",
                        "HAD_FINANCIAL_DIFFICULTIES_LAST_YEAR",
                        "IS_GROUP_COMPANY",
                        "HAS_RECEIVED_OTHER_PUBLIC_SUPPORT",
                        "AID_SCHEME_TONNAGE_TAX_REGIME",
                        "AID_SCHEME_RULES_FOR_ELECTRIC_DELIVERY_TRUCKS",
                        "AID_SCHEME_FOR_LONG_TERM_INVESTMENTS",
                        "AID_SCHEME_EMPLOYMENT_RELATED_OPTIONS_START_UP",
                        "AID_SCHEME_TAX_FUN",
                        "AID_SCHEME_FAVOURABLE_DEPRECIATION_RULES",
                        "AID_SCHEME_REGIONALLY_DIFFERENTIATED_INSURANCE_CONTRIBUTIONS",
                        "AID_SCHEME_FAVOURABLE_DETERMINED_LIST_PRICES_ELECTRIC_VEHICLES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_LEASING_ELECTRIC_CARS",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_BATTERIES",
                        "AID_SCHEME_VAT_EXEMPTION_TURNOVER_ELECTRIC_NEWS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_INDUSTRIAL_SECTOR",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DISTRICT_HEATING",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_TARGET_ZONE",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_DATA_CENTRES",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_COMMERCIAL_VESSELS",
                        "AID_SCHEME_REDUCED_ELECTRICITY_TAX_ENERGY_PRODUCTS",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_WOOD_INDUSTRY",
                        "AID_SCHEME_REDUCED_BASIC_TAX_MINERAL_OIL_PIGMENT_INDUSTRY",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_MINERAL_OIL",
                        "AID_SCHEME_EXEMPTION_CO2_TAX_GAS",
                        "AID_SCHEME_EXEMPTION_NOX_DUTY",
                        "AID_SCHEME_EXEMPTION_TRANSFER_FEE",
                        "AID_SCHEME_REDUCED_ROAD_TRAFFIC_INSURANCE_TAX",
                        "OTHER_CORRECTIONS",
                        "DEFERRED_TAX_ASSETS_IN_BALANCE",
                        "SHARES_AND_SECURITIES_NAME",
                        "SHARES_AND_SECURITIES_STOCK_TYPE",
                        "SHARES_AND_SECURITIES_VAT_NUMBER",
                        "SHARES_AND_SECURITIES_ISIN",
                        "SHARES_AND_SECURITIES_COUNTRY_CODE",
                        "SHARES_AND_SECURITIES_SHARE_CLASS",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_START_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_SHARES_BY_THE_END_OF_THE_YEAR",
                        "SHARES_AND_SECURITIES_VALUE",
                        "SHARES_AND_SECURITIES_TOTAL_VALUE",
                        "SHARES_AND_SECURITIES_DIVIDEND",
                        "SHARES_AND_SECURITIES_INTEREST_INCOME",
                        "SHARES_AND_SECURITIES_PROFIT_REALISATION",
                        "SHARES_AND_SECURITIES_LOSS_REALISATION",
                        "SHARES_AND_SECURITIES_PROFIT_INTEREST",
                        "SHARES_AND_SECURITIES_LOSS_INTEREST",
                        "SHARES_AND_SECURITIES_EXEMPTION_METHOD",
                        "SHARES_AND_SECURITIES_FINANCIAL_PRODUCT",
                        "REAL_ESTATE_TYPE",
                        "REAL_ESTATE_DESCRIPTION",
                        "COMMERCIAL_PROPERTY_TYPE",
                        "SHARE_OF_ASSET_VALUE",
                        "INTERNAL_PROPERTY_IDENTIFIER",
                        "ASSET_VALUE_FOR_ASSET_SHARE",
                        "VALUE_BEFORE_VALUATION_DISCOUNT_ASSET_SHARE",
                        "TOTAL_AREA",
                        "CALCULATED_RENTAL_VALUE",
                        "REAL_ESTATE_SERG_NO",
                        "REAL_ESTATE_ADDRESS",
                        "REAL_ESTATE_ZIP_CODE",
                        "REAL_ESTATE_POSTAL_PLACE_NAME",
                        "REAL_ESTATE_COUNTRY_CODE",
                        "REAL_ESTATE_MUNICIPALITY_NO",
                        "REAL_ESTATE_MUNICIPALITY_NAME",
                        "REAL_ESTATE_CADASTRAL_UNIT_NO",
                        "REAL_ESTATE_PROPERTY_UNIT_NO",
                        "REAL_ESTATE_LEASEHOLD_NO",
                        "REAL_ESTATE_SECTION_NO",
                        "REAL_ESTATE_OWNERSHIP_SHARE_PERCENTAGE",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE",
                        "REAL_ESTATE_EXPENSES_YEARLY",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY",
                        "REAL_ESTATE_DATE_DOCUMENTED",
                        "REAL_ESTATE_MARKET_VALUE_MANUAL",
                        "REAL_ESTATE_MARKET_VALUE_CALCULATED",
                        "REAL_ESTATE_USE_VALUE_MARKET",
                        "REAL_ESTATE_DWELLING_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_TYPE",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_NAME",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_ORG_NO",
                        "REAL_ESTATE_ASSOCIATION_OR_COOPERATIVE_DWELLING_OWNERSHIP_SHARE_NO",
                        "REAL_ESTATE_PRIMARY_SECONDARY_DWELLING_TYPE",
                        "REAL_ESTATE_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_SELF_OWNED_OR_COOPERATIVE_DWELLING_CALCULATED_MARKET_VALUE",
                        "REAL_ESTATE_RENTAL_AREA_TOTAL",
                        "REAL_ESTATE_RENTAL_PERIOD_MONTHS",
                        "REAL_ESTATE_RENTAL_INCOME_TOTAL_CALCULATED",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PREV_YEAR",
                        "REAL_ESTATE_RENTAL_GROSS_ANNUAL_PRIOR_YEAR_TWO",
                        "REAL_ESTATE_RENTAL_ASSET_VALUE_BASE",
                        "REAL_ESTATE_RENTAL_GROSS_INCOME",
                        "REAL_ESTATE_PREV_YEAR_ASSET_VALUE_MANUAL",
                        "REAL_ESTATE_EXPENSES_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_FARM_HOUSE_YEARLY_MANUAL",
                        "REAL_ESTATE_EXPENSES_OTHER_PROPERTY_YEARLY_MANUAL",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_ROW_ID",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_NO",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_AREA",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_CONSTRUCTION_YEAR",
                        "REAL_ESTATE_MULTI_UNIT_BUILDING_UNIT_VALUE",
                        "YEARLY_DIVIDEND"
                    ]
                },
                "postValue": {
                    "type": "string"
                },
                "documentName": {
                    "type": "string"
                },
                "uploaderName": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperListDocumentationGenericData": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DocumentationGenericData"
                    }
                }
            }
        },
        "RealEstate": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "genericDataOverviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GenericDataOverview"
                    }
                }
            }
        },
        "ResponseWrapperRealEstate": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/RealEstate"
                }
            }
        },
        "ResponseWrapperGenericData": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/GenericData"
                }
            }
        },
        "GenericDataRate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "rateType": {
                    "type": "string",
                    "readOnly": true
                },
                "rate": {
                    "type": "number",
                    "readOnly": true
                },
                "ratePreviousYear": {
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "ListResponseGenericDataRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/GenericDataRate"
                    }
                }
            }
        },
        "IncomeStatement": {
            "type": "object",
            "properties": {
                "businessIncome": {
                    "type": "number",
                    "readOnly": true
                },
                "taxableBusinessIncome": {
                    "type": "number",
                    "readOnly": true
                },
                "totalAddition": {
                    "type": "number",
                    "readOnly": true
                },
                "totalDeduction": {
                    "type": "number",
                    "readOnly": true
                },
                "changes": {
                    "type": "number",
                    "readOnly": true
                },
                "receivedGroupContribution": {
                    "type": "number",
                    "readOnly": true
                },
                "payedGroupContribution": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperIncomeStatement": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/IncomeStatement"
                }
            }
        },
        "ListResponseMapping": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Mapping"
                    }
                }
            }
        },
        "Mapping": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "type": {
                    "type": "string",
                    "readOnly": true
                },
                "post": {
                    "type": "string",
                    "readOnly": true
                },
                "subPost": {
                    "type": "string",
                    "readOnly": true
                },
                "groupNumber": {
                    "type": "string",
                    "readOnly": true
                },
                "negate": {
                    "type": "boolean",
                    "readOnly": true
                },
                "excludeFromTaxReturn": {
                    "type": "boolean",
                    "readOnly": true
                },
                "groupingEnk": {
                    "type": "string",
                    "readOnly": true
                },
                "groupingAs": {
                    "type": "string",
                    "readOnly": true
                },
                "groupingAns": {
                    "type": "string",
                    "readOnly": true
                },
                "negatePreviousYear": {
                    "type": "boolean"
                },
                "excludeFromTaxReturnPreviousYear": {
                    "type": "boolean"
                },
                "groupingEnkPreviousYear": {
                    "type": "string"
                },
                "groupingAsPreviousYear": {
                    "type": "string"
                },
                "groupingAnsPreviousYear": {
                    "type": "string"
                }
            }
        },
        "ResponseWrapperYearEndReportNote": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/YearEndReportNote"
                }
            }
        },
        "YearEndReportNote": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string"
                },
                "isMandatory": {
                    "type": "boolean"
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "ExtraordinaryIncomeAndCost": {
            "type": "object",
            "properties": {
                "note": {
                    "readOnly": true,
                    "$ref": "#/definitions/YearEndReportNote"
                },
                "notePostType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ID_FOR_NOTE",
                        "IS_CHECKED",
                        "UPDATED_BY",
                        "UPDATED_DATE",
                        "ACCOUNTS",
                        "ACCOUNTING_PRINCIPLES_FREE_TEXT",
                        "ACCOUNTING_PRINCIPLES_USE_DEFAULT_TEXT",
                        "STILL_IN_BUSINESS",
                        "STILL_IN_BUSINESS_INFO",
                        "NUMBER_OF_MAN_YEARS",
                        "OPENING_BALANCE_SALARY",
                        "CLOSING_BALANCE_SALARY",
                        "OPENING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "CLOSING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "OPENING_BALANCE_PENSION_COST",
                        "CLOSING_BALANCE_PENSION_COST",
                        "OPENING_BALANCE_OTHER_BENEFITS",
                        "CLOSING_BALANCE_OTHER_BENEFITS",
                        "ABOUT_MAN_YEARS_AND_SALARY",
                        "EXTRAORDINARY_INCOME_AND_COST",
                        "EXTRAORDINARY_INCOME_AND_COST_DESCRIPTION",
                        "EXTRAORDINARY_INCOME_AND_COST_AMOUNT",
                        "EXTRAORDINARY_INCOME_AND_COST_ADDITIONAL_INFORMATION",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_ACQUISITION_COST",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_CAPITALISED_VALUE",
                        "FIXED_ASSETS_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ECONOMIC_LIFE",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ACQUISITION_COST",
                        "FIXED_ASSETS_GOODWILL",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE",
                        "FIXED_ASSETS_ADDITIONAL_INFORMATION",
                        "GROUP",
                        "GROUP_INVESTMENTS",
                        "GROUP_OPENING_BALANCE",
                        "GROUP_REVENUE_RECOGNIZED_AS_INCOME",
                        "GROUP_OTHER_CHANGES",
                        "GROUP_CLOSING_BALANCE",
                        "GROUP_ADDED_VALUE",
                        "GROUP_DEPRECIATION_OF_ADDED_VALUES",
                        "GROUP_GOODWILL",
                        "GROUP_DEPRECIATION_OF_GOODWILL",
                        "GROUP_TOTAL_ACQUISITION_COST",
                        "GROUP_TOTAL_CAPITALIZED_EQUITY",
                        "GROUP_IS_SUBSIDIARY",
                        "GROUP_NAME_OF_PARENT_COMPANY",
                        "GROUP_BUSINESS_OFFICE_PARENT_COMPANY",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION_JUSTIFICATION",
                        "GROUP_TRANSACTIONS_WITH_SUBSIDIARIES",
                        "GROUP_INTERNAL_GAIN_TRANSACTIONS",
                        "GROUP_RECEIVABLES_AND_LIABILITIES",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_MORTGAGED_ASSETS",
                        "OPENING_BALANCE_OTHER_COLLATERAL",
                        "OPENING_BALANCE_GUANRANTEES",
                        "GROUP_RECEIVABLES_AND_LIABILITIES_ADDITIONAL_INFO",
                        "RECEIVABLES_FALL_DUE_LATER_THAN_ONE_YEAR",
                        "RECEIVABLES_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ASSET",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_REAL_VALUE",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_VALUE_ADJUSTMENT",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_DESCRIPTION",
                        "HOLDING_OWN_SHARES",
                        "HOLDING_OWN_SHARES_NUMBER_OF_SHARES",
                        "HOLDING_OWN_SHARES_NOMINAL_VALUE_OF_SHARES",
                        "HOLDING_OWN_SHARES_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_ACQUISITIONS_REMUNERATION",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_REMUNERATION",
                        "OWN_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "OWN_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_DISPOSAL_REMUNERATION",
                        "PARENT_COMPANY_SHARES_DISPOSAL_REMUNERATION",
                        "OWN_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "HOLDING_OWN_SHARES_THIS_YEARS_PAYOUT",
                        "HOLDING_OWN_SHARES_PROVISION_FOR_THE_YEAR",
                        "HOLDING_OWN_SHARES_PROVISIONS",
                        "HOLDING_OWN_SHARES_ADDITIONAL_INFORMATION",
                        "DEBT_DUE_FOR_PAYMENT",
                        "DEBT_SECURED_BY_MORTGAGE",
                        "DEBT_CAPITALISED_VALUE",
                        "DEBT_TOTAL_NON_RECOGNIZED_WARRANTY_OBLIGATIONS",
                        "DEBT_WARRANTY_OBLIGATIONS",
                        "DEBT_ADDITIONAL_INFORMATION",
                        "LOAN_AND_PROVISION_OF_SECURITY_IS_GRANTED",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_ADDITIONAL_INFORMATION",
                        "FREE_NOTE_FREE_TEXT"
                    ]
                },
                "noteGroupType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "EXTRAORDINARY_INCOME_GROUP",
                        "EXTRAORDINARY_COST_GROUP",
                        "GROUP_GROUP",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_GROUP"
                    ]
                },
                "noteSubTypeGroupId": {
                    "type": "number",
                    "readOnly": true
                },
                "description": {
                    "type": "number",
                    "readOnly": true
                },
                "amount": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "FinacialInstrumentAsset": {
            "type": "object",
            "properties": {
                "note": {
                    "readOnly": true,
                    "$ref": "#/definitions/YearEndReportNote"
                },
                "notePostType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ID_FOR_NOTE",
                        "IS_CHECKED",
                        "UPDATED_BY",
                        "UPDATED_DATE",
                        "ACCOUNTS",
                        "ACCOUNTING_PRINCIPLES_FREE_TEXT",
                        "ACCOUNTING_PRINCIPLES_USE_DEFAULT_TEXT",
                        "STILL_IN_BUSINESS",
                        "STILL_IN_BUSINESS_INFO",
                        "NUMBER_OF_MAN_YEARS",
                        "OPENING_BALANCE_SALARY",
                        "CLOSING_BALANCE_SALARY",
                        "OPENING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "CLOSING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "OPENING_BALANCE_PENSION_COST",
                        "CLOSING_BALANCE_PENSION_COST",
                        "OPENING_BALANCE_OTHER_BENEFITS",
                        "CLOSING_BALANCE_OTHER_BENEFITS",
                        "ABOUT_MAN_YEARS_AND_SALARY",
                        "EXTRAORDINARY_INCOME_AND_COST",
                        "EXTRAORDINARY_INCOME_AND_COST_DESCRIPTION",
                        "EXTRAORDINARY_INCOME_AND_COST_AMOUNT",
                        "EXTRAORDINARY_INCOME_AND_COST_ADDITIONAL_INFORMATION",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_ACQUISITION_COST",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_CAPITALISED_VALUE",
                        "FIXED_ASSETS_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ECONOMIC_LIFE",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ACQUISITION_COST",
                        "FIXED_ASSETS_GOODWILL",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE",
                        "FIXED_ASSETS_ADDITIONAL_INFORMATION",
                        "GROUP",
                        "GROUP_INVESTMENTS",
                        "GROUP_OPENING_BALANCE",
                        "GROUP_REVENUE_RECOGNIZED_AS_INCOME",
                        "GROUP_OTHER_CHANGES",
                        "GROUP_CLOSING_BALANCE",
                        "GROUP_ADDED_VALUE",
                        "GROUP_DEPRECIATION_OF_ADDED_VALUES",
                        "GROUP_GOODWILL",
                        "GROUP_DEPRECIATION_OF_GOODWILL",
                        "GROUP_TOTAL_ACQUISITION_COST",
                        "GROUP_TOTAL_CAPITALIZED_EQUITY",
                        "GROUP_IS_SUBSIDIARY",
                        "GROUP_NAME_OF_PARENT_COMPANY",
                        "GROUP_BUSINESS_OFFICE_PARENT_COMPANY",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION_JUSTIFICATION",
                        "GROUP_TRANSACTIONS_WITH_SUBSIDIARIES",
                        "GROUP_INTERNAL_GAIN_TRANSACTIONS",
                        "GROUP_RECEIVABLES_AND_LIABILITIES",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_MORTGAGED_ASSETS",
                        "OPENING_BALANCE_OTHER_COLLATERAL",
                        "OPENING_BALANCE_GUANRANTEES",
                        "GROUP_RECEIVABLES_AND_LIABILITIES_ADDITIONAL_INFO",
                        "RECEIVABLES_FALL_DUE_LATER_THAN_ONE_YEAR",
                        "RECEIVABLES_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ASSET",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_REAL_VALUE",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_VALUE_ADJUSTMENT",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_DESCRIPTION",
                        "HOLDING_OWN_SHARES",
                        "HOLDING_OWN_SHARES_NUMBER_OF_SHARES",
                        "HOLDING_OWN_SHARES_NOMINAL_VALUE_OF_SHARES",
                        "HOLDING_OWN_SHARES_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_ACQUISITIONS_REMUNERATION",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_REMUNERATION",
                        "OWN_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "OWN_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_DISPOSAL_REMUNERATION",
                        "PARENT_COMPANY_SHARES_DISPOSAL_REMUNERATION",
                        "OWN_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "HOLDING_OWN_SHARES_THIS_YEARS_PAYOUT",
                        "HOLDING_OWN_SHARES_PROVISION_FOR_THE_YEAR",
                        "HOLDING_OWN_SHARES_PROVISIONS",
                        "HOLDING_OWN_SHARES_ADDITIONAL_INFORMATION",
                        "DEBT_DUE_FOR_PAYMENT",
                        "DEBT_SECURED_BY_MORTGAGE",
                        "DEBT_CAPITALISED_VALUE",
                        "DEBT_TOTAL_NON_RECOGNIZED_WARRANTY_OBLIGATIONS",
                        "DEBT_WARRANTY_OBLIGATIONS",
                        "DEBT_ADDITIONAL_INFORMATION",
                        "LOAN_AND_PROVISION_OF_SECURITY_IS_GRANTED",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_ADDITIONAL_INFORMATION",
                        "FREE_NOTE_FREE_TEXT"
                    ]
                },
                "noteGroupType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "EXTRAORDINARY_INCOME_GROUP",
                        "EXTRAORDINARY_COST_GROUP",
                        "GROUP_GROUP",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_GROUP"
                    ]
                },
                "noteSubTypeGroupId": {
                    "type": "number",
                    "readOnly": true
                },
                "asset": {
                    "type": "number",
                    "readOnly": true
                },
                "realValue": {
                    "type": "number",
                    "readOnly": true
                },
                "valueAdjustment": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "GroupInvestment": {
            "type": "object",
            "properties": {
                "note": {
                    "readOnly": true,
                    "$ref": "#/definitions/YearEndReportNote"
                },
                "notePostType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ID_FOR_NOTE",
                        "IS_CHECKED",
                        "UPDATED_BY",
                        "UPDATED_DATE",
                        "ACCOUNTS",
                        "ACCOUNTING_PRINCIPLES_FREE_TEXT",
                        "ACCOUNTING_PRINCIPLES_USE_DEFAULT_TEXT",
                        "STILL_IN_BUSINESS",
                        "STILL_IN_BUSINESS_INFO",
                        "NUMBER_OF_MAN_YEARS",
                        "OPENING_BALANCE_SALARY",
                        "CLOSING_BALANCE_SALARY",
                        "OPENING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "CLOSING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "OPENING_BALANCE_PENSION_COST",
                        "CLOSING_BALANCE_PENSION_COST",
                        "OPENING_BALANCE_OTHER_BENEFITS",
                        "CLOSING_BALANCE_OTHER_BENEFITS",
                        "ABOUT_MAN_YEARS_AND_SALARY",
                        "EXTRAORDINARY_INCOME_AND_COST",
                        "EXTRAORDINARY_INCOME_AND_COST_DESCRIPTION",
                        "EXTRAORDINARY_INCOME_AND_COST_AMOUNT",
                        "EXTRAORDINARY_INCOME_AND_COST_ADDITIONAL_INFORMATION",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_ACQUISITION_COST",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_CAPITALISED_VALUE",
                        "FIXED_ASSETS_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ECONOMIC_LIFE",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ACQUISITION_COST",
                        "FIXED_ASSETS_GOODWILL",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE",
                        "FIXED_ASSETS_ADDITIONAL_INFORMATION",
                        "GROUP",
                        "GROUP_INVESTMENTS",
                        "GROUP_OPENING_BALANCE",
                        "GROUP_REVENUE_RECOGNIZED_AS_INCOME",
                        "GROUP_OTHER_CHANGES",
                        "GROUP_CLOSING_BALANCE",
                        "GROUP_ADDED_VALUE",
                        "GROUP_DEPRECIATION_OF_ADDED_VALUES",
                        "GROUP_GOODWILL",
                        "GROUP_DEPRECIATION_OF_GOODWILL",
                        "GROUP_TOTAL_ACQUISITION_COST",
                        "GROUP_TOTAL_CAPITALIZED_EQUITY",
                        "GROUP_IS_SUBSIDIARY",
                        "GROUP_NAME_OF_PARENT_COMPANY",
                        "GROUP_BUSINESS_OFFICE_PARENT_COMPANY",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION_JUSTIFICATION",
                        "GROUP_TRANSACTIONS_WITH_SUBSIDIARIES",
                        "GROUP_INTERNAL_GAIN_TRANSACTIONS",
                        "GROUP_RECEIVABLES_AND_LIABILITIES",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_MORTGAGED_ASSETS",
                        "OPENING_BALANCE_OTHER_COLLATERAL",
                        "OPENING_BALANCE_GUANRANTEES",
                        "GROUP_RECEIVABLES_AND_LIABILITIES_ADDITIONAL_INFO",
                        "RECEIVABLES_FALL_DUE_LATER_THAN_ONE_YEAR",
                        "RECEIVABLES_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ASSET",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_REAL_VALUE",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_VALUE_ADJUSTMENT",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_DESCRIPTION",
                        "HOLDING_OWN_SHARES",
                        "HOLDING_OWN_SHARES_NUMBER_OF_SHARES",
                        "HOLDING_OWN_SHARES_NOMINAL_VALUE_OF_SHARES",
                        "HOLDING_OWN_SHARES_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_ACQUISITIONS_REMUNERATION",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_REMUNERATION",
                        "OWN_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "OWN_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_DISPOSAL_REMUNERATION",
                        "PARENT_COMPANY_SHARES_DISPOSAL_REMUNERATION",
                        "OWN_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "HOLDING_OWN_SHARES_THIS_YEARS_PAYOUT",
                        "HOLDING_OWN_SHARES_PROVISION_FOR_THE_YEAR",
                        "HOLDING_OWN_SHARES_PROVISIONS",
                        "HOLDING_OWN_SHARES_ADDITIONAL_INFORMATION",
                        "DEBT_DUE_FOR_PAYMENT",
                        "DEBT_SECURED_BY_MORTGAGE",
                        "DEBT_CAPITALISED_VALUE",
                        "DEBT_TOTAL_NON_RECOGNIZED_WARRANTY_OBLIGATIONS",
                        "DEBT_WARRANTY_OBLIGATIONS",
                        "DEBT_ADDITIONAL_INFORMATION",
                        "LOAN_AND_PROVISION_OF_SECURITY_IS_GRANTED",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_ADDITIONAL_INFORMATION",
                        "FREE_NOTE_FREE_TEXT"
                    ]
                },
                "noteGroupType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "EXTRAORDINARY_INCOME_GROUP",
                        "EXTRAORDINARY_COST_GROUP",
                        "GROUP_GROUP",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_GROUP"
                    ]
                },
                "noteSubTypeGroupId": {
                    "type": "number",
                    "readOnly": true
                },
                "investment": {
                    "type": "number",
                    "readOnly": true
                },
                "openingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "revenueRecognizedAsIncome": {
                    "type": "number",
                    "readOnly": true
                },
                "otherChanges": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "NoteContainer": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "readOnly": true,
                    "$ref": "#/definitions/YearEndReport"
                },
                "note": {
                    "readOnly": true,
                    "$ref": "#/definitions/YearEndReportNote"
                },
                "noteNumber": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/YearEndReportNoteData"
                    }
                },
                "closingSumSalary": {
                    "type": "number",
                    "readOnly": true
                },
                "openingSumSalary": {
                    "type": "number",
                    "readOnly": true
                },
                "extraordinaryIncomePosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtraordinaryIncomeAndCost"
                    }
                },
                "extraordinaryCostPosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ExtraordinaryIncomeAndCost"
                    }
                },
                "sumExtraordinaryIncome": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "sumExtraordinaryCost": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "acquisitionCostTangibleFixedAssets": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "acquisitionCostIntangibleAssets": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "capitalisedValueTangibleFixedAssets": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "capitalisedValueIntangibleAssets": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "investmentsPosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupInvestment"
                    }
                },
                "assetPosts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FinacialInstrumentAsset"
                    }
                },
                "sumRealValue": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "sumValueAdjustment": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "noteTextLibrary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NoteTextLibrary"
                    }
                }
            }
        },
        "NoteTextLibrary": {
            "type": "object",
            "properties": {
                "note": {
                    "readOnly": true,
                    "$ref": "#/definitions/YearEndReportNote"
                },
                "notePostType": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "ID_FOR_NOTE",
                        "IS_CHECKED",
                        "UPDATED_BY",
                        "UPDATED_DATE",
                        "ACCOUNTS",
                        "ACCOUNTING_PRINCIPLES_FREE_TEXT",
                        "ACCOUNTING_PRINCIPLES_USE_DEFAULT_TEXT",
                        "STILL_IN_BUSINESS",
                        "STILL_IN_BUSINESS_INFO",
                        "NUMBER_OF_MAN_YEARS",
                        "OPENING_BALANCE_SALARY",
                        "CLOSING_BALANCE_SALARY",
                        "OPENING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "CLOSING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "OPENING_BALANCE_PENSION_COST",
                        "CLOSING_BALANCE_PENSION_COST",
                        "OPENING_BALANCE_OTHER_BENEFITS",
                        "CLOSING_BALANCE_OTHER_BENEFITS",
                        "ABOUT_MAN_YEARS_AND_SALARY",
                        "EXTRAORDINARY_INCOME_AND_COST",
                        "EXTRAORDINARY_INCOME_AND_COST_DESCRIPTION",
                        "EXTRAORDINARY_INCOME_AND_COST_AMOUNT",
                        "EXTRAORDINARY_INCOME_AND_COST_ADDITIONAL_INFORMATION",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_ACQUISITION_COST",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_CAPITALISED_VALUE",
                        "FIXED_ASSETS_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ECONOMIC_LIFE",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ACQUISITION_COST",
                        "FIXED_ASSETS_GOODWILL",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE",
                        "FIXED_ASSETS_ADDITIONAL_INFORMATION",
                        "GROUP",
                        "GROUP_INVESTMENTS",
                        "GROUP_OPENING_BALANCE",
                        "GROUP_REVENUE_RECOGNIZED_AS_INCOME",
                        "GROUP_OTHER_CHANGES",
                        "GROUP_CLOSING_BALANCE",
                        "GROUP_ADDED_VALUE",
                        "GROUP_DEPRECIATION_OF_ADDED_VALUES",
                        "GROUP_GOODWILL",
                        "GROUP_DEPRECIATION_OF_GOODWILL",
                        "GROUP_TOTAL_ACQUISITION_COST",
                        "GROUP_TOTAL_CAPITALIZED_EQUITY",
                        "GROUP_IS_SUBSIDIARY",
                        "GROUP_NAME_OF_PARENT_COMPANY",
                        "GROUP_BUSINESS_OFFICE_PARENT_COMPANY",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION_JUSTIFICATION",
                        "GROUP_TRANSACTIONS_WITH_SUBSIDIARIES",
                        "GROUP_INTERNAL_GAIN_TRANSACTIONS",
                        "GROUP_RECEIVABLES_AND_LIABILITIES",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_MORTGAGED_ASSETS",
                        "OPENING_BALANCE_OTHER_COLLATERAL",
                        "OPENING_BALANCE_GUANRANTEES",
                        "GROUP_RECEIVABLES_AND_LIABILITIES_ADDITIONAL_INFO",
                        "RECEIVABLES_FALL_DUE_LATER_THAN_ONE_YEAR",
                        "RECEIVABLES_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ASSET",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_REAL_VALUE",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_VALUE_ADJUSTMENT",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_DESCRIPTION",
                        "HOLDING_OWN_SHARES",
                        "HOLDING_OWN_SHARES_NUMBER_OF_SHARES",
                        "HOLDING_OWN_SHARES_NOMINAL_VALUE_OF_SHARES",
                        "HOLDING_OWN_SHARES_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_ACQUISITIONS_REMUNERATION",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_REMUNERATION",
                        "OWN_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "OWN_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_DISPOSAL_REMUNERATION",
                        "PARENT_COMPANY_SHARES_DISPOSAL_REMUNERATION",
                        "OWN_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "HOLDING_OWN_SHARES_THIS_YEARS_PAYOUT",
                        "HOLDING_OWN_SHARES_PROVISION_FOR_THE_YEAR",
                        "HOLDING_OWN_SHARES_PROVISIONS",
                        "HOLDING_OWN_SHARES_ADDITIONAL_INFORMATION",
                        "DEBT_DUE_FOR_PAYMENT",
                        "DEBT_SECURED_BY_MORTGAGE",
                        "DEBT_CAPITALISED_VALUE",
                        "DEBT_TOTAL_NON_RECOGNIZED_WARRANTY_OBLIGATIONS",
                        "DEBT_WARRANTY_OBLIGATIONS",
                        "DEBT_ADDITIONAL_INFORMATION",
                        "LOAN_AND_PROVISION_OF_SECURITY_IS_GRANTED",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_ADDITIONAL_INFORMATION",
                        "FREE_NOTE_FREE_TEXT"
                    ]
                },
                "notePostName": {
                    "type": "string",
                    "readOnly": true
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/YearEndReportNoteData"
                    }
                }
            }
        },
        "ResponseWrapperNoteContainer": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/NoteContainer"
                }
            }
        },
        "YearEndReportNoteData": {
            "type": "object",
            "required": [
                "postType",
                "postValue"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "note": {
                    "$ref": "#/definitions/YearEndReportNote"
                },
                "noteGroupType": {
                    "type": "string",
                    "enum": [
                        "EXTRAORDINARY_INCOME_GROUP",
                        "EXTRAORDINARY_COST_GROUP",
                        "GROUP_GROUP",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_GROUP"
                    ]
                },
                "noteSubTypeGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "postType": {
                    "type": "string",
                    "enum": [
                        "ID_FOR_NOTE",
                        "IS_CHECKED",
                        "UPDATED_BY",
                        "UPDATED_DATE",
                        "ACCOUNTS",
                        "ACCOUNTING_PRINCIPLES_FREE_TEXT",
                        "ACCOUNTING_PRINCIPLES_USE_DEFAULT_TEXT",
                        "STILL_IN_BUSINESS",
                        "STILL_IN_BUSINESS_INFO",
                        "NUMBER_OF_MAN_YEARS",
                        "OPENING_BALANCE_SALARY",
                        "CLOSING_BALANCE_SALARY",
                        "OPENING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "CLOSING_BALANCE_NATIONAL_INSURANCE_CONTRIBUTIONS",
                        "OPENING_BALANCE_PENSION_COST",
                        "CLOSING_BALANCE_PENSION_COST",
                        "OPENING_BALANCE_OTHER_BENEFITS",
                        "CLOSING_BALANCE_OTHER_BENEFITS",
                        "ABOUT_MAN_YEARS_AND_SALARY",
                        "EXTRAORDINARY_INCOME_AND_COST",
                        "EXTRAORDINARY_INCOME_AND_COST_DESCRIPTION",
                        "EXTRAORDINARY_INCOME_AND_COST_AMOUNT",
                        "EXTRAORDINARY_INCOME_AND_COST_ADDITIONAL_INFORMATION",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_OPENING_ACQUISITION_COST_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_INFLOW_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DISPOSAL_IN_THE_YEAR_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_ACQUISITION_COST",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_TOTAL_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_CLOSING_CAPITALISED_VALUE",
                        "FIXED_ASSETS_DEPRECIATIONS_TANGIBLE_FIXED_ASSETS",
                        "FIXED_ASSETS_DEPRECIATIONS_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ECONOMIC_LIFE",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE_INTANGIBLE_ASSETS",
                        "FIXED_ASSETS_ACQUISITION_COST",
                        "FIXED_ASSETS_GOODWILL",
                        "FIXED_ASSETS_DEPRECIATION_SCHEDULE",
                        "FIXED_ASSETS_ADDITIONAL_INFORMATION",
                        "GROUP",
                        "GROUP_INVESTMENTS",
                        "GROUP_OPENING_BALANCE",
                        "GROUP_REVENUE_RECOGNIZED_AS_INCOME",
                        "GROUP_OTHER_CHANGES",
                        "GROUP_CLOSING_BALANCE",
                        "GROUP_ADDED_VALUE",
                        "GROUP_DEPRECIATION_OF_ADDED_VALUES",
                        "GROUP_GOODWILL",
                        "GROUP_DEPRECIATION_OF_GOODWILL",
                        "GROUP_TOTAL_ACQUISITION_COST",
                        "GROUP_TOTAL_CAPITALIZED_EQUITY",
                        "GROUP_IS_SUBSIDIARY",
                        "GROUP_NAME_OF_PARENT_COMPANY",
                        "GROUP_BUSINESS_OFFICE_PARENT_COMPANY",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION",
                        "GROUP_EXCLUDED_FROM_CONSOLIDATION_JUSTIFICATION",
                        "GROUP_TRANSACTIONS_WITH_SUBSIDIARIES",
                        "GROUP_INTERNAL_GAIN_TRANSACTIONS",
                        "GROUP_RECEIVABLES_AND_LIABILITIES",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_RECEIVABLES_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_LONG_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CORPORATE",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_COMPANY",
                        "OPENING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "CLOSING_BALANCE_SHORT_TERM_TOTAL_AMOUNT_CONTROLLED_COMPANY",
                        "OPENING_BALANCE_MORTGAGED_ASSETS",
                        "OPENING_BALANCE_OTHER_COLLATERAL",
                        "OPENING_BALANCE_GUANRANTEES",
                        "GROUP_RECEIVABLES_AND_LIABILITIES_ADDITIONAL_INFO",
                        "RECEIVABLES_FALL_DUE_LATER_THAN_ONE_YEAR",
                        "RECEIVABLES_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ASSET",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_REAL_VALUE",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_VALUE_ADJUSTMENT",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_ADDITIONAL_INFORMATION",
                        "ACTUAL_VALUE_FINACIAL_INSTRUMENTS_DESCRIPTION",
                        "HOLDING_OWN_SHARES",
                        "HOLDING_OWN_SHARES_NUMBER_OF_SHARES",
                        "HOLDING_OWN_SHARES_NOMINAL_VALUE_OF_SHARES",
                        "HOLDING_OWN_SHARES_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_ACQUISITIONS_REMUNERATION",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_REMUNERATION",
                        "OWN_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_PART_OF_SHARE_CAPITAL",
                        "OWN_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "PARENT_COMPANY_SHARES_ACQUISITIONS_BACKGROUND_ACQUISITIONS",
                        "OWN_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "PARENT_COMPANY_SHARES_DISPOSAL_NUMBER_OF_SHARES_ACQUIRED",
                        "OWN_SHARES_DISPOSAL_REMUNERATION",
                        "PARENT_COMPANY_SHARES_DISPOSAL_REMUNERATION",
                        "OWN_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "PARENT_COMPANY_SHARES_DISPOSAL_PART_OF_SHARE_CAPITAL",
                        "HOLDING_OWN_SHARES_THIS_YEARS_PAYOUT",
                        "HOLDING_OWN_SHARES_PROVISION_FOR_THE_YEAR",
                        "HOLDING_OWN_SHARES_PROVISIONS",
                        "HOLDING_OWN_SHARES_ADDITIONAL_INFORMATION",
                        "DEBT_DUE_FOR_PAYMENT",
                        "DEBT_SECURED_BY_MORTGAGE",
                        "DEBT_CAPITALISED_VALUE",
                        "DEBT_TOTAL_NON_RECOGNIZED_WARRANTY_OBLIGATIONS",
                        "DEBT_WARRANTY_OBLIGATIONS",
                        "DEBT_ADDITIONAL_INFORMATION",
                        "LOAN_AND_PROVISION_OF_SECURITY_IS_GRANTED",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_TOTAL_LOAN_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_PROVISION_OF_COLLATERAL_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_INTEREST_RATE_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_MAIN_TERMS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_REIMBURSED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_DEDUCTED_AMOUNT_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_BOARD_MEMBERS",
                        "LOAN_AND_PROVISION_OF_SECURITY_WAIVED_AMOUNTS_MEMBERS_OF_OTHER_BODIES",
                        "LOAN_AND_PROVISION_OF_SECURITY_ADDITIONAL_INFORMATION",
                        "FREE_NOTE_FREE_TEXT"
                    ]
                },
                "postValue": {
                    "type": "string",
                    "maxLength": 255
                },
                "postMediumTextValue": {
                    "type": "string"
                }
            }
        },
        "NoteOverview": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "noteContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/NoteContainer"
                    }
                }
            }
        },
        "ResponseWrapperNoteOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/NoteOverview"
                }
            }
        },
        "BalanceGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "type": "string",
                    "readOnly": true
                },
                "grouping": {
                    "type": "string",
                    "readOnly": true
                },
                "openingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "closingBalance": {
                    "type": "number",
                    "readOnly": true
                },
                "negate": {
                    "type": "boolean",
                    "description": "The amount from the balance are not prefixed. This property indicates if the value should be negated or not.",
                    "readOnly": true
                }
            }
        },
        "PersonalIncome": {
            "type": "object",
            "required": [
                "incomeGroupId",
                "postType",
                "postValue"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "incomeGroupId": {
                    "type": "integer",
                    "format": "int32"
                },
                "businessActivityType": {
                    "type": "string",
                    "enum": [
                        "OTHER_COMMERCIAL_ACTIVITIES",
                        "OTHER_COMMERCIAL_ACTIVITIES_2",
                        "OTHER_COMMERCIAL_ACTIVITIES_3",
                        "OTHER_COMMERCIAL_ACTIVITIES_4",
                        "AGRICULTURE_HORTICULTURE_FUR_FARMING",
                        "FISHING_AND_HUNTING_AT_SEA",
                        "REINDEER_HUSBANDRY",
                        "FAMILY_DAY_CARE_CENTRE_IN_OWN_HOME",
                        "SLATE_QUARRYING",
                        "FORESTRY"
                    ]
                },
                "postType": {
                    "type": "string",
                    "enum": [
                        "INTEREST_ON_ENTERPRISE_DEBT",
                        "CAPITAL_INCOME",
                        "CAPITAL_EXPENSES",
                        "REDUCTION_AMOUNT_FOR_RENTED_PROPERTY",
                        "GAINS_FROM_REALISATION_AGRICULTURE_OR_FORESTRY",
                        "NUMBER_OF_MONTHS_WITH_OPERATIONS",
                        "RISK_FREE_INTEREST_RATE",
                        "ENTERPRISE_DEBT_OB",
                        "ENTERPRISE_DEBT_CB",
                        "PROFIT_SHARE_SPOUSE",
                        "NEGATIVE_PERSONAL_INCOME_PREVIOUS_YEAR",
                        "COORDINATION_ENK",
                        "COORDINATION_ANS_DA",
                        "COORDINATION_LOTT",
                        "NEGATIVE_PERSONAL_INCOME_CARRIED_FORWARD_NEXT_YEAR",
                        "BUSINESS_TYPE_DESCRIPTION",
                        "INDUSTRY_TYPE",
                        "DISTRIBUTE_INCOME",
                        "NEGATIVE_PERSONAL_INCOME_PREVIOUS_YEAR_SPOUSE",
                        "COORDINATION_ENK_SPOUSE",
                        "COORDINATION_ANS_DA_SPOUSE",
                        "COORDINATION_LOTT_SPOUSE",
                        "NEGATIVE_PERSONAL_INCOME_CARRIED_FORWARD_NEXT_YEAR_SPOUSE"
                    ]
                },
                "postValue": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "PersonalIncomeOverview": {
            "type": "object",
            "properties": {
                "yearEndReport": {
                    "$ref": "#/definitions/YearEndReport"
                },
                "incomeGroupId": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "businessActivityType": {
                    "type": "string",
                    "enum": [
                        "OTHER_COMMERCIAL_ACTIVITIES",
                        "OTHER_COMMERCIAL_ACTIVITIES_2",
                        "OTHER_COMMERCIAL_ACTIVITIES_3",
                        "OTHER_COMMERCIAL_ACTIVITIES_4",
                        "AGRICULTURE_HORTICULTURE_FUR_FARMING",
                        "FISHING_AND_HUNTING_AT_SEA",
                        "REINDEER_HUSBANDRY",
                        "FAMILY_DAY_CARE_CENTRE_IN_OWN_HOME",
                        "SLATE_QUARRYING",
                        "FORESTRY"
                    ]
                },
                "industryId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "businessActivityTitle": {
                    "type": "string",
                    "readOnly": true
                },
                "businessActivityDescription": {
                    "type": "string",
                    "readOnly": true
                },
                "businessIncome": {
                    "type": "number",
                    "readOnly": true
                },
                "businessIncomeForestry": {
                    "type": "number",
                    "readOnly": true
                },
                "businessIncomeAgriculture": {
                    "type": "number",
                    "readOnly": true
                },
                "businessIncomeForestryAndAgriculture": {
                    "type": "number",
                    "readOnly": true
                },
                "hideFromPersonalIncome": {
                    "type": "boolean",
                    "readOnly": true
                },
                "showForestryAndAgricultureCombo": {
                    "type": "boolean",
                    "readOnly": true
                },
                "businessIncomeAfterSharedWithSpouse": {
                    "type": "number",
                    "readOnly": true
                },
                "businessIncomeAfterSharedWithSpouseForestry": {
                    "type": "number",
                    "readOnly": true
                },
                "businessIncomeAfterSharedWithSpouseAgriculture": {
                    "type": "number",
                    "readOnly": true
                },
                "correctedBusinessIncome": {
                    "type": "number",
                    "readOnly": true
                },
                "deductionsForRiskFreeReturn": {
                    "type": "number",
                    "readOnly": true
                },
                "riskFreeReturn": {
                    "type": "number",
                    "readOnly": true
                },
                "validBasisForRiskFreeReturn": {
                    "type": "boolean",
                    "readOnly": true
                },
                "personalIncomeForTheYear": {
                    "type": "number",
                    "readOnly": true
                },
                "afterSharedWithSpouse": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedPersonalIncomeSpouse": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedBusinessIncomeSpouse": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedBusinessIncomeSpouseForestry": {
                    "type": "number",
                    "readOnly": true
                },
                "calculatedBusinessIncomeSpouseAgriculture": {
                    "type": "number",
                    "readOnly": true
                },
                "afterCoordination": {
                    "type": "number",
                    "readOnly": true
                },
                "sumOpeningBalanceBeforeEnterpriseDebt": {
                    "type": "number",
                    "readOnly": true
                },
                "sumClosingBalanceBeforeEnterpriseDebt": {
                    "type": "number",
                    "readOnly": true
                },
                "sumOpeningBalanceAfterEnterpriseDebt": {
                    "type": "number",
                    "readOnly": true
                },
                "sumClosingBalanceAfterEnterpriseDebt": {
                    "type": "number",
                    "readOnly": true
                },
                "basisForRiskFreeReturnExEnterpriseDebt": {
                    "type": "number",
                    "readOnly": true
                },
                "basisEnterpriseDebt": {
                    "type": "number",
                    "readOnly": true
                },
                "basisForRiskFreeReturnIncEnterpriseDebt": {
                    "type": "number",
                    "readOnly": true
                },
                "balanceGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BalanceGroup"
                    }
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PersonalIncome"
                    }
                }
            }
        },
        "ResponseWrapperPersonalIncomeOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/PersonalIncomeOverview"
                }
            }
        },
        "ResponseWrapperListPersonalIncomeOverview": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PersonalIncomeOverview"
                    }
                }
            }
        },
        "ResponseWrapperTaxAdminSearchResponse": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TaxAdminSearchResponse"
                }
            }
        },
        "TaxAdminPhysicalAddress": {
            "type": "object",
            "properties": {
                "sergPropertyIdentifier": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "uniquePropertyIdentifier": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "addressName": {
                    "type": "string",
                    "readOnly": true
                },
                "houseNo": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "zipCode": {
                    "type": "string",
                    "readOnly": true
                },
                "postalPlaceName": {
                    "type": "string",
                    "readOnly": true
                },
                "highlight": {
                    "type": "string",
                    "readOnly": true
                },
                "properties": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TaxAdminProperty"
                    }
                }
            }
        },
        "TaxAdminProperty": {
            "type": "object",
            "properties": {
                "sergPropertyIdentifier": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "uniquePropertyIdentifier": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "propertyCreatedDate": {
                    "type": "string",
                    "readOnly": true
                },
                "municipalityNo": {
                    "type": "string",
                    "readOnly": true
                },
                "municipalityName": {
                    "type": "string",
                    "readOnly": true
                },
                "cadastralUnitNo": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "propertyUnitNo": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "leaseholdNo": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "sectionNo": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "historical": {
                    "type": "boolean",
                    "readOnly": true
                },
                "highlight": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "TaxAdminSearchResponse": {
            "type": "object",
            "properties": {
                "resultSize": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "properties": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TaxAdminProperty"
                    }
                },
                "physicalAddresses": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/TaxAdminPhysicalAddress"
                    }
                },
                "searchStart": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "searchEnd": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperTaxAdminCalculatedRentalValue": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TaxAdminCalculatedRentalValue"
                }
            }
        },
        "TaxAdminCalculatedRentalValue": {
            "type": "object",
            "properties": {
                "rentalValue": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "ResponseWrapperTaxAdminCalculatedMarketValue": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/TaxAdminCalculatedMarketValue"
                }
            }
        },
        "TaxAdminCalculatedMarketValue": {
            "type": "object",
            "properties": {
                "marketValue": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                }
            }
        },
        "ListResponseRiskFreeInterestRate": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/RiskFreeInterestRate"
                    }
                }
            }
        },
        "RiskFreeInterestRate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "year": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "companyType": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true,
                    "minimum": 0
                },
                "rate": {
                    "type": "number",
                    "readOnly": true
                }
            }
        },
        "ResponseWrapperZtlAccount": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ZtlAccount"
                }
            }
        },
        "ZtlAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 128
                },
                "account": {
                    "$ref": "#/definitions/Account"
                },
                "bban": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 50
                },
                "iban": {
                    "type": "string",
                    "readOnly": true,
                    "maxLength": 50
                },
                "currency": {
                    "readOnly": true,
                    "$ref": "#/definitions/Currency"
                },
                "availableBalanceCurrency": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "bookedBalanceCurrency": {
                    "readOnly": true,
                    "$ref": "#/definitions/TlxNumber"
                },
                "lastUpdated": {
                    "type": "string",
                    "description": "Last time the account information was updated, mainly balance.",
                    "readOnly": true
                },
                "deletable": {
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "ListResponseZtlAccount": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ZtlAccount"
                    }
                }
            }
        },
        "ResponseWrapperZtlConsent": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ZtlConsent"
                }
            }
        },
        "ZtlConsent": {
            "type": "object",
            "required": [
                "bank"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "consentUrl": {
                    "type": "string",
                    "readOnly": true
                },
                "valid": {
                    "type": "boolean",
                    "readOnly": true
                },
                "status": {
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                        "UNKNOWN",
                        "ACCEPTED",
                        "REJECTED",
                        "AUTHORIZATION_REQUIRED",
                        "REVOKED_BY_USER",
                        "REVOKED_BY_REMOVING_ACCESS",
                        "REVOKED_BY_CREATING_NEW_CONSENT",
                        "SCHEDULED_FOR_REVOKING",
                        "EXPIRED"
                    ]
                },
                "expirationDate": {
                    "type": "string",
                    "readOnly": true
                },
                "bank": {
                    "$ref": "#/definitions/Bank"
                },
                "consentReference": {
                    "type": "string",
                    "maxLength": 255
                },
                "ztlAccounts": {
                    "type": "array",
                    "description": "Link to accounts this consent belongs to",
                    "items": {
                        "$ref": "#/definitions/ZtlAccount"
                    }
                },
                "userIdOrSsn": {
                    "type": "string",
                    "description": "userId for DNB, socialSecurityNumber for other banks",
                    "maxLength": 100
                },
                "calledFromOnboarding": {
                    "type": "boolean",
                    "description": "Specify if this is called from the onboarding process"
                }
            }
        },
        "ListResponseZtlConsent": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ZtlConsent"
                    }
                }
            }
        },
        "ResponseWrapperZtlOnboarding": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ZtlOnboarding"
                }
            }
        },
        "ZtlOnboarding": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "version": {
                    "type": "integer",
                    "format": "int32"
                },
                "changes": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                },
                "url": {
                    "type": "string",
                    "readOnly": true
                },
                "onboardingUrl": {
                    "type": "string",
                    "maxLength": 255
                },
                "completedOnboarding": {
                    "type": "boolean"
                },
                "pending": {
                    "type": "boolean"
                }
            }
        },
        "ListResponseZtlOnboarding": {
            "type": "object",
            "properties": {
                "fullResultSize": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Indicates whether there are more values available. Note: The value is not exact",
                    "readOnly": true
                },
                "from": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "versionDigest": {
                    "type": "string",
                    "description": "Used to know if the paginated list has changed.",
                    "readOnly": true
                },
                "values": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ZtlOnboarding"
                    }
                }
            }
        },
        "ResponseWrapperZtlSettings": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/definitions/ZtlSettings"
                }
            }
        },
        "ZtlEmployee": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "pictureId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "consent": {
                    "readOnly": true,
                    "$ref": "#/definitions/ZtlConsent"
                }
            }
        },
        "ZtlSettings": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ZtlSettingsData"
                    }
                }
            }
        },
        "ZtlSettingsData": {
            "type": "object",
            "properties": {
                "bankName": {
                    "type": "string",
                    "readOnly": true
                },
                "bankId": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "accounts": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ZtlAccount"
                    }
                },
                "employees": {
                    "type": "array",
                    "readOnly": true,
                    "items": {
                        "$ref": "#/definitions/ZtlEmployee"
                    }
                }
            }
        }
    }
}
